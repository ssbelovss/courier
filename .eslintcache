[{"D:\\work\\Repo\\React\\menu\\app\\src\\index.js":"1","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\index.js":"2","D:\\work\\Repo\\React\\menu\\app\\src\\app\\index.js":"3","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\app\\actions.js":"4","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\app\\index.js":"5","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\forms\\index.js":"6","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\customers\\index.js":"7","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\user\\index.js":"8","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\auth\\index.js":"9","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\menu\\index.js":"10","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\basket\\index.js":"11","D:\\work\\Repo\\React\\menu\\app\\src\\menu\\index.js":"12","D:\\work\\Repo\\React\\menu\\app\\src\\auth\\index.js":"13","D:\\work\\Repo\\React\\menu\\app\\src\\main\\index.js":"14","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\app\\types.js":"15","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\menu\\actions.js":"16","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\basket\\actions.js":"17","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\customers\\actions.js":"18","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\user\\actions.js":"19","D:\\work\\Repo\\React\\menu\\app\\src\\js.lib\\math.js":"20","D:\\work\\Repo\\React\\menu\\app\\src\\elements\\listitems.js":"21","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\customers\\types.js":"22","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\user\\types.js":"23","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\auth\\types.js":"24","D:\\work\\Repo\\React\\menu\\app\\src\\auth\\TermsOfUse.js":"25","D:\\work\\Repo\\React\\menu\\app\\src\\auth\\AgreePersonalData.js":"26","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\main\\actions.js":"27","D:\\work\\Repo\\React\\menu\\app\\src\\api\\menu.js":"28","D:\\work\\Repo\\React\\menu\\app\\src\\api\\customers.js":"29","D:\\work\\Repo\\React\\menu\\app\\src\\api\\user.js":"30","D:\\work\\Repo\\React\\menu\\app\\src\\api\\order.js":"31","D:\\work\\Repo\\React\\menu\\app\\src\\api\\basket.js":"32","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\basket\\types.js":"33","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\menu\\types.js":"34","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\auth\\actions.js":"35","D:\\work\\Repo\\React\\menu\\app\\src\\elements\\loading.js":"36","D:\\work\\Repo\\React\\menu\\app\\src\\elements\\button.js":"37","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\selectors\\index.js":"38","D:\\work\\Repo\\React\\menu\\app\\src\\main\\header\\index.js":"39","D:\\work\\Repo\\React\\menu\\app\\src\\main\\profile\\index.js":"40","D:\\work\\Repo\\React\\menu\\app\\src\\main\\footer\\index.js":"41","D:\\work\\Repo\\React\\menu\\app\\src\\elements\\popup\\index.js":"42","D:\\work\\Repo\\React\\menu\\app\\src\\api\\config.js":"43","D:\\work\\Repo\\React\\menu\\app\\src\\api\\auth.js":"44","D:\\work\\Repo\\React\\menu\\app\\src\\basket\\index.js":"45","D:\\work\\Repo\\React\\menu\\app\\src\\main\\map\\index.js":"46","D:\\work\\Repo\\React\\menu\\app\\src\\main\\license\\delivery.js":"47","D:\\work\\Repo\\React\\menu\\app\\src\\main\\license\\bus.js":"48","D:\\work\\Repo\\React\\menu\\app\\src\\main\\license\\rest.js":"49","D:\\work\\Repo\\React\\menu\\app\\src\\forms\\index.js":"50","D:\\work\\Repo\\React\\menu\\app\\src\\basket\\math\\index.js":"51","D:\\work\\Repo\\React\\menu\\app\\src\\forms\\validate.js":"52","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\routes\\index.js":"53","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\routes\\actions.js":"54","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\routes\\types.js":"55","D:\\work\\Repo\\React\\menu\\app\\src\\api\\routes.js":"56","D:\\work\\Repo\\React\\menu\\app\\src\\main\\beacon\\index.js":"57","D:\\work\\Repo\\React\\menu\\app\\src\\elements\\specialHtmlElements.js":"58","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\beacon\\index.js":"59","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\beacon\\types.js":"60","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\beacon\\actions.js":"61","D:\\work\\Repo\\React\\menu\\app\\src\\api\\beacon.js":"62","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\popup\\index.js":"63","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\popup\\types.js":"64","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\popup\\actions.js":"65","D:\\work\\Repo\\React\\menu\\app\\src\\main\\customer\\index.js":"66","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\map\\index.js":"67","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\map\\actions.js":"68","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\map\\types.js":"69","D:\\work\\Repo\\React\\menu\\app\\src\\main\\map\\movingMarker.js":"70","D:\\work\\Repo\\React\\menu\\app\\src\\main\\customer\\map.js":"71","D:\\work\\Repo\\React\\adm_courier\\src\\index.js":"72","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\app\\actions.js":"73","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\index.js":"74","D:\\work\\Repo\\React\\adm_courier\\src\\app\\index.js":"75","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\app\\types.js":"76","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\user\\actions.js":"77","D:\\work\\Repo\\React\\adm_courier\\src\\api\\config.js":"78","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\user\\index.js":"79","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\user\\types.js":"80","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\app\\index.js":"81","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\popup\\index.js":"82","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\auth\\index.js":"83","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\menu\\index.js":"84","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\selectors\\index.js":"85","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\auth\\types.js":"86","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\popup\\actions.js":"87","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\menu\\actions.js":"88","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\popup\\types.js":"89","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\menu\\types.js":"90","D:\\work\\Repo\\React\\adm_courier\\src\\api\\menu.js":"91","D:\\work\\Repo\\React\\adm_courier\\src\\main\\map\\index.js":"92","D:\\work\\Repo\\React\\adm_courier\\src\\main\\machine\\index.js":"93","D:\\work\\Repo\\React\\adm_courier\\src\\main\\machine\\add\\index.js":"94","D:\\work\\Repo\\React\\adm_courier\\src\\main\\footer\\index.js":"95","D:\\work\\Repo\\React\\adm_courier\\src\\main\\header\\index.js":"96","D:\\work\\Repo\\React\\adm_courier\\src\\elements\\popup\\index.js":"97","D:\\work\\Repo\\React\\adm_courier\\src\\elements\\specialHtmlElements.js":"98","D:\\work\\Repo\\React\\adm_courier\\src\\js.lib\\math.js":"99","D:\\work\\Repo\\React\\adm_courier\\src\\api\\app.js":"100","D:\\work\\Repo\\React\\adm_courier\\src\\api\\machines.js":"101","D:\\work\\Repo\\React\\adm_courier\\src\\api\\user.js":"102","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\auth\\actions.js":"103","D:\\work\\Repo\\React\\adm_courier\\src\\main\\machine\\change.js":"104"},{"size":686,"mtime":1611759278205,"results":"105","hashOfConfig":"106"},{"size":1917,"mtime":1611759191758,"results":"107","hashOfConfig":"106"},{"size":1087,"mtime":1610461628812,"results":"108","hashOfConfig":"106"},{"size":2525,"mtime":1611758940123,"results":"109","hashOfConfig":"106"},{"size":1017,"mtime":1611757400679,"results":"110","hashOfConfig":"106"},{"size":177,"mtime":1603810015795,"results":"111","hashOfConfig":"106"},{"size":1242,"mtime":1608045971766,"results":"112","hashOfConfig":"106"},{"size":3626,"mtime":1611759759375,"results":"113","hashOfConfig":"106"},{"size":1570,"mtime":1602503301719,"results":"114","hashOfConfig":"106"},{"size":1241,"mtime":1601284690132,"results":"115","hashOfConfig":"106"},{"size":1813,"mtime":1601285489722,"results":"116","hashOfConfig":"106"},{"size":6938,"mtime":1603792745368,"results":"117","hashOfConfig":"106"},{"size":26815,"mtime":1608200730891,"results":"118","hashOfConfig":"106"},{"size":32783,"mtime":1611327902482,"results":"119","hashOfConfig":"106"},{"size":178,"mtime":1611756812190,"results":"120","hashOfConfig":"106"},{"size":1304,"mtime":1601284710723,"results":"121","hashOfConfig":"106"},{"size":4292,"mtime":1601034356734,"results":"122","hashOfConfig":"106"},{"size":2000,"mtime":1610617589309,"results":"123","hashOfConfig":"106"},{"size":4654,"mtime":1611760300046,"results":"124","hashOfConfig":"106"},{"size":10496,"mtime":1608214169406,"results":"125","hashOfConfig":"106"},{"size":800,"mtime":1605016522485,"results":"126","hashOfConfig":"106"},{"size":163,"mtime":1608039574849,"results":"127","hashOfConfig":"106"},{"size":532,"mtime":1611759602323,"results":"128","hashOfConfig":"106"},{"size":270,"mtime":1602159102208,"results":"129","hashOfConfig":"106"},{"size":39576,"mtime":1608200740793,"results":"130","hashOfConfig":"106"},{"size":14228,"mtime":1608200709035,"results":"131","hashOfConfig":"106"},{"size":0,"mtime":1602747680756,"results":"132","hashOfConfig":"133"},{"size":810,"mtime":1601028732954,"results":"134","hashOfConfig":"106"},{"size":1184,"mtime":1608038054337,"results":"135","hashOfConfig":"106"},{"size":3239,"mtime":1611760687314,"results":"136","hashOfConfig":"106"},{"size":5502,"mtime":1600932986626,"results":"137","hashOfConfig":"106"},{"size":1637,"mtime":1601895933157,"results":"138","hashOfConfig":"106"},{"size":332,"mtime":1600784025478,"results":"139","hashOfConfig":"106"},{"size":278,"mtime":1600773203758,"results":"140","hashOfConfig":"106"},{"size":1803,"mtime":1602506701542,"results":"141","hashOfConfig":"106"},{"size":353,"mtime":1609946467123,"results":"142","hashOfConfig":"106"},{"size":2011,"mtime":1603792523169,"results":"143","hashOfConfig":"106"},{"size":3484,"mtime":1611756538529,"results":"144","hashOfConfig":"106"},{"size":4681,"mtime":1611332606608,"results":"145","hashOfConfig":"106"},{"size":17107,"mtime":1611764109448,"results":"146","hashOfConfig":"106"},{"size":3059,"mtime":1608204376179,"results":"147","hashOfConfig":"106"},{"size":1730,"mtime":1610529529131,"results":"148","hashOfConfig":"106"},{"size":516,"mtime":1610099442987,"results":"149","hashOfConfig":"106"},{"size":927,"mtime":1602232861087,"results":"150","hashOfConfig":"106"},{"size":2224,"mtime":1601300185447,"results":"151","hashOfConfig":"106"},{"size":30969,"mtime":1611568762684,"results":"152","hashOfConfig":"106"},{"size":266,"mtime":1604935114737,"results":"153","hashOfConfig":"106"},{"size":32177,"mtime":1604935078655,"results":"154","hashOfConfig":"106"},{"size":262,"mtime":1604935129365,"results":"155","hashOfConfig":"106"},{"size":5340,"mtime":1609948366847,"results":"156","hashOfConfig":"106"},{"size":5461,"mtime":1600848499861,"results":"157","hashOfConfig":"106"},{"size":604,"mtime":1600947135550,"results":"158","hashOfConfig":"106"},{"size":1106,"mtime":1611263570158,"results":"159","hashOfConfig":"106"},{"size":3252,"mtime":1611265145079,"results":"160","hashOfConfig":"106"},{"size":178,"mtime":1608889284520,"results":"161","hashOfConfig":"106"},{"size":1440,"mtime":1611264834128,"results":"162","hashOfConfig":"106"},{"size":11890,"mtime":1611174791257,"results":"163","hashOfConfig":"106"},{"size":91,"mtime":1610017992495,"results":"164","hashOfConfig":"106"},{"size":2044,"mtime":1610382646274,"results":"165","hashOfConfig":"106"},{"size":460,"mtime":1610382585261,"results":"166","hashOfConfig":"106"},{"size":2936,"mtime":1610458559019,"results":"167","hashOfConfig":"106"},{"size":2540,"mtime":1611758915400,"results":"168","hashOfConfig":"106"},{"size":743,"mtime":1610469196462,"results":"169","hashOfConfig":"106"},{"size":80,"mtime":1610461428247,"results":"170","hashOfConfig":"106"},{"size":268,"mtime":1610461573071,"results":"171","hashOfConfig":"106"},{"size":8406,"mtime":1611755332247,"results":"172","hashOfConfig":"106"},{"size":1166,"mtime":1611265316049,"results":"173","hashOfConfig":"106"},{"size":409,"mtime":1611265136491,"results":"174","hashOfConfig":"106"},{"size":216,"mtime":1611130011895,"results":"175","hashOfConfig":"106"},{"size":9503,"mtime":1611080183975,"results":"176","hashOfConfig":"106"},{"size":1443,"mtime":1611517636987,"results":"177","hashOfConfig":"106"},{"size":551,"mtime":1612291764527,"results":"178","hashOfConfig":"179"},{"size":7248,"mtime":1612779956199,"results":"180","hashOfConfig":"179"},{"size":1041,"mtime":1612772761264,"results":"181","hashOfConfig":"179"},{"size":2373,"mtime":1612777432049,"results":"182","hashOfConfig":"179"},{"size":552,"mtime":1612778834657,"results":"183","hashOfConfig":"179"},{"size":521,"mtime":1612272286828,"results":"184","hashOfConfig":"179"},{"size":524,"mtime":1612797479395,"results":"185","hashOfConfig":"179"},{"size":1338,"mtime":1612339183341,"results":"186","hashOfConfig":"179"},{"size":76,"mtime":1611922733471,"results":"187","hashOfConfig":"179"},{"size":2513,"mtime":1612778817551,"results":"188","hashOfConfig":"179"},{"size":743,"mtime":1610469196462,"results":"189","hashOfConfig":"179"},{"size":942,"mtime":1612271583582,"results":"190","hashOfConfig":"179"},{"size":1724,"mtime":1612780414754,"results":"191","hashOfConfig":"179"},{"size":980,"mtime":1612777377910,"results":"192","hashOfConfig":"179"},{"size":48,"mtime":1611914024499,"results":"193","hashOfConfig":"179"},{"size":300,"mtime":1612269990874,"results":"194","hashOfConfig":"179"},{"size":2192,"mtime":1612782826937,"results":"195","hashOfConfig":"179"},{"size":80,"mtime":1610461428247,"results":"196","hashOfConfig":"179"},{"size":362,"mtime":1612778300827,"results":"197","hashOfConfig":"179"},{"size":1545,"mtime":1612797937573,"results":"198","hashOfConfig":"179"},{"size":6173,"mtime":1612291832674,"results":"199","hashOfConfig":"179"},{"size":3125,"mtime":1612195538429,"results":"200","hashOfConfig":"179"},{"size":2181,"mtime":1612256677693,"results":"201","hashOfConfig":"179"},{"size":2277,"mtime":1612779157734,"results":"202","hashOfConfig":"179"},{"size":1539,"mtime":1612289468889,"results":"203","hashOfConfig":"179"},{"size":1690,"mtime":1612289057565,"results":"204","hashOfConfig":"179"},{"size":91,"mtime":1610017992495,"results":"205","hashOfConfig":"179"},{"size":10496,"mtime":1608214169406,"results":"206","hashOfConfig":"179"},{"size":341,"mtime":1612181148610,"results":"207","hashOfConfig":"179"},{"size":1422,"mtime":1612797948776,"results":"208","hashOfConfig":"179"},{"size":3277,"mtime":1612258040308,"results":"209","hashOfConfig":"179"},{"size":254,"mtime":1611914237350,"results":"210","hashOfConfig":"179"},{"size":2494,"mtime":1612782965397,"results":"211","hashOfConfig":"179"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zx8ulh",{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"218"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"218"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"218"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"218"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},"f0wi9q",{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"218"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"218"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"218"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"218"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"218"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"218"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"218"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"218"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"218"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"218"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"218"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"218"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"371"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},"1yus7mk",{"filePath":"377","messages":"378","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"376"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"376"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"376"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"376"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"433"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},"D:\\work\\Repo\\React\\menu\\app\\src\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\app\\index.js",[],["446","447"],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\app\\actions.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\app\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\forms\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\customers\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\user\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\auth\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\menu\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\basket\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\menu\\index.js",["448","449"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    Redirect,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\"\r\nimport { motion } from 'framer-motion'\r\nimport { Popup } from '../elements/popup'\r\nimport { menuMapStateToProps, mealMapStateToProps } from '../reducers'\r\nimport { thunkSetLike as setLike, thunkRemoveLike as removeLike } from '../reducers/menu/actions'\r\nimport { thunkAddToBasket as toBasket, thunkRemoveFromBasket as fromBasket } from '../reducers/basket/actions'\r\nimport Basket from '../basket'\r\n\r\n  const PathContext = React.createContext('/main');\r\n\r\n  class Menu extends React.Component{\r\n\r\n      render(){\r\n        const rootPath = this.context;\r\n          return(\r\n              <div>\r\n                <h2>Меню</h2>\r\n                <Link to={`${rootPath}/meals`}><button>Блюда</button></Link>\r\n              </div>\r\n          );\r\n      }\r\n  }\r\n  Menu.contextType = PathContext;\r\n\r\n  class _Meals extends React.Component{\r\n    static propTypes = {\r\n      category: PropTypes.object.isRequired,\r\n      meals: PropTypes.array.isRequired,\r\n      orderMeals: PropTypes.object.isRequired,\r\n      setLike: PropTypes.func.isRequired,\r\n      removeLike: PropTypes.func.isRequired,\r\n      toBasket: PropTypes.func.isRequired,\r\n      fromBasket: PropTypes.func.isRequired\r\n  };\r\n\r\n      render(){\r\n        const rootPath = this.context;\r\n        const { category, meals, orderMeals, setLike, removeLike, toBasket, fromBasket } = this.props;\r\n          return(\r\n              <div>\r\n                <h2>Блюда</h2>\r\n                {meals.map(meal=>{\r\n                  return(\r\n                    <MealCard\r\n                      key={meal.id}\r\n                      extendLink={`${rootPath}/meals/${meal.id}`}\r\n                      meal={meal}\r\n                      setLike={setLike}\r\n                      removeLike={removeLike}\r\n                      toBasket={toBasket}\r\n                      fromBasket={fromBasket}\r\n                      count={orderMeals[meal.id] ? orderMeals[meal.id] : false}\r\n                      />)\r\n                })}\r\n              </div>\r\n          );\r\n      }\r\n  }\r\n  _Meals.contextType = PathContext;\r\n  const Meals = connect(\r\n    menuMapStateToProps,\r\n    { setLike, removeLike, toBasket, fromBasket }\r\n  )(_Meals)\r\n\r\n  class MealCard extends React.PureComponent{\r\n\r\n      render(){\r\n        const { meal, extendLink, setLike, removeLike, toBasket, fromBasket, count } = this.props;\r\n        const likeOnOff = (meal.favorite) ?\r\n                      <button onClick={()=>removeLike(meal.id)}>Remove like</button> :\r\n                      <button onClick={()=>setLike(meal.id)}>Set like</button> ;\r\n          return(\r\n              <div className='mealItem' id={`mealId_${meal.id}`}>\r\n                <h3>{meal.title} {likeOnOff} &mdash; {meal.price}&#8381; {count && `× ${count}`}</h3>\r\n                <Link to={extendLink}><button>Инфо</button></Link>{' '}\r\n                <button onClick={()=>toBasket(meal.id)}>Добавить в корзину</button>{' '}\r\n                {count && <button onClick={()=>fromBasket(meal.id)}>Удалить из корзины</button>}\r\n              </div>\r\n          );\r\n      }\r\n  }\r\n  \r\n  class AnimatedMealExtendCard extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.variants = {\r\n        hidden: { top: '100vh', opacity: 0 },\r\n        visible: { top: '10px', opacity: 1 }\r\n      }\r\n      this.state = {\r\n        animate: 'hidden',\r\n        close: false\r\n      }\r\n      this.duration = 300\r\n      this.closeComponent = this.closeComponent.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.setState({...this.state, \r\n        animate: 'visible'\r\n      })\r\n    }\r\n\r\n    closeComponent(){\r\n      this.setState({...this.state, \r\n        animate: 'hidden'\r\n      },()=>{setTimeout(()=>{\r\n        this.setState({...this.state,\r\n          close: true\r\n        })\r\n      }, this.duration)});\r\n    }\r\n\r\n      render(){\r\n          return(\r\n            <motion.div\r\n              className='descriptionMeal'\r\n              initial={this.variants.hidden}\r\n              animate={this.state.animate}\r\n              variants={this.variants}\r\n              transition={{ ease: \"easeOut\", duration: (this.duration/1000) }}\r\n              >\r\n              <MealExtendCard {...this.props} onClose={()=>this.closeComponent()}/>\r\n            {this.state.close && <Redirect to={`${this.context}/meals`}/>}\r\n            </motion.div>\r\n          );\r\n      }\r\n  }\r\n  AnimatedMealExtendCard.contextType = PathContext;\r\n\r\n  class _MealExtendCard extends React.Component{\r\n\r\n    static propTypes = {\r\n      orderMeals: PropTypes.object.isRequired,\r\n      meals: PropTypes.array.isRequired,\r\n      setLike: PropTypes.func.isRequired,\r\n      removeLike: PropTypes.func.isRequired,\r\n      toBasket: PropTypes.func.isRequired,\r\n      fromBasket: PropTypes.func.isRequired\r\n    };\r\n\r\n      render(){\r\n        const { orderMeals, meals, setLike, removeLike, toBasket, fromBasket, onClose } = this.props;\r\n        const id = this.props.match.params.mealId;\r\n        const count = orderMeals[id];\r\n        let meal = meals.filter(meal=>{\r\n          return +id === meal.id;\r\n        });\r\n        if(meal.length === 0) return null;\r\n        meal = meal[0];\r\n        const likeOnOff = (meal.favorite) ?\r\n                          <button onClick={()=>removeLike(meal.id)}>Remove like</button> :\r\n                          <button onClick={()=>setLike(meal.id)}>Set like</button> ;\r\n          return(\r\n            <>\r\n              <h2>Расширенная информация</h2>\r\n              <h3>Блюдо ID: {meal.id}</h3>\r\n              <h3>Блюдо TITLE: {meal.title}</h3>\r\n              {likeOnOff}\r\n              {count && `Количество в корзине: ${count}`}\r\n              <br/><button onClick={()=>toBasket(id)}>Добавить в корзину</button> {count && <button onClick={()=>fromBasket(id)}>Убрать из корзины</button>}\r\n              <br/><button onClick={onClose}>Закрыть блюдо</button>\r\n            </>\r\n          );\r\n      }\r\n  }\r\n  const MealExtendCard = connect(\r\n    mealMapStateToProps,\r\n    { setLike, removeLike, toBasket, fromBasket }\r\n  )(_MealExtendCard);\r\n\r\n  export default class AppMenu extends React.Component{\r\n      render(){\r\n        const rootPath = this.props.rootPath;\r\n          return(\r\n              <PathContext.Provider value={rootPath}>\r\n                <Route exact path={rootPath}>\r\n                    <Menu />\r\n                </Route>\r\n                <Route path={`${rootPath}/meals`}>\r\n                    <Meals />\r\n                    <Route path={`${rootPath}/meals/:mealId`} component={AnimatedMealExtendCard} />\r\n                </Route>\r\n                <Basket />\r\n              </PathContext.Provider>\r\n          );\r\n      }\r\n  }\r\n\r\n  ","D:\\work\\Repo\\React\\menu\\app\\src\\auth\\index.js",["450","451","452","453"],"import React, { Suspense } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { authUserMapStateToProps } from '../reducers'\r\nimport {\r\n    Redirect,\r\n    Route,\r\n    Link\r\n    } from \"react-router-dom\"\r\nimport {Button as NextButton} from '../elements/button'\r\nimport Loading from '../elements/loading'\r\n// import { Popup } from '../elements/popup'\r\nimport { \r\n    thunkSetSmsTime,\r\n    thunkSetNotAnon,\r\n    setRulesAgree,\r\n    setPhone,\r\n    setPhoneCode,\r\n    setWrongCode,\r\n    setSmsTime\r\n    } from '../reducers/auth/actions'\r\nimport {\r\n    thunkSetUser,\r\n    skipUserParam\r\n} from '../reducers/user/actions'\r\n\r\nimport '../css/auth.scss'\r\nimport '../css/cssshake.css'\r\n\r\nconst paths = [\r\n    '/phone',\r\n    '/check_agree',\r\n    '/sms_code',\r\n    '/name',\r\n    '/email',\r\n    '/main',\r\n    '/agree_personal_data',\r\n    '/terms_of_use'\r\n];\r\n\r\nconst PathContext = React.createContext('/login');\r\n\r\nclass _Auth extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            step: 0\r\n        }\r\n        this.stepUp = this.stepUp.bind(this);\r\n        this.stepBack = this.stepBack.bind(this);\r\n        this.updateCode = this.updatePhoneCode.bind(this);\r\n        this.updatePhone = this.updatePhone.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    componentDidUpdate(pP, pS){\r\n        showChange(pP.auth, this.props.auth);\r\n        showChange(pP.user, this.props.user);\r\n        showChange(pS, this.state);\r\n        const { auth, user } = this.props;\r\n        if(auth.phoneCode && auth.phone && auth.rulesAgree !== null && auth.smsTime === null && auth.anon === 1 && this.state.step !== 1){\r\n            if(this.state.step === 2){\r\n                console.log(`To step ${this.state.step} -> 0`);\r\n                this.setState({...this.state, step: 0});\r\n            }else if(this.state.step === 0 && pS.step !== 2){\r\n                console.log(`To step ${this.state.step} -> 1`);\r\n                this.setState({...this.state, step: 1});\r\n            }\r\n        }\r\n        if(auth.phoneCode && auth.phone && auth.rulesAgree === '1' && auth.smsTime !== null && auth.anon === 1 && this.state.step !== 2){\r\n            console.log(`To step ${this.state.step} -> 2`);\r\n            this.setState({...this.state, step: 2});\r\n        }\r\n        if(auth.anon === 0){\r\n            if(this.state.step !== 3 && user.name === '' && user.required.name && user.required.name !== 'skip'){\r\n                console.log(`To step ${this.state.step} -> 3`);\r\n                this.setState({...this.state, step: 3});\r\n            }\r\n            if(this.state.step !== 4 && (user.name !== '' || user.required.name === 'skip') && user.email === null && user.required.email && user.required.email !== 'skip'){\r\n                console.log(`To step ${this.state.step} -> 4`);\r\n                this.setState({...this.state, step: 4});\r\n            }\r\n            if(( (user.email !== null && !!user.required.email === true) ||\r\n                (!user.required.email) || (user.required.email === 'skip')) &&\r\n              ( (user.name !== '' && !!user.required.name === true) ||\r\n                (!user.required.name) || (user.required.name === 'skip'))){\r\n                    console.log(`To step ${this.state.step} -> 5`);\r\n                    if(this.state.step !== 5) this.setState({...this.state, step: 5});\r\n                }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.setSmsTime(null);\r\n        this.props.setRulesAgree(null);\r\n        this.props.setPhone('');\r\n        console.log('unMount Auth');\r\n    }\r\n\r\n    stepUp(options){\r\n        const { auth, user } = this.props;\r\n        console.log(`stepUp(${options.page})`, options);\r\n        switch(options.page){\r\n            case 'phone':\r\n            case 'agree':\r\n                if(auth.phoneCode && auth.phone){\r\n                    const agree = (auth.rulesAgree === null) ? '0' : auth.rulesAgree;\r\n                    this.props.thunkSetSmsTime({phone: auth.phoneCode + auth.phone, agree: agree});\r\n                }\r\n                break;\r\n            case 'sms':\r\n                if(auth.phoneCode && auth.phone && auth.rulesAgree==='1'){\r\n                    this.props.thunkSetNotAnon({phone: auth.phoneCode + auth.phone, agree: auth.rulesAgree, code: options.code});\r\n                }\r\n                break;\r\n            case 'name':\r\n            case 'email':\r\n                if(auth.anon === 0){\r\n                    const { page, ...params} = options;\r\n                    if(!params.skip){\r\n                        this.props.thunkSetUser(params);\r\n                    }else{\r\n                        this.props.skipUserParam({[options.page]: 'skip'});\r\n                    }\r\n                }\r\n                break;\r\n            default:break\r\n        }\r\n    }\r\n\r\n    stepBack(){\r\n        localStorage.removeItem('timerSMSenter');\r\n        this.props.setSmsTime(null);\r\n    }\r\n\r\n    updatePhone(number){\r\n        console.log('this.props.setPhone(number);');\r\n        this.props.setPhone(number);\r\n    }\r\n\r\n    updatePhoneCode(code){\r\n        localStorage.setItem('phoneCodeNumber', code);\r\n        this.props.setPhoneCode(code);\r\n    }\r\n\r\n    render(){\r\n      const rootPath = this.props.rootPath;\r\n      const { user, auth } = this.props;\r\n      const redirect = (this.state.step !== 5) ? <Redirect to={rootPath + paths[this.state.step]}/> : <Redirect to={paths[this.state.step]}/>;\r\n      console.log(`render Auth\\n\\r`, this.props.auth, this.props.user);\r\n      return(\r\n        <PathContext.Provider value={rootPath}>\r\n        <Route exact path={rootPath}>\r\n            <Redirect to={`${rootPath}/phone`}/>\r\n        </Route>\r\n        <Route path={`${rootPath}/phone`}>\r\n            {redirect}\r\n            <PhonePage updatePhone={this.updatePhone} phone={auth.phone} code={auth.phoneCode} stepUp={this.stepUp}/>\r\n        </Route>\r\n        <Route path={`${rootPath}/check_agree`}>\r\n            {redirect}\r\n            <AgreePage stepUp={this.stepUp} agree={auth.rulesAgree}/>\r\n        </Route>\r\n        <Route path={`${rootPath}/sms_code`}>\r\n            {redirect}\r\n            <SmsPage stepUp={this.stepUp} stepBack={this.stepBack} wrongCode={auth.wrongCode} setWrongCode={this.props.setWrongCode}/>\r\n        </Route>\r\n        <Route path={`${rootPath}/agree_personal_data`}>\r\n            <React.Suspense fallback={<Loading/>}>\r\n                <AgreePersonalData rootPath={rootPath}/>\r\n            </React.Suspense>\r\n        </Route>\r\n        <Route path={`${rootPath}/terms_of_use`}>\r\n            <React.Suspense fallback={<Loading/>}>\r\n                <TermsOfUse rootPath={rootPath}/>\r\n            </React.Suspense>\r\n        </Route>\r\n        <Route path={`${rootPath}/name`}>\r\n            {redirect}\r\n            <UserDataPage stepUp={this.stepUp} param='name' value={user.name}/>\r\n        </Route>\r\n        <Route path={`${rootPath}/email`}>\r\n            {redirect}\r\n            <UserDataPage stepUp={this.stepUp} param='email' value={user.email}/>\r\n        </Route>\r\n        <Route>\r\n            <Redirect to={`${rootPath}/phone`}/>\r\n        </Route>\r\n        </PathContext.Provider>\r\n      );\r\n    }\r\n  }\r\nconst Auth = connect(\r\n    authUserMapStateToProps,\r\n    { thunkSetSmsTime, thunkSetNotAnon, setPhone, setPhoneCode, setWrongCode, setSmsTime, setRulesAgree, thunkSetUser, skipUserParam }\r\n)(_Auth);\r\n\r\nclass PhonePage extends React.PureComponent{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            code: this.props.code,\r\n            phone: this.props.phone,\r\n            setButtonActive: null,\r\n            startTyping: false\r\n        }\r\n        this.dPadClick = this.dPadClick.bind(this);\r\n        this.delSymbol = this.delSymbol.bind(this);\r\n        this.phoneIsFull = this.phoneIsFull.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState(state=>({\r\n            ...state,\r\n            setButtonActive: this.phoneIsFull(state.phone),\r\n            startTyping: !!state.phone.length\r\n        }));\r\n    }\r\n\r\n    componentDidUpdate(pP, pS){\r\n        // console.log('update PhonePage');\r\n        // console.log(`pP: '${pP.phone}', pS: '${pS.phone}', P: '${this.props.phone}', S: '${this.state.phone}'`);\r\n        if(this.state.phone.length === 10 && this.state.setButtonActive !== null && pS.phone !== this.props.phone){\r\n            this.props.updatePhone(this.state.phone);\r\n        }\r\n    }\r\n\r\n    phoneIsFull(phone){\r\n        return (phone.length > 9) ? 'active' : null;\r\n    }\r\n\r\n    /*\r\n    static propTypes = {\r\n        name: PropTypes.string.isRequired,\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.object\r\n        ]),\r\n        anonymous: PropTypes.string.isRequired,\r\n        email: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.object\r\n        ]),\r\n        sex: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.object\r\n        ])\r\n    };\r\n    */\r\n\r\n    dPadClick(num){\r\n        if(typeof num === 'number'){\r\n            if(this.state.phone.length < 10){\r\n                // console.log(`dPadClick(${num})`);\r\n                const phone = this.state.phone + num;\r\n                this.setState(state=>({\r\n                    ...state,\r\n                    phone: phone,\r\n                    setButtonActive: this.phoneIsFull(phone),\r\n                    startTyping: !!phone.length\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    phoneToVisual(){\r\n        let phone = this.state.phone;\r\n        const num = phone.replace( /\\D/g, '' ).split( /(?=.)/ ), i = num.length;\r\n        if ( 0 <= i ) num.unshift( '' );\r\n        if ( 1 <= i ) num.splice( 1, 0, '' );\r\n        if ( 4 <= i ) num.splice( 5, 0, ' ' );\r\n        if ( 7 <= i ) num.splice( 9, 0, ' ' );\r\n        if ( 9 <= i ) num.splice( 12, 0, ' ' );\r\n        if ( 11 <= i ) num.splice( 15, num.length - 15 );\r\n        phone = num.join( '' );\r\n        return phone\r\n    }\r\n\r\n    delSymbol(){\r\n        let phone = this.state.phone;\r\n        phone = phone.substr(0, phone.length - 1);\r\n        this.setState(state=>({\r\n            ...state,\r\n            phone: phone,\r\n            setButtonActive: this.phoneIsFull(phone),\r\n            startTyping: !!phone.length\r\n        }));\r\n    }\r\n\r\n    render(){\r\n        const phoneVisual = this.phoneToVisual();\r\n        return(\r\n            <div className=\"page\">\r\n                <div className=\"rSelLang\">\r\n                    <div className=\"language\" data-active-language=\"ru\">ru<img alt='' src={require(\"../img/new/lang-arr-choice.png\").default}/></div>\r\n                </div>\r\n                <div className=\"rTxtPhoneNumber\" data-translate=\"auth_for_access_enter_phone\">\r\n                    Для&nbsp;авторизации введите&nbsp;номер&nbsp;телефона\r\n                </div>\r\n                <div className=\"rInptPhone\">\r\n                    <input name=\"codeVisual\" value={this.state.code} type=\"text\" readOnly/>\r\n                    <div className=\"phoneVisual\" name=\"phoneVisual\">{phoneVisual}<span></span></div>\r\n                    <img alt='' src={require(\"../img/new/backspace.svg\")} onClick={this.delSymbol}/>\r\n                </div>\r\n                <DPad dPadClick={this.dPadClick} okButtonActive={this.state.setButtonActive} stepUp={this.props.stepUp}/>\r\n                <div className=\"rButton\">\r\n                    {!this.state.startTyping && <div className=\"next\" data-translate=\"menu_cancel\">Отмена</div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass DPad extends React.PureComponent{\r\n    \r\n    render(){\r\n        let ok, del;\r\n        if(this.props.okButtonActive !== undefined){\r\n            ok = this.props.okButtonActive;\r\n        }\r\n        if(this.props.delButtonActive !== undefined){\r\n            del = this.props.delButtonActive;\r\n        }\r\n        const okButton = (ok !== undefined) ?\r\n            <DPadButton okb={'ok'} active={ok} onClick={()=>this.props.stepUp({page:'phone'})}><img alt='' src={require(\"../img/new/ok-check.svg\").default}/></DPadButton> :\r\n            null ;\r\n        const delButton= (del !== undefined) ?\r\n            <DPadButton delb={'del'} active={del} onTouchStart={()=>this.props.dPadClick('del')}><img alt='' src={require(\"../img/new/del_arr.svg\").default}/></DPadButton> :\r\n            null ;\r\n        const setButton = (okButton == null && delButton == null) ? <DPadButton>&nbsp;</DPadButton> : okButton || delButton;\r\n\r\n        return(\r\n            <div className=\"rDPad\">\r\n                <div className=\"rDPad_r\">\r\n                    <DPadButton onTouchStart={()=>this.props.dPadClick(1)}><span>1</span></DPadButton>\r\n                    <DPadButton onTouchStart={()=>this.props.dPadClick(2)}><span>2</span></DPadButton>\r\n                    <DPadButton onTouchStart={()=>this.props.dPadClick(3)}><span>3</span></DPadButton>\r\n                </div>\r\n                <div className=\"rDPad_r\">\r\n                    <DPadButton onTouchStart={()=>this.props.dPadClick(4)}><span>4</span></DPadButton>\r\n                    <DPadButton onTouchStart={()=>this.props.dPadClick(5)}><span>5</span></DPadButton>\r\n                    <DPadButton onTouchStart={()=>this.props.dPadClick(6)}><span>6</span></DPadButton>\r\n                </div>\r\n                <div className=\"rDPad_r\">\r\n                    <DPadButton onTouchStart={()=>this.props.dPadClick(7)}><span>7</span></DPadButton>\r\n                    <DPadButton onTouchStart={()=>this.props.dPadClick(8)}><span>8</span></DPadButton>\r\n                    <DPadButton onTouchStart={()=>this.props.dPadClick(9)}><span>9</span></DPadButton>\r\n                </div>\r\n                <div className=\"rDPad_r\">\r\n                    <DPadButton>&nbsp;</DPadButton>\r\n                    <DPadButton onTouchStart={()=>this.props.dPadClick(0)}><span>0</span></DPadButton>\r\n                    {setButton}\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass DPadButton extends React.PureComponent{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            onClass: false\r\n        }\r\n        this.tapStart = this.tapStart.bind(this)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    static timer;\r\n\r\n    tapStart(){\r\n        if(this.props.onTouchStart) this.props.onTouchStart();\r\n        this.setState({\r\n            onClass: true\r\n        }, ()=>this.timer = setTimeout( t => t.setState({onClass: false}), 300, this));\r\n    }\r\n\r\n    render(){\r\n        const ok = (this.props.okb) ? ' ok' : '';\r\n        const del = (this.props.delb) ? ' del' : '';\r\n        const active = (this.props.active) ? ' active' : '';\r\n        const on = (this.state.onClass) ? ' on' : '';\r\n\r\n        return(\r\n            <div className={`rDPad_rc${ok}${del}${active}${on}`} {...this.props} onTouchStart={this.tapStart}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass _AgreePage extends React.PureComponent{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            nextStep: (localStorage.getItem('login_agree')) ? true : false\r\n        }\r\n        this.checkField = this.checkField.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    checkField(e){\r\n        const checked = e.target.checked ? '1' : null;\r\n        this.props.setRulesAgree(checked);\r\n    }\r\n\r\n    render(){\r\n        const rootPath = this.context;\r\n        const checked = (this.props.agree && this.props.agree === '1') ? true : false;\r\n        const active = (checked) ? ' active' : '';\r\n        const _click = (checked) ? {onClick: ()=>this.props.stepUp({page:'agree'})} : {};\r\n        return(\r\n            <div className=\"page\">\r\n                <div className=\"rTxtAgree\">\r\n                    <div className=\"\">\r\n                        <i data-translate=\"auth_i_hereby_give_my\">Настоящим вы подтверждаете согласие с</i>&nbsp;\r\n                        <Link className='no-decor' to={`${rootPath}/agree_personal_data`}><b data-translate=\"auth_consent_the_processing_personal_data\">политикой конфиденциальности</b></Link>\r\n                        , <Link className='no-decor' to={`${rootPath}/terms_of_use`}><b data-translate=\"auth_consent_the_terms_of_use\">пользовательским соглашением</b></Link>.\r\n                    </div>\r\n                </div>\r\n                <div className=\"rChkBx\">\r\n                    <input type=\"checkbox\" checked={checked} id=\"enterAgree\" onChange={this.checkField}/><label htmlFor=\"enterAgree\" className=\"checkbox\">Согласен</label>\r\n                </div>\r\n                <div className=\"rButton\">\r\n                    <div className={`agree${active}`} {..._click} data-translate=\"auth_next\">Далее</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n_AgreePage.contextType = PathContext;\r\nconst AgreePage = connect(\r\n    authUserMapStateToProps,\r\n    { setRulesAgree }\r\n)(_AgreePage);\r\n\r\nclass UserDataPage extends React.PureComponent{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNullLength: true,\r\n            value: '',\r\n            valid: false\r\n        }\r\n        this.upState = this.upState.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    upState(state){\r\n        this.setState({...state})\r\n    }\r\n\r\n    render(){\r\n        const { param, value, stepUp } = this.props;\r\n        const active = (this.state.valid) ? ' active' : '';\r\n        const textButton = (this.state.valid) ? 'Далее' : 'Пропустить';\r\n        const click = (this.state.valid) ? {onClick: ()=>stepUp({page: param, [param]: this.state.value})} : {onClick: ()=>stepUp({page: param, skip: 1})};\r\n        console.log('Page', this.state);\r\n        return(\r\n            <div className=\"page\">\r\n                <UserData param={param} upState={this.upState} value={value}/>\r\n                <div className=\"rSpace\"></div>\r\n                <div className=\"rButton\">\r\n                    <div {...click} className={`sendEmail${active}`} data-translate=\"auth_skip\">{textButton}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass UserData extends React.PureComponent{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            valid: false,\r\n            value: '',\r\n            isNullLength: true\r\n        }\r\n        this.checkEmail = this.checkEmail.bind(this);\r\n        this.checkName = this.checkName.bind(this);\r\n        this.checkField = this.checkField.bind(this);\r\n    }\r\n\r\n    checkEmail(v){\r\n        const re = /^[\\w]{2}[\\w-.]*@[\\w-]+\\.[a-z]{2,4}$/i;\r\n        return re.test(v);        \r\n    }\r\n\r\n    checkName(v){\r\n        return v.length > 2\r\n    }\r\n\r\n    checkField(e){\r\n        let valid;\r\n        const v = e.target.value;\r\n        switch(this.props.param){\r\n            case 'email':\r\n                valid = this.checkEmail(v);\r\n                break;\r\n            case 'name':\r\n                valid = this.checkName(v);\r\n                break;\r\n            default:break;\r\n        }\r\n        this.setState({\r\n            valid: valid,\r\n            isNullLength: !v.length,\r\n            value: v\r\n        }, ()=>this.props.upState({\r\n            isNullLength: this.state.isNullLength,\r\n            value: this.state.value,\r\n            valid: this.state.valid\r\n        }));\r\n    }\r\n\r\n    render(){\r\n        const cl = (this.state.valid) ? ' valid' : '';\r\n        const typing = (!this.state.isNullLength) ? ' typing' : '';\r\n        const text = (this.props.param === 'email') ?\r\n                `Введите, пожалуйста, свой Email. Он необходим для&nbsp;отправки вам электронных чеков (никакого спама и&nbsp;рекламы). Или сделайте это потом, через свой профиль.` :\r\n                'Введите свой никнейм';\r\n        const placeholder = (this.props.param === 'email') ? 'Ваш email' : 'Ваш никнейм';\r\n        console.log('Field', this.state);\r\n        return(\r\n            <>\r\n                <div className=\"rTxtEmail\">\r\n                    <div data-translate=\"auth_please_fill_email_field\" dangerouslySetInnerHTML={{__html: text }}></div>\r\n                </div>\r\n                <div className=\"rInptEmal\">\r\n                    <input type=\"text\" className={`email_profile${cl}${typing}`} data-attr-translate=\"placeholder\" data-attr-translate-value=\"profile_your_email\" placeholder={placeholder} onChange={this.checkField}/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nclass SmsPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            code: '',\r\n            editable: true\r\n        }\r\n        this.dPadClick = this.dPadClick.bind(this);\r\n    }\r\n\r\n    static timer;\r\n\r\n    componentDidUpdate(pP, pS){\r\n        if(this.props.wrongCode && this.state.code.length === 4){\r\n            this.timer = setTimeout(()=>{\r\n                this.setState(state=>(\r\n                    {...state,\r\n                        code: '',\r\n                        editable: true\r\n                    }\r\n                ),()=>this.props.setWrongCode(false));\r\n            },500)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearTimeout(this.timer);\r\n        if(this.props.wrongCode) this.props.setWrongCode(false);\r\n    }\r\n\r\n    dPadClick(num){\r\n        if(!this.state.editable) return;\r\n        let code = this.state.code;\r\n        if(typeof num === 'number'){\r\n            code = code.concat(num);\r\n        }else{\r\n            if(code.length > 0){\r\n                code = code.substring(code.length-1, 0);\r\n            }\r\n        }\r\n        const edit = (code.length === 4) ? false : true;\r\n        this.setState(state=>({\r\n            ...state,\r\n            code: code,\r\n            editable: edit\r\n            }), ()=>{\r\n                if(this.state.code.length === 4){\r\n                    this.props.stepUp({page: 'sms', code: this.state.code});\r\n                }\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const shake = (this.props.wrongCode) ? ' shake-horizontal shake-constant' : false;\r\n        return(\r\n            <div className=\"page\">\r\n                <div> </div>\r\n                <div className=\"rTxtSms\" data-translate=\"auth_enter_code_from_sms\">Введите код из&nbsp;СМС сообщения</div>\r\n                <SmsCodePane shake={shake} code={this.state.code}/>\r\n                <SmsTimeLeft stepBack={this.props.stepBack}/>\r\n                <DPad dPadClick={this.dPadClick} delButtonActive='active'/>\r\n                <div> </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SmsCodePane extends React.PureComponent{\r\n    render(){\r\n        let code = this.props.code.split('');\r\n        code = code.concat(new Array(4-code.length).fill(null));\r\n        const shake = (this.props.shake) ? this.props.shake : '';\r\n        return (\r\n            <div className={`rSmsCode${shake}`}>\r\n                {code.map((s,i)=>{\r\n                    return <SmsDot key={i} s={s} keyself={i}/>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass SmsDot extends React.PureComponent{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            class: (this.props.s) ? ' transparent' : '',\r\n            content: this.props.s\r\n        }\r\n    }\r\n\r\n    static timer;\r\n\r\n    componentDidMount(){\r\n        if(this.state.content !== null){\r\n            this.timer = setTimeout(()=>{\r\n                this.setState(state=>({...state, class: ' red', content: null}));\r\n                this.timer = undefined;\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.s === this.props.s && this.props.s !== null){\r\n            // transparent -> red\r\n        }else{\r\n            if(prevProps.s === null && this.props.s !== null){\r\n                this.setState(state=>({...state, class: ' transparent', content: this.props.s}),\r\n                ()=>{\r\n                    this.timer = setTimeout(()=>{\r\n                        this.setState(state=>({...state, class: ' red', content: null}));\r\n                        this.timer = undefined;\r\n                    }, 350);\r\n                });\r\n            }else if(prevProps.s !== null){\r\n                this.setState(state=>({...state, class: '', content: null}));\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if(this.timer) clearTimeout(this.timer);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className={`rsc_dot${this.state.class}`}>{this.state.content}</div>\r\n        )\r\n    }\r\n}\r\n\r\nclass SmsTimeLeft extends React.PureComponent{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            min: 2,\r\n            sec: 0\r\n        }\r\n        this.tick = this.tick.bind(this);\r\n    }\r\n\r\n    tick(){\r\n        const start = new Date(localStorage.getItem('timerSMSenter'));\r\n        const now = new Date();\r\n        const present = parseInt((start - now)/1000);\r\n        let m = parseInt(present/60);\r\n        let s = (present) - m*60;\r\n        if(m+s < 0){\r\n            clearTimeout(this.timer);\r\n            this.props.stepBack();\r\n        }\r\n        else{\r\n            this.timer = setTimeout(this.tick, 1000);\r\n        }\r\n        if(m+s >= 0) this.setState({...this.state, min: m, sec: s});\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.tick();\r\n    }\r\n\r\n    static timer;\r\n\r\n    componentWillUnmount(){\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"rSmsTime\">\r\n                <div className=\"rstMDash\">&ndash;</div>\r\n                <div className=\"rst_time\">{this.state.min}:{`0${this.state.sec}`.slice(-2)}</div>\r\n                <div className=\"rstMDash\">&ndash;</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst AgreePersonalData = React.lazy(() => import('./AgreePersonalData'));\r\nconst TermsOfUse = React.lazy(() => import('./TermsOfUse'));\r\n\r\nfunction showChange(prev, pres){\r\n    let ch = {};\r\n    let added = {};\r\n    let removed = {};\r\n    for(let key in pres){\r\n        const value = pres[key];\r\n        if(prev[key] !== undefined){\r\n            if(prev[key] !== value){\r\n                ch[key] = `${prev[key]} -> ${value}`;\r\n            }\r\n        }else{\r\n            added[key] = value;\r\n        }\r\n    }\r\n    for(let key in prev){\r\n        const value = prev[key];\r\n        if(pres[key] === undefined){\r\n            removed[key] = value;\r\n        }\r\n    }\r\n    console.log('changes:', ch, added, removed);\r\n}\r\n\r\nexport { Auth as default }","D:\\work\\Repo\\React\\menu\\app\\src\\main\\index.js",["454","455","456","457","458","459"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    Redirect,\r\n    Route\r\n  } from 'react-router-dom'\r\nimport { withRouter } from 'react-router'\r\nimport { motion } from 'framer-motion'\r\nimport ListItems from '../elements/listitems.js'\r\nimport { formMapStateToProps, checksMapStateToProps, shareMapStateToProps, usedCustomersMapStateToProps } from '../reducers'\r\nimport {\r\n    thunkLoadUsedCustomers as loadUsedCustomers,\r\n    thunkLoadChecks as loadChecks,\r\n    thunkLoadShare as loadShare,\r\n    thunkSetShareLike as setShareLike,\r\n    thunkRemoveShareLike as removeShareLike,\r\n    setVisibleShareType\r\n} from '../reducers/user/actions'\r\nimport { thunkSetLike as setLike, thunkRemoveLike as removeLike } from '../reducers/menu/actions'\r\nimport { math } from '../js.lib/math.js'\r\nimport QRCode from 'qrcode.react'\r\n\r\nimport Footer from './footer'\r\nimport Header from './header'\r\nimport AppProfile from './profile'\r\nimport AppMap from './map'\r\nimport Beacon from './beacon'\r\nimport Customer from './customer'\r\nimport { CustomerMap } from './customer/map'\r\nimport { Popup } from '../elements/popup'\r\nimport { NBSP } from '../elements/specialHtmlElements.js'\r\n\r\nimport '../css/main.scss'\r\nimport '../css/orderslist.scss'\r\n\r\nclass _AppMain extends React.PureComponent{\r\n    constructor(props){\r\n        super(props);\r\n        this.historyBack = this.historyBack.bind(this);\r\n    }\r\n\r\n    componentDidMount(){}\r\n\r\n    historyBack(page){\r\n        let back = null;\r\n        const ar = page.split('/');\r\n        if(ar.length > 3){\r\n            ar.pop();\r\n            back = ar.join('/');\r\n        }\r\n        return back;\r\n    }\r\n\r\n    render(){\r\n        const pageClassName = ['page'];\r\n        const { history, rootPath, inputFormSelected, popupIsShown } = this.props;\r\n        const actualPage = history.location.pathname;\r\n        const backPage = this.historyBack(actualPage);\r\n        // console.log('backPage:',backPage)\r\n        const back = (backPage) ? ()=>history.push(backPage) : null;\r\n        if(inputFormSelected) pageClassName.push('justifyTop')\r\n        if(popupIsShown) pageClassName.push('popupShow')\r\n        return(\r\n            <>\r\n            <div className={pageClassName.join(' ')}>\r\n                <Header back={back} actualPage={actualPage}/>\r\n\r\n                <Route exact path={rootPath}>\r\n                    <AppMap rootPath={rootPath} />\r\n                </Route>\r\n\r\n                <Route path={`${rootPath}/news`}>\r\n                    <News rootPath={rootPath} />\r\n                </Route>\r\n\r\n                <Route exact path={`${rootPath}/checks`}>\r\n                    <Checks rootPath={`${rootPath}/checks`} />\r\n                </Route>\r\n\r\n                <Route exact path={`${rootPath}/customer`}>\r\n                    <Redirect to={`${rootPath}`} />\r\n                </Route>\r\n                <Route exact path={`${rootPath}/customer/:customerId`} rootPath={`${rootPath}/customer`} component={Customer}/>\r\n                <Route path={`${rootPath}/customer/:customerId/map`} rootPath={`${rootPath}/customer`} component={CustomerMap}/>\r\n\r\n                <Route exact path={`${rootPath}/checks/:customerType`}>\r\n                    <Redirect to={`${rootPath}/checks`} />\r\n                </Route>\r\n                <Route path={`${rootPath}/checks/:customerType/:customerId`} component={ChecksCustomer}/>\r\n\r\n                <Route path={`${rootPath}/profile`}>\r\n                    <AppProfile rootPath={`${rootPath}/profile`} />\r\n                </Route>\r\n\r\n                <Footer actualPage={actualPage} rootPath={rootPath}/>\r\n            </div>\r\n            <Beacon/>\r\n            <Popup/>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst AppMain_ = withRouter(_AppMain);\r\nconst AppMain = connect(\r\n    formMapStateToProps\r\n    )(AppMain_);\r\n\r\nclass News_ extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            reciving: false,\r\n            page: 0\r\n        }\r\n        this.loadShare = this.loadShare.bind(this);\r\n        this.setShareLike = this.setShareLike.bind(this);\r\n        this.removeShareLike = this.removeShareLike.bind(this);\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadShare();\r\n    }\r\n\r\n    componentDidUpdate(pP, pS){\r\n        // const { type, id } = this.state;\r\n        // const prevCL = pP.checks[type] && pP.checks[type][id] && Object.keys(pP.checks[type][id]).length;\r\n        // const presCL = this.props.checks[type] && this.props.checks[type][id] && Object.keys(this.props.checks[type][id]).length;\r\n        // console.log('updated');\r\n        // console.log('prev', prevCL);\r\n        // console.log('prop', presCL);\r\n        // console.log('prev P', pP);\r\n        // console.log('prop P', this.props);\r\n        // console.log('prev State', pS);\r\n        // console.log('State', this.state);\r\n        if(pS.reciving){\r\n            // console.log('recive');\r\n            this.setState(state=>{\r\n                return {\r\n                    ...state,\r\n                    reciving: false\r\n                }\r\n            })\r\n        }\r\n        if(this.props.share.active !== pP.share.active){\r\n            this.myRef.current.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    loadShare(){\r\n        const c = this.props.customers;\r\n        if(Object.keys(c).length){\r\n            const { page } = this.state;\r\n            this.props.loadShare({page: page});\r\n            this.setState(state=>{\r\n                return {...state, page: state.page+1, reciving: true}\r\n            });\r\n        }else{\r\n            setTimeout(this.loadShare, 500);\r\n        }\r\n    }\r\n\r\n    setShareLike(id){\r\n        this.props.setShareLike(id);\r\n    }\r\n\r\n    removeShareLike(id){\r\n        this.props.removeShareLike(id);\r\n    }\r\n\r\n    render(){\r\n        const { share, setVisibleShareType, setShareLike, removeShareLike, customers } = this.props;\r\n        const items = (share.active !== 'favorite') ? Object.values(share[share.active]) : getLikedShare(share);\r\n        const list = items.map(item => {\r\n            const customer = (!customers[item.id_customer]) ? {logo: '', name_ui: 'Название кастомера'} : {logo: customers[item.id_customer].logo25, name_ui: customers[item.id_customer].name_ui}\r\n            return <ShareItem key={item.id} like={{set: setShareLike, remove: removeShareLike}} share={item} customer={customer}/>\r\n        });\r\n        if(list.length){\r\n            const click = (!this.state.reciving) ? ()=>this.loadShare() : null;\r\n            list.push(<GetNextPage key='nextPage' reciving={this.state.reciving} onClick={click}/>);\r\n          }\r\n        return(\r\n            <div className={`page-content`}>\r\n                <div className=\"shareView\">\r\n                    <NewsSelector click={setVisibleShareType} active={share.active} />\r\n                    <div className=\"shareList\" ref={this.myRef}>\r\n                        {(list.length && list) || (this.state.reciving === true && <div>...Loading...</div>) || <div>Пока тихо</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst News = connect(\r\n    shareMapStateToProps,{\r\n        loadShare,\r\n        setVisibleShareType,\r\n        setShareLike,\r\n        removeShareLike\r\n    }\r\n    )(News_);\r\n\r\nfunction getLikedShare(share){\r\n    const list = {...share.action, ...share.news};\r\n    const liked = [];\r\n    for(let id in list){\r\n        if(list[id].favorite !== null) liked.push(list[id]);\r\n    }\r\n    return liked;\r\n}\r\n\r\nclass NewsSelector extends React.Component{\r\n    render(){\r\n        const { active, click } = this.props;\r\n        return(\r\n            <div className=\"newsSectors\">\r\n                {(active==='favorite' && <div className=\"newsSector light\">Избранное</div>) || <div className=\"newsSector\" onClick={()=>click('favorite')}>Избранное</div>}\r\n                {(active==='news' && <div className=\"newsSector light\">Новости</div>) || <div className=\"newsSector\" onClick={()=>click('news')}>Новости</div>}\r\n                {(active==='action' && <div className=\"newsSector light\">Акции</div>) || <div className=\"newsSector\" onClick={()=>click('action')}>Акции</div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ShareItem extends React.PureComponent{\r\n    constructor(props){\r\n        super(props);\r\n        this.elem = document.createElement('p');\r\n    }\r\n\r\n    formatText(text){\r\n        let out = text.split(/\\n/);\r\n        for(let i in out){\r\n            let string = this.decode(out[i]);\r\n            if(/\\[url:.+?\\[\\/url\\]/gi.test(string)){\r\n                const links = string.match(/\\[url:.+?\\[\\/url\\]/gi);\r\n                const arr = [];\r\n                for(let j in links){\r\n                    let link = links[j];\r\n                    let l = this.findLink(link);\r\n                    arr.push(string.substring(0, string.indexOf(link)));\r\n                    let after = string.substring(string.indexOf(link) + link.length);\r\n                    if(this.parseLink(l.link)){\r\n                        arr.push(<Url key={`${i}_${j}_url`} href={l.link}>{l.text}</Url>)\r\n                    }else{\r\n                        arr.push(l.text);\r\n                    }\r\n                    if(j === links.length){\r\n                        arr.push(after);\r\n                    }else{\r\n                        string = after;\r\n                    }\r\n                }\r\n                out[i] = arr;\r\n            }\r\n        }\r\n        const _text = []\r\n        for(let i in out){\r\n            if(typeof out[i] !== 'string'){\r\n                for(let j in out[i]){\r\n                    if(out[i][j] !== ''){\r\n                        if(typeof out[i][j] !== 'string'){\r\n                            _text.push(out[i][j]);\r\n                        }else{\r\n                            _text.push(<React.Fragment key={`${i}_${j}`}>{out[i][j]}</React.Fragment>);\r\n                        }\r\n                    }\r\n                }\r\n            }else{\r\n                if(out[i] !== '') _text.push(<React.Fragment key={i}>{this.decode(out[i])}</React.Fragment>);\r\n            }\r\n            _text.push(<br key={`${i}_br`}/>);\r\n        }\r\n        return _text;\r\n    }\r\n\r\n    decode(text){\r\n        this.elem.innerHTML = text;\r\n        return decodeURIComponent(this.elem.innerHTML);\r\n    }\r\n\r\n    findLink(text){\r\n        text = text.substring(text.indexOf('['));\r\n        let link = text.match(/\\[url:.+?\\]/i)[0];\r\n        text = text.substring(link.length);\r\n        text = text.replace('[/url]','');\r\n        link = link.substring(5,link.length-1);\r\n        return {link: link, text: text};\r\n    }\r\n\r\n    parseLink(a){\r\n        try{\r\n            const href = new URL(a);\r\n            return true;\r\n        }catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { share, customer, like } = this.props;\r\n        const type = (share.type === '1') ? 'action' : 'news';\r\n        const setLike = (share.favorite===null) ? ()=>like.set({id:share.id, active: type}) : ()=>like.remove({id:share.id, active: type});\r\n        const isLike = (share.favorite===null) ? ` off` : ` on`;\r\n        const shareText = this.formatText(share.description);\r\n        return(\r\n            <div className=\"actionItem\">\r\n                <div className=\"headNews\">\r\n                    <div className=\"headNewsLogo\">\r\n                        <img src={require(\"../img/1x1.png\")} alt=\"\"/>\r\n                        {/* {(customer.logo && <img src={require(customer.logo).default} alt=\"\"/>) || <img src={require(\"../img/1x1.png\").default} alt=\"\"/>} */}\r\n                    </div>\r\n                    <div className=\"headNewsTitle\">\r\n                        <span className=\"newsTitle\">{share.shortDescription}</span>\r\n                        <span className=\"newsProvider\">{customer.name_ui}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pictureNews\">\r\n                    <img src={require(\"../img/1x1.png\").default} alt=\"\"/>\r\n                </div>\r\n                <div className=\"storyNews\">\r\n                    {shareText}\r\n                </div>\r\n                <div className=\"likeNews\">\r\n                    <div className=\"countLikes\">{share.likeCount}</div>\r\n                    <div className={`heartLikes${isLike}`} onClick={setLike}>\r\n                        &nbsp;\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Url extends React.Component{\r\n    render(){\r\n        const { href, children } = this.props;\r\n        return(\r\n            <span className=\"url\" onClick={()=>window.location.assign(href)}>{children}</span>\r\n        );\r\n    }\r\n}\r\n\r\nclass Checks_ extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        active: null,\r\n        reciving: false\r\n      }\r\n      this.setActive = this.setActive.bind(this);\r\n      this.loadUsedCustomers = this.loadUsedCustomers.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadUsedCustomers();\r\n    }\r\n\r\n    componentDidUpdate(pP, pS){\r\n        if(pS.reciving){\r\n            this.setState(state=>{\r\n                return {\r\n                    ...state,\r\n                    reciving: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n  \r\n    setActive(key){\r\n      this.setState(state=>{\r\n        const k = (state.active===key) ? null : key;\r\n        return {active: k}\r\n      })\r\n    }\r\n\r\n    loadUsedCustomers(){\r\n        const t = this.props.types;\r\n        if(Object.keys(t).length){\r\n            this.props.loadUsedCustomers();\r\n            this.setState(state=>{\r\n                return {...state, reciving: true}\r\n            });\r\n        }else{\r\n            setTimeout(this.loadUsedCustomers, 500);\r\n        }\r\n    }\r\n  \r\n    render(){\r\n        const { types, checks, customers } = this.props;\r\n        const checksList = [];\r\n        if(Object.keys(types).length && Object.keys(checks).length && Object.keys(customers).length){\r\n            for(let type in checks){\r\n                const item = {type: type, name: types[type].title, list: []}\r\n                for(let id in checks[type]){\r\n                    const customer = {id: id, name: customers[id].name_ui}\r\n                    item.list.push(customer);\r\n                }\r\n                checksList.push(item);\r\n            }\r\n        }\r\n        return(\r\n            <div className='page-content'>\r\n            {\r\n                (!this.state.reciving && checksList.length===0 && <div>Ваш список пока пуст</div>) ||\r\n                (checksList.length!==0 && <ListItems active={this.state.active} onClick={this.setActive} list={checksList} rootPath={this.props.rootPath}/>) || \r\n                (this.state.reciving && <div>...loading...</div>)\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst Checks = connect(\r\n    usedCustomersMapStateToProps,{\r\n        loadUsedCustomers\r\n    }\r\n    )(Checks_);\r\n\r\nfunction getLiked(checks, type, id){\r\n    const liked = new Set();\r\n    let _checks;\r\n    if(checks[type] && checks[type][id]){\r\n        _checks = checks[type][id];\r\n    }\r\n    if(type === '8' || type === '7' || type === '1'){\r\n        for(let i in _checks){\r\n            const meals = _checks[i].meals;\r\n            if(meals.length){\r\n                for(let m in meals){\r\n                    const meal = meals[m];\r\n                    if(meal.favorite !== null && !liked.has(meal.id)) liked.add(meal.id);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return liked;\r\n}\r\n\r\nclass ChecksCustomer_ extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            liked: getLiked(this.props.checks, this.props.match.params.customerType, this.props.match.params.customerId),\r\n            type: this.props.match.params.customerType,\r\n            id: this.props.match.params.customerId,\r\n            active: null,\r\n            reciving: false,\r\n            page: 0\r\n        }\r\n        this.loadChecks = this.loadChecks.bind(this);\r\n        this.setActive = this.setActive.bind(this);\r\n        this.setLike = this.setLike.bind(this);\r\n        this.removeLike = this.removeLike.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log('mount', this.props.checks);\r\n        this.loadChecks();\r\n    }\r\n\r\n    componentDidUpdate(pP, pS){\r\n        // const { type, id } = this.state;\r\n        // const prevCL = pP.checks[type] && pP.checks[type][id] && Object.keys(pP.checks[type][id]).length;\r\n        // const presCL = this.props.checks[type] && this.props.checks[type][id] && Object.keys(this.props.checks[type][id]).length;\r\n        // console.log('updated');\r\n        // console.log('prev', prevCL);\r\n        // console.log('prop', presCL);\r\n        // console.log('prev P', pP);\r\n        // console.log('prop P', this.props);\r\n        // console.log('prev State', pS);\r\n        // console.log('State', this.state);\r\n        if(pS.reciving){\r\n            // console.log('recive');\r\n            this.setState(state=>{\r\n                return {\r\n                    ...state,\r\n                    liked: getLiked(this.props.checks, this.props.match.params.customerType, this.props.match.params.customerId),\r\n                    reciving: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    loadChecks(){\r\n        const { type, id, page } = this.state;\r\n        this.props.loadChecks({type: type, id: id, page: page});\r\n        this.setState(state=>{\r\n            return {...state, page: state.page+1, reciving: true}\r\n        });\r\n    }\r\n\r\n    setLike(id){\r\n        this.props.setLike(id);\r\n        const liked = new Set(this.state.liked); liked.add(id);\r\n        this.setState(state=>{\r\n            return {...state, liked: liked}\r\n        });\r\n    }\r\n\r\n    removeLike(id){\r\n        this.props.removeLike(id);\r\n        const liked = new Set(this.state.liked); liked.delete(id);\r\n        this.setState(state=>{\r\n            return {...state, liked: liked}\r\n        });\r\n    }\r\n\r\n    setActive(i){\r\n        this.setState(state=>{\r\n            if(state.active === i){\r\n                return {...state, active: null}\r\n            }else{\r\n                return {...state, active: i}\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n      let checks, list = [];\r\n      if(this.props.checks[this.state.type] && this.props.checks[this.state.type][this.state.id]){\r\n          checks = this.props.checks[this.state.type][this.state.id];\r\n        }\r\n      switch (this.state.type){\r\n        case '2':\r\n                if(checks){\r\n                    for(let i in checks){\r\n                        const active = (i === this.state.active) ? true : false;\r\n                        list.push(<BusTicket check={checks[i]} key={i} active={active} onClick={()=>this.setActive(i)}/>)\r\n                    }\r\n                }\r\n            break;\r\n        case '1':\r\n            if(checks){\r\n                for(let i in checks){\r\n                    const active = (i === this.state.active) ? true : false;\r\n                    if(checks[i].meals.length) list.push(<MenuTicket check={checks[i]} key={i} active={active} onClick={()=>this.setActive(i)} setRemoveLike={{set:this.setLike, remove:this.removeLike, liked: this.state.liked}}/>)\r\n                }\r\n            }\r\n            break;\r\n        case '8':\r\n            if(checks){\r\n                for(let i in checks){\r\n                    const active = (i === this.state.active) ? true : false;\r\n                    if(checks[i].meals.length) list.push(<DeliveryTicket check={checks[i]} key={i} active={active} onClick={()=>this.setActive(i)} setRemoveLike={{set:this.setLike, remove:this.removeLike, liked: this.state.liked}}/>)\r\n                }\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n      }\r\n      if(list.length){\r\n        const click = (!this.state.reciving) ? ()=>this.loadChecks() : null;\r\n        list.push(<GetNextPage key='nextPage' reciving={this.state.reciving} onClick={click}/>)\r\n      }\r\n      return(\r\n        <div className='page-content'>\r\n          <div className='checksView'>\r\n            {(list.length && list) || <div>...Loading...</div>}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\nconst ChecksCustomer = connect(\r\n    checksMapStateToProps,{\r\n        loadChecks,\r\n        setLike,\r\n        removeLike\r\n    }\r\n    )(ChecksCustomer_);\r\n\r\nclass BusTicket extends React.PureComponent{\r\n    render(){\r\n        const { check, onClick, active } = this.props;\r\n        const date = getTime(check.finish_time);\r\n        const expand = (active) ? ' all' : '';\r\n        return(\r\n            <div className={`checkContainer${expand}`}>\r\n                <div className=\"checkTicketNumber\" onClick={onClick}>\r\n                    <div className=\"checkNbsp\"></div>\r\n                    <div className=\"checkTicketNumberCell\">\r\n                        <div className=\"TicketNumberData\">\r\n                            <div className=\"checkTicketNumberValue\">{('000000'+check.id).slice(-6)}</div>\r\n                            <div className=\"checkTicketNumberDate\">\r\n                                {date.date}<br/>\r\n                                {date.time}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"checkNbsp\"></div>\r\n                </div>\r\n                <div className=\"checkTicketInfo\">\r\n                    <div className=\"checkNbsp\"></div>\r\n                    <div className=\"checkCell\">\r\n                        <div className=\"checkCodePrice\">\r\n                            <div className={`checkCode`}>\r\n                                <QRCode value='testing Phrase' renderAs='svg' size={110} level='Q' includeMargin={true}/>\r\n                            </div>\r\n                            <div className=\"checkCountPrice\">\r\n                                <span className=\"checkCountTextTitle\">Количество билетов</span>\r\n                                <span className=\"checkCountText\">{check.count_user}</span>\r\n                                <span className=\"checkCountTextTitle\">Стоимость</span>\r\n                                <span className=\"checkCountText\">{check.summ/100} ₽</span>\r\n                                <span className=\"checkCountTextTitle\">Маршрут</span>\r\n                                <span className=\"checkCountText\">М.такси 92</span>\r\n                                <span className=\"checkCountTextTitle\">Гос.Номер</span>\r\n                                <span className=\"checkCountText\">О 646 УН 152</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"checkNbsp\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass MenuTicket extends React.Component{\r\n    render(){\r\n        const { check, active, onClick, setRemoveLike } = this.props;\r\n        const expand = (active) ? ' expand' : '';\r\n        const date = getTime(check.finish_time);\r\n        return(\r\n            <div className={`order${expand}`}>\r\n                <div className=\"orderHead\" onClick={onClick}>\r\n                    <div className={`orderHeadStatus status${check.state}`}>\r\n                        <span>{textState[check.state]}</span>\r\n                    </div>\r\n                    <div className=\"orderHeadNumber\">\r\n                        <span className=\"fw600\">№ {check.id}</span>\r\n                        <span className=\"fw300\">{date.date}</span>\r\n                        <span className=\"fw200\">{date.time}</span>\r\n                    </div>\r\n                    <div className=\"orderHeadCommonPrice\">{check.common_price}  ₽</div>\r\n                    <div className=\"orderHeadCollapse\">\r\n                        <img alt='' src={require(\"../img/new/expand-group-order.png\").default}/>\r\n                    </div>\r\n                </div>\r\n                {active && <MenuTicketDetails check={check} setRemoveLike={setRemoveLike}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass MenuTicketDetails extends React.Component{\r\n    render(){\r\n        const { check, setRemoveLike } = this.props;\r\n        const mealsMap = new Map();\r\n        for(let i in check.meals){\r\n            const meal = {...check.meals[i]};\r\n            if(mealsMap.has(meal.id)){\r\n                const m_t = mealsMap.get(meal.id);\r\n                const count = (m_t.count) ? +m_t.count + 1 : 2;\r\n                m_t.count = count;\r\n                mealsMap.set(meal.id, m_t);\r\n            }else{\r\n                mealsMap.set(meal.id, meal);\r\n            }\r\n        }\r\n        const meals = [];\r\n        mealsMap.forEach((value, key)=>{\r\n            meals.push(<TicketMeal key={key} meal={value} setRemoveLike={setRemoveLike}/>);\r\n        })\r\n        return(\r\n            <>\r\n                <div className=\"orderCheck\">\r\n                    <div className=\"qrColumn\">\r\n                        <div className=\"qr\">\r\n                            <QRCode value={`testing Phrase ${check.id}`} renderAs='svg' size={100} level='Q' includeMargin={true}/>\r\n                        </div>\r\n                        <div className=\"linkCheck\">\r\n                            ссылка на&nbsp;скачивание\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"checkDetails\">\r\n                        <div className=\"nameDetail\">номер столика</div>\r\n                        <div className=\"valueDetail\">5</div>\r\n                        <div className=\"nameDetail\"></div>\r\n                        <div className=\"valueDetail\">&nbsp;</div>\r\n                        <div className=\"nameDetail\"></div>\r\n                        <div className=\"valueDetail\">&nbsp;</div>\r\n                        <div className=\"nameDetail\"></div>\r\n                        <div className=\"valueDetail\">&nbsp;</div>\r\n                    </div>\r\n                </div>\r\n                {meals}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst textState = {\r\n    '4': 'Отменен',\r\n    '6': 'Исполнен',\r\n    '7': 'Не оплачен',\r\n    '8': 'Оплачен',\r\n    '10': 'Пров.опл.'\r\n}\r\n\r\nclass TicketMeal extends React.PureComponent{\r\n    render(){\r\n        const setRemoveLike = this.props.setRemoveLike;\r\n        const { count, favorite, id, id_parent, price, title, type } = this.props.meal;\r\n        const fav = setRemoveLike.liked.has(id);\r\n        const onOff = (fav) ? 'on' : 'off';\r\n        const click = (fav) ? ()=>setRemoveLike.remove(id) : ()=>setRemoveLike.set(id);\r\n        return(\r\n            <div className=\"orderMeal\" meal-id={id}>\r\n                <div className=\"mealName\">×{count || 1}&nbsp;&nbsp;{title}</div>\r\n                <div className=\"mealPrice\">{(count && math.getMultiplication(count, price)) || price}  ₽</div>\r\n                <div className=\"mealLike\" onClick={click}>\r\n                    <img alt='' src={require(`../img/new/like_${onOff}.png`).default}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass DeliveryTicket extends React.Component{\r\n    render(){\r\n        const { check, active, onClick, setRemoveLike } = this.props;\r\n        const expand = (active) ? ' expand' : '';\r\n        const date = getTime(check.finish_time);\r\n        return(\r\n            <div className={`order${expand}`} order-id={check.id}>\r\n                <div className=\"orderHead\" onClick={onClick}>\r\n                    <div className={`orderHeadStatus status${check.state}`}>\r\n                        <span>{textState[check.state]}</span>\r\n                    </div>\r\n                    <div className=\"orderHeadNumber\">\r\n                        <span className=\"fw600\">№ {check.id}</span>\r\n                        <span className=\"fw300\">{date.date}</span>\r\n                        <span className=\"fw200\">{date.time}</span>\r\n                    </div>\r\n                    <div className=\"orderHeadCommonPrice\">{check.common_price} ₽</div>\r\n                    <div className=\"orderHeadCollapse\">\r\n                        <img alt='' src={require(\"../img/new/expand-group-order.png\").default}/>\r\n                    </div>\r\n                </div>\r\n                {active && <DeliveryTicketDetails check={check} setRemoveLike={setRemoveLike}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass DeliveryTicketDetails extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.readDesc = this.readDesc.bind(this);\r\n    }\r\n\r\n    readDesc(){\r\n        const desc = {address: <NBSP/>, date: <NBSP/>, time: <NBSP/>, comment: <NBSP/>};\r\n        let _desc;\r\n        const { description } = this.props.check;\r\n        if(description === null) return desc;\r\n        let el = (function(a){\r\n            let el = document.createElement('span');\r\n            el.innerHTML = a;\r\n            return el.textContent;\r\n        }(description));\r\n        try{\r\n            _desc = JSON.parse(el);\r\n        }catch (e) {\r\n            _desc = description;\r\n        }\r\n        if(typeof _desc !== 'object') return desc;\r\n        if(_desc.address && _desc.address.value){\r\n            desc.address = _desc.address.value;\r\n            if(_desc.address.aprt) desc.address += `, кв ${_desc.address.aprt}`;\r\n            if(_desc.address.floor) desc.address += `, этаж ${_desc.address.floor}`;\r\n            if(_desc.address.porch) desc.address += `, п-д ${_desc.address.porch}`;\r\n            if(_desc.address.intercom) desc.address += `, дмфн ${_desc.address.intercom}`;\r\n        }\r\n        if(_desc.time && _desc.time.start_time){\r\n            const DT = getTime(_desc.time.start_time);\r\n            desc.date = DT.date;\r\n            desc.time = DT.time;\r\n        }else{\r\n            desc.date = 'Как можно скорее';\r\n        }\r\n        if(_desc.comment){\r\n            desc.comment = _desc.comment;\r\n        }\r\n        return desc;\r\n    }\r\n\r\n    render(){\r\n        const { check, setRemoveLike } = this.props;\r\n        const mealsMap = new Map();\r\n        for(let i in check.meals){\r\n            const meal = check.meals[i];\r\n            if(mealsMap.has(meal.id)){\r\n                if(!meal.count){\r\n                    meal.count = 2;\r\n                }else{\r\n                    meal.count += 1;\r\n                }\r\n                mealsMap.set(meal.id, meal);\r\n            }else{\r\n                mealsMap.set(meal.id, meal);\r\n            }\r\n        }\r\n        const meals = [];\r\n        mealsMap.forEach((value, key)=>{\r\n            meals.push(<TicketMeal key={key} meal={value} setRemoveLike={setRemoveLike}/>);\r\n        });\r\n        const desc = this.readDesc();\r\n        return(\r\n            <>\r\n                <div className=\"orderCheck\">\r\n                    <div className=\"qrColumn\">\r\n                        <div className=\"qr preloader\">\r\n                            <QRCode value={`testing Phrase ${check.id}`} renderAs='svg' size={100} level='Q' includeMargin={true}/>\r\n                        </div>\r\n                        <div className=\"linkCheck\">ссылка на&nbsp;скачивание</div>\r\n                    </div>\r\n                    <div className=\"checkDetails\">\r\n                        <div className=\"nameDetail\">адрес заказа</div>\r\n                        <div className=\"valueDetail\">{desc.address}</div>\r\n                        <div className=\"nameDetail\">дата доставки</div>\r\n                        <div className=\"valueDetail\">{desc.date}</div>\r\n                        <div className=\"nameDetail\">время доставки</div>\r\n                        <div className=\"valueDetail\">{desc.time}</div>\r\n                        <div className=\"nameDetail\">комментарий</div>\r\n                        <div className=\"valueDetail\">{desc.comment}</div>\r\n                    </div>\r\n                </div>\r\n                {meals}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nclass GetNextPage extends React.Component{\r\n    render(){\r\n        const recive = this.props.reciving;\r\n        return(\r\n            <div className='GetNextPage' onClick={this.props.onClick}>\r\n            {!recive && '...ещё...'}\r\n            {recive && 'загрузка'}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction getTime(time){\r\n    if(+time == time) time = +time*1000;\r\n    const date = {date: new Date(time), time: ''};\r\n    date.time = ('0'+date.date.getHours()).slice(-2) + ':' + ('0'+date.date.getMinutes()).slice(-2);\r\n    date.date = ('0'+date.date.getDate()).slice(-2) + '.' + ('0'+(+date.date.getMonth()+1)).slice(-2) + '.' + ('0'+date.date.getFullYear()).slice(-2);\r\n    return date;\r\n}\r\n\r\nexport { AppMain as default }","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\app\\types.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\menu\\actions.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\basket\\actions.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\customers\\actions.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\user\\actions.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\js.lib\\math.js",["460","461","462","463","464","465","466"],"export const math = {\r\n    getSumm: function (v1, v2){\r\n        if(+v1 != v1 || +v2 != v2){\r\n            return 0;\r\n        }\r\n        if(+v1 < 0 || +v2 < 0){\r\n            if(+v1 < 0 && +v2 < 0){\r\n                return -this.getSumm(-+v1, -+v2);\r\n            }else if(+v1 < 0){\r\n                return this.getDifference(v2, -+v1);\r\n            }else{\r\n                return this.getDifference(v1, -+v2);\r\n            }\r\n        }\r\n        let val1, val2, integer, fraction, intFraction;\r\n        if((''+v1).indexOf('.') === -1 && (''+v2).indexOf('.') === -1){\r\n            let res = parseInt(v1) + parseInt(v2);\r\n            return res;\r\n        }else{\r\n            val1 = this.integerFraction(v1);\r\n            val2 = this.integerFraction(v2);\r\n            integer = val1.integer + val2.integer;\r\n            fraction = val1.fraction + val2.fraction;\r\n            intFraction = fraction - (fraction % 100);\r\n            if(intFraction > 0){\r\n                fraction = fraction % 100;\r\n                integer += intFraction/100;\r\n            }\r\n            if((''+fraction).length === 1){\r\n                fraction = '0' + fraction;\r\n            }\r\n            let res = parseFloat(integer + '.' + fraction);\r\n            return res;\r\n        }\r\n    },\r\n    \r\n    getDifference: function(md, ms){\r\n        if(+md != md || +ms != ms){\r\n            return 0;\r\n        }\r\n        if(+md > 0 && +ms < 0){\r\n            return this.getSumm(md, -+ms);\r\n        }else if(+md < 0 && +ms > 0){\r\n            return -this.getSumm(-+md, ms);\r\n        }else if(+md < 0 && +ms < 0){\r\n            return this.getDifference(-+ms, -+md);\r\n        }\r\n        let M, m, integer, fraction;\r\n        if((''+md).indexOf('.') === -1 && (''+ms).indexOf('.') === -1){\r\n            let res = parseInt(md) - parseInt(ms);\r\n            return res;\r\n        }else{\r\n            M = this.integerFraction(md);\r\n            m = this.integerFraction(ms);\r\n            integer = M.integer - m.integer;\r\n            fraction = M.fraction - m.fraction;\r\n            if(integer > 0){\r\n                if(fraction < 0){\r\n                    fraction = 100 - (-fraction % 100);\r\n                    integer -= 1;\r\n                }\r\n                if((''+fraction).length === 1){\r\n                    fraction = '0' + fraction;\r\n                }\r\n                let res = parseFloat(integer + '.' + fraction);\r\n                return res;\r\n            }else if(integer === 0){\r\n                let pref;\r\n                if(fraction < 0){\r\n                    pref = '-';\r\n                    fraction = -fraction;\r\n                }else{\r\n                    pref = '';\r\n                }\r\n                if((''+fraction).length === 1){\r\n                    fraction = '0' + fraction;\r\n                }\r\n                let res = parseFloat(pref + integer + '.' + fraction);\r\n                return res;\r\n            }else{\r\n                if(fraction < 0){\r\n                    fraction = -fraction;\r\n                }else{\r\n                    fraction = 100 - fraction;\r\n                    integer += 1;\r\n                    if(integer == 0){\r\n                        integer = '-0';\r\n                    }\r\n                }\r\n                if((''+fraction).length === 1){\r\n                    fraction = '0' + fraction;\r\n                }\r\n                let res =  parseFloat(integer + '.' + fraction);\r\n                return res;\r\n            }\r\n        }\r\n    },\r\n    \r\n    getMultiplication: function(v, k){\r\n        if(+v != v || +k != k){\r\n            return 0;\r\n        }\r\n        if(+v * +k < 0){\r\n            if(+v < 0){\r\n                return -this.getMultiplication(-+v, k);\r\n            }else{\r\n                return -this.getMultiplication(v, -+k);\r\n            }\r\n        }else if(+v < 0 && +k <0){\r\n            v = -+v;\r\n            k = -+k;\r\n        }\r\n        let val, integer, fraction, intFraction;\r\n        k = parseInt(k);\r\n        if((''+v).indexOf('.') === -1){\r\n            let res = parseInt(v) * k;\r\n            return res;\r\n        }else{\r\n            val = this.integerFraction(v);\r\n            integer = val.integer * k;\r\n            fraction = val.fraction * k;\r\n            intFraction = fraction - (fraction % 100);\r\n            if(intFraction > 0){\r\n                fraction = fraction % 100;\r\n                integer += intFraction/100;\r\n            }\r\n            if((''+fraction).length === 1){\r\n                fraction = '0' + fraction;\r\n            }\r\n            let res = parseFloat(integer + '.' + fraction);\r\n            return res;\r\n        }\r\n    },\r\n    \r\n    integerFraction: function(value){\r\n        let val = {integer:0, fraction:0};\r\n        let frac;\r\n        if((''+value).indexOf('.') === -1){\r\n            val.integer = parseInt(value);\r\n        }else{\r\n            val.integer = parseInt((''+value).substr(0,(''+value).indexOf('.')));\r\n            frac = (''+value).substr((''+value).indexOf('.') + 1);\r\n            if(frac.length === 1){\r\n                frac += '0';\r\n            }\r\n            val.fraction = parseInt( frac );\r\n        }\r\n        return val;\r\n    }\r\n}\r\n\r\nexport const mapMath = {\r\n/**\r\n * Takes two {@link Point|points} and finds the geographic bearing between them,\r\n * i.e. the angle measured in degrees from the north line (0 degrees)\r\n *\r\n * @name bearing\r\n * @param {Coord} start starting Point\r\n * @param {Coord} end ending Point\r\n * @param {Object} [options={}] Optional parameters\r\n * @param {boolean} [options.final=false] calculates the final bearing if true\r\n * @returns {number} bearing in decimal degrees, between -180 and 180 degrees (positive clockwise)\r\n * @example\r\n * var point1 = [44.022, 56.295];\r\n * var point2 = [44.012, 56.308];\r\n *\r\n * var bearing = getAngle(point1, point2, {final:true});\r\n *\r\n */\r\ngetAngle: (start, end, options) => {\r\n    // Optional parameters\r\n    options = options || {};\r\n    var final = options.final;\r\n\r\n    // Reverse calculation\r\n    if (final === true) return mapMath.calculateFinalBearing(start, end);\r\n\r\n    var coordinates1 = mapMath.getCoord(start);\r\n    var coordinates2 = mapMath.getCoord(end);\r\n\r\n\r\n    var lon1 = mapMath.degreesToRadians(coordinates1[0]);\r\n    var lon2 = mapMath.degreesToRadians(coordinates2[0]);\r\n    var lat1 = mapMath.degreesToRadians(coordinates1[1]);\r\n    var lat2 = mapMath.degreesToRadians(coordinates2[1]);\r\n    //console.log('lon_start: '+coordinates1[0]+' lat_start: '+coordinates1[1]);\r\n    //console.log('lon_end: '+coordinates2[0]+' lat_end: '+coordinates2[1]);\r\n    var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\r\n    var b = Math.cos(lat1) * Math.sin(lat2) -\r\n        Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\r\n\r\n    return mapMath.radiansToDegrees(Math.atan2(a, b));\r\n},\r\n\r\n/**\r\n * Calculates Final Bearing\r\n *\r\n * @private\r\n * @param {Coord} start starting Point\r\n * @param {Coord} end ending Point\r\n * @returns {number} bearing\r\n */\r\ncalculateFinalBearing: (start, end) => {\r\n    // Swap start & end\r\n    var bear = mapMath.getAngle(end, start);\r\n    bear = (bear + 180) % 360;\r\n    return bear;\r\n},\r\n\r\n/**\r\n * Converts an angle in radians to degrees\r\n *\r\n * @name radiansToDegrees\r\n * @param {number} radians angle in radians\r\n * @returns {number} degrees between 0 and 360 degrees\r\n */\r\nradiansToDegrees: (radians) => {\r\n    if (radians === null || radians === undefined) throw new Error('radians is required');\r\n\r\n    var degrees = radians % (2 * Math.PI);\r\n    return degrees * 180 / Math.PI;\r\n},\r\n\r\n/**\r\n * Converts an angle in degrees to radians\r\n *\r\n * @name degreesToRadians\r\n * @param {number} degrees angle between 0 and 360 degrees\r\n * @returns {number} angle in radians\r\n */\r\ndegreesToRadians: (degrees) => {\r\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\r\n\r\n    var radians = degrees % 360;\r\n    return radians * Math.PI / 180;\r\n},\r\n\r\n/**\r\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\r\n *\r\n * @name getCoord\r\n * @param {Array<number>|Geometry<Point>|Feature<Point>} obj Object\r\n * @returns {Array<number>} coordinates\r\n * @example\r\n * var pt = turf.point([10, 10]);\r\n *\r\n * var coord = turf.getCoord(pt);\r\n * //= [10, 10]\r\n */\r\ngetCoord: (obj) => {\r\n    if (!obj) throw new Error('obj is required');\r\n\r\n    var coordinates = mapMath.getCoords(obj);\r\n\r\n    // getCoord() must contain at least two numbers (Point)\r\n    if (coordinates.length > 1 && mapMath.isNumber(coordinates[0]) && mapMath.isNumber(coordinates[1])) {\r\n        return coordinates;\r\n    } else {\r\n        throw new Error('Coordinate is not a valid Point');\r\n    }\r\n},\r\n\r\n/**\r\n * Unwrap coordinates from a Feature, Geometry Object or an Array of numbers\r\n *\r\n * @name getCoords\r\n * @param {Array<number>|Geometry|Feature} obj Object\r\n * @returns {Array<number>} coordinates\r\n * @example\r\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\r\n *\r\n * var coord = turf.getCoords(poly);\r\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\r\n */\r\ngetCoords: (obj) => {\r\n    if (!obj) throw new Error('obj is required');\r\n    var coordinates;\r\n\r\n    // Array of numbers\r\n    if (obj.length) {\r\n        coordinates = obj;\r\n\r\n    // Geometry Object\r\n    } else if (obj.coordinates) {\r\n        coordinates = obj.coordinates;\r\n\r\n    // Feature\r\n    } else if (obj.geometry && obj.geometry.coordinates) {\r\n        coordinates = obj.geometry.coordinates;\r\n    }\r\n    // Checks if coordinates contains a number\r\n    if (coordinates) {\r\n        mapMath.containsNumber(coordinates);\r\n        return coordinates;\r\n    }\r\n    throw new Error('No valid coordinates');\r\n},\r\n\r\n/**\r\n * Checks if coordinates contains a number\r\n *\r\n * @name containsNumber\r\n * @param {Array<any>} coordinates GeoJSON Coordinates\r\n * @returns {boolean} true if Array contains a number\r\n */\r\ncontainsNumber: (coordinates) => {\r\n    if (coordinates.length > 1 && mapMath.isNumber(coordinates[0]) && mapMath.isNumber(coordinates[1])) {\r\n        return true;\r\n    }\r\n\r\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\r\n        return mapMath.containsNumber(coordinates[0]);\r\n    }\r\n    throw new Error('coordinates must only contain numbers');\r\n},\r\n\r\n/**\r\n * isNumber\r\n *\r\n * @param {*} num Number to validate\r\n * @returns {boolean} true/false\r\n * @example\r\n * turf.isNumber(123)\r\n * //=true\r\n * turf.isNumber('foo')\r\n * //=false\r\n */\r\nisNumber: (num) => {\r\n    return !isNaN(num) && num !== null && !Array.isArray(num);\r\n}\r\n}","D:\\work\\Repo\\React\\menu\\app\\src\\elements\\listitems.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\customers\\types.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\user\\types.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\auth\\types.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\auth\\TermsOfUse.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\auth\\AgreePersonalData.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\main\\actions.js",[],["467","468"],"D:\\work\\Repo\\React\\menu\\app\\src\\api\\menu.js",["469"],"/**\r\n * Mocking client-server processing\r\n */\r\nimport axios from 'axios'\r\nimport { apiMenuUrl } from './config'\r\n\r\nconst Server = axios.create({\r\n  baseURL: apiMenuUrl,\r\n  responseType: 'json',\r\n  // mode: 'cors',\r\n  // headers: {\r\n  //   'Access-Control-Allow-Origin': '*'\r\n  // },\r\n  withCredentials: true,\r\n  // credentials: 'same-origin',\r\n  // crossdomain: true,\r\n});\r\n\r\nconst TIMEOUT = 1000\r\n\r\nexport default {\r\n  getMeals: (cb, params) => {\r\n    return Server.post('/menu_json.php', params)\r\n      .then(response=>{\r\n        if(response.data && response.data.result === \"ok\"){ cb(response.data.meals) }\r\n      })\r\n      .catch(err=>{\r\n\r\n      });\r\n  },\r\n  setLike: (cb, timeout) => setTimeout(() => cb(), timeout || TIMEOUT),\r\n  removeLike: (cb, timeout) => setTimeout(() => cb(), timeout || TIMEOUT)\r\n}","D:\\work\\Repo\\React\\menu\\app\\src\\api\\customers.js",["470"],"import axios from 'axios'\r\nimport { apiCustomerUrl } from './config'\r\n\r\nconst Server = axios.create({\r\n  baseURL: apiCustomerUrl,\r\n  responseType: 'json',\r\n  // mode: 'cors',\r\n  // headers: {\r\n  //   'Access-Control-Allow-Origin': '*'\r\n  // },\r\n  withCredentials: true,\r\n  // credentials: 'same-origin',\r\n  // crossdomain: true,\r\n});\r\n\r\nexport default {\r\n  loadCustomers: cb => {\r\n    return Server.post('/customers_json.php', {})\r\n        .then(response=>{\r\n            if(response.data && response.data.result === \"ok\"){ cb({list: response.data.list, types: response.data.types}) }\r\n        })\r\n        .catch(err=>{\r\n\r\n        });\r\n  },\r\n  setCustomerLike: (fcb, p) => {\r\n    const url = '/resultOK.php';\r\n    return Server.post(url, p)\r\n        .then(response=>{\r\n          if(response.data && response.data.result !== \"ok\") fcb(p);\r\n        })\r\n        .catch(err=>{\r\n          fcb(p);\r\n        });\r\n  },\r\n  removeCustomerLike: (fcb, p) => {\r\n    const url = '/resultOK.php';\r\n    return Server.post(url, p)\r\n        .then(response=>{\r\n          if(response.data && response.data.result !== \"ok\") fcb(p);\r\n        })\r\n        .catch(err=>{\r\n          fcb(p);\r\n        });\r\n  }\r\n}","D:\\work\\Repo\\React\\menu\\app\\src\\api\\user.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\api\\order.js",["471","472"],"import api from './basket'\r\n\r\n\r\nconst loader = {\r\n    spinStep: 0,\r\n    loaderSpinerTimer: false,\r\n    loaderTimer: [],\r\n    open: function(){\r\n        // let timer = setTimeout(function(obj){\r\n        //     if($('.infLoader').length === 0){\r\n        //         $('body').append(`<div class=\"infLoader\"><div class=\"infLoaderCell\"><img src=\"../img/new/infLoader-round.svg\" class=\"img\"/></div></div>`);\r\n        //         $('.infLoader').addClass('show');\r\n        //         $('.infLoader').on('click', function(e){e.stopPropagation();});\r\n        //     }\r\n        // }, 1000, this);\r\n        // this.loaderTimer.push(timer);\r\n        // return timer;\r\n    },\r\n    close: function(timer){\r\n        // clearTimeout(timer);\r\n        // this.loaderTimer.splice(this.loaderTimer.indexOf(timer), 1);\r\n        // if(this.loaderTimer.length === 0){\r\n        //     $('.infLoader').removeClass('show');\r\n        //     setTimeout(function(obj){\r\n        //         $('.infLoader').remove();\r\n        //     }, 100, this);\r\n        // }\r\n    },\r\n    loaderSpin: function(obj){\r\n        // if(obj.spinStep === 120){obj.spinStep = 0;}\r\n        // let px = obj.spinStep * 45;\r\n        // $('.infLoader .img').css('background-position-x', `-${px}px`);\r\n        // obj.spinStep++;\r\n    }\r\n};\r\n\r\nconst changeMealCount = {\r\n    timers: {},\r\n    ms: 2000,\r\n    tRem: function(id){\r\n        let timers = this.timers;\r\n        return function (post) {\r\n            if(timers[id].timeStamp)clearTimeout(timers[id].timeStamp);\r\n            if(post){\r\n                timers[id].post = post;\r\n            }else{\r\n                delete timers[id];\r\n            }\r\n        }\r\n    },\r\n    timer: function(id, s, timer){\r\n        if(this.timers[id].timeStamp) clearTimeout(this.timers[id].timeStamp);\r\n        this.timers[id].timeStamp = setTimeout(s, timer || this.ms);\r\n    },\r\n    timersCheck: function(r, cb){\r\n        if(r){\r\n            loader.close(r);\r\n            if(Object.keys(changeMealCount.timers).length){\r\n                for(let id in changeMealCount.timers){\r\n                    let t = changeMealCount.timers;\r\n                    if(t.post){\r\n                        t.post.abort();\r\n                    }\r\n                }\r\n            }else{\r\n                cb(); //startToPay();\r\n            }\r\n        }\r\n        else if(Object.keys(this.timers).length){\r\n            let t = loader.open();\r\n            setTimeout(this.timersCheck, this.ms, t, cb);\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    },\r\n    add: function(id, mealOrdersById, _cb, _fcb){\r\n        this.change(1, id, mealOrdersById, _cb, _fcb);\r\n    },\r\n    remove: function (id, mealOrdersById, _cb, _fcb) {\r\n        this.change(-1, id, mealOrdersById, _cb, _fcb);\r\n    },\r\n    change: function(action, id, mealOrdersById, _cb, _fcb){\r\n        const orders = mealOrdersById[id];\r\n        if(this.timers[id] !== undefined){\r\n            const t = this.timers[id];\r\n            this.timers[id].count = t.count + action;\r\n        }else{\r\n            this.timers[id] = {count: action, post: undefined};\r\n        }\r\n        const chCount = this.timers[id].count;\r\n        if(chCount === 0){\r\n            this.tRem(id)();\r\n            return;\r\n        }\r\n        const s = this.send(id, orders, chCount, _cb, _fcb);\r\n        if(orders && orders.length && chCount<0 && orders.length+chCount === 0){\r\n            this.timer(id, s, 1);\r\n        }else{\r\n            this.timer(id, s);\r\n        }\r\n    },\r\n    send: function (id, orders, change, cb, fcb) { // отправляем запрос на изменение количества блюд без ингредиентов\r\n        const remove = this.tRem(id);\r\n        // const _this = this;\r\n        return function(){\r\n            if(change < 0){\r\n                change *= -1;\r\n                api.removeMeal(orders.slice(0, change), cb, fcb);\r\n            }else{\r\n                api.addMeal(new Array(change).fill(id), cb, fcb);\r\n            }\r\n            remove();\r\n        }\r\n    },\r\n    cutOrders: function (oC, nC, ords, id) {\r\n        let result, idS, idF;\r\n        let splitOrders = (ords) ? ords.split(',') : [];\r\n        idS = [];\r\n        idF = '';\r\n        if(nC < oC){\r\n            for(let i=oC; i>0; i--){\r\n                if(i>nC){ idS.push(splitOrders[i-1]); }\r\n                else{ idF = (idF != '') ? splitOrders[i-1]+','+idF : splitOrders[i-1]; }\r\n            }\r\n            result = { meal_id: idS, action: \"remove\" };\r\n        }\r\n        if(nC > oC){\r\n            for(let i=0; i<(nC-oC);i++){\r\n                idS.push(id);\r\n            }\r\n            result = { meal_id: idS, action: \"add\" };\r\n        }\r\n        return [result, idS, idF];\r\n    },\r\n    newMO: function (meal) {\r\n        let result = {...meal};\r\n            result.count = 0;\r\n            result.id_parent = '';\r\n            result.id_ingredients = {};\r\n            result.idOrders = {};\r\n        return result;\r\n    },\r\n    backMeals: function (check_meal) { // возвращаем количества блюд без ингредиентов к значениям до момента изменений\r\n        \r\n    },\r\n    chPlus: function () { // меняем в чеке количество блюд c ингредиентами\r\n\r\n    },\r\n    chAddition: function () { // меняем (удаляем) в чеке количество ингредиентов у блюда\r\n\r\n    }\r\n}\r\n\r\nexport {\r\n    changeMealCount as default,\r\n    loader\r\n}","D:\\work\\Repo\\React\\menu\\app\\src\\api\\basket.js",["473"],"import axios from 'axios'\r\nimport { apiOrderUrl } from './config'\r\n\r\nconst Server = axios.create({\r\n  baseURL: apiOrderUrl,\r\n  responseType: 'json',\r\n  // mode: 'cors',\r\n  // headers: {\r\n  //   'Access-Control-Allow-Origin': '*'\r\n  // },\r\n  withCredentials: true,\r\n  // credentials: 'same-origin',\r\n  // crossdomain: true,\r\n});\r\n\r\nexport default {\r\n  getOrder: cb => {\r\n    return Server.post('/order_json.php',{})\r\n      .then(response=>{\r\n        const order = response.data.result === 'ok' ? response.data.order : undefined;\r\n        if(order){\r\n          const _meals = order.meals.slice();\r\n          delete order.meals;\r\n          _meals.forEach(element => {\r\n            element.id = Number(element.id);\r\n          });\r\n          cb(order, _meals);\r\n        }\r\n      })\r\n      .catch(err=>{\r\n        \r\n      });\r\n  },\r\n  addMeal: (ids, cb) => {\r\n      return Server.post('/add_remove_meals_json.php', {meal_id: ids, action: \"add\"})\r\n          .then(response => {\r\n              const orders = response.data.result === 'ok' ? response.data.idOrders : undefined;\r\n              if(orders){\r\n                cb(orders);\r\n              }\r\n          })\r\n  },\r\n  removeMeal: (ids, cb) => {\r\n    return Server.post('/add_remove_meals_json.php', {meal_id: ids, action: \"remove\"})\r\n        .then(response => {\r\n            const orders = response.data.result === 'ok' ? response.data.idsDelete : undefined;\r\n            if(orders){\r\n              const result = [];\r\n              for(let order in orders){\r\n                if(order[order]) result.push(order);\r\n              }\r\n              cb(result);\r\n            }\r\n        })\r\n  }\r\n}","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\basket\\types.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\menu\\types.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\auth\\actions.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\elements\\loading.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\elements\\button.js",["474"],"import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass _Button extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            onClass: false\r\n        };\r\n        this.on = this.on.bind(this);\r\n        this.off = this.off.bind(this);\r\n    }\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object.isRequired,\r\n        location: PropTypes.object.isRequired,\r\n        history: PropTypes.object.isRequired\r\n    };\r\n    \r\n    on(){\r\n        this.setState({onClass: true})\r\n    }\r\n\r\n    off(){\r\n        this.setState({onClass: false})\r\n    }\r\n\r\n    render(){\r\n        const { location, history, className } = this.props;\r\n        let skip = (this.props.skip) ? <Link to='#' onClick={()=>history.push(this.props.skip)}><button>Вернуться</button></Link> : '';\r\n        let goOn = (this.props.goOn) ? <button onClick={()=>history.push(this.props.goOn)}>Продолжить работу с меню</button> : '';\r\n        let button, classname;\r\n        if(className){\r\n            classname = {className: className + ((this.state.onClass) ? ' on' : '')}\r\n        }else{\r\n            classname = (this.state.onClass) ? {className: 'on'} : null\r\n        }\r\n        if(this.props.disabled){\r\n            button = <button {...classname} disabled>{this.props.children}</button>\r\n        }else{\r\n            const touches = {onTouchStart: this.on, onTouchEnd: this.off, onTouchCancel: this.off};\r\n            button = this.props.pathTo ? \r\n                    <Link to={this.props.pathTo}><button {...classname} {...touches}>{this.props.children}</button></Link> :\r\n                    <button {...classname} {...touches}>{this.props.children}</button>;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {button}\r\n                {skip}\r\n                {goOn}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Button = withRouter(_Button);","D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\selectors\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\main\\header\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\main\\profile\\index.js",["475","476","477","478","479","480","481","482","483","484"],"D:\\work\\Repo\\React\\menu\\app\\src\\main\\footer\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\elements\\popup\\index.js",["485"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { popupMapStateToProps } from '../../reducers'\r\nimport { hidePopup, showPopup } from '../../reducers/popup/actions'\r\n\r\nimport '../../css/popup.scss'\r\n\r\nclass _Popup extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      show: false\r\n    }\r\n    this.hide = this.hide.bind(this)\r\n    this._hide = this._hide.bind(this)\r\n  }\r\n  componentDidMount(){\r\n    if(this.props.show) this.setState(state=>({...state, show: true}))\r\n  }\r\n\r\n  componentDidUpdate(pP, pS){\r\n    const { show } = this.props\r\n    console.log(`update`, !!(show !== pP.show && show !== this.state.show))\r\n    if(show !== pP.show && show !== this.state.show) this.setState(state=>({...state, show: show}))\r\n  }\r\n\r\n  hide(e){\r\n    this.setState(state=>({...state, show: false}), this._hide)  \r\n  }\r\n\r\n  _hide(){\r\n    setTimeout(this.props.hidePopup, 300)\r\n  }\r\n\r\n  render(){\r\n    // console.log(this.props, this.state)\r\n    const { show, canClose, content, title } = this.props\r\n    const click = (canClose) ? {onClick:this.hide} : {}\r\n    const showClass = (this.state.show) ? 'show' : ''\r\n    return(<>\r\n      {(show || this.state.show) &&\r\n      <div id=\"popupDom\">\r\n        <div className=\"popupBack\" {...click}>\r\n          <div className={`popupWindow ${showClass}`} onClick={(e)=>e.stopPropagation()}>\r\n            <span className=\"message\">{content}</span>\r\n            {canClose && <span className=\"close\" {...click}>Закрыть</span>}\r\n          </div>\r\n        </div>\r\n      </div>}\r\n      </>);\r\n  }\r\n}\r\n\r\nconst Popup = connect(\r\n  popupMapStateToProps,\r\n  {\r\n      showPopup,\r\n      hidePopup\r\n  }\r\n  )(_Popup);\r\n\r\nexport { Popup };","D:\\work\\Repo\\React\\menu\\app\\src\\api\\config.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\api\\auth.js",["486"],"import axios from 'axios'\r\nimport { apiAuthUrl } from './config'\r\n\r\nconst Server = axios.create({\r\n  baseURL: apiAuthUrl,\r\n  responseType: 'json',\r\n  // mode: 'cors',\r\n  // headers: {\r\n  //   'Access-Control-Allow-Origin': '*'\r\n  // },\r\n  withCredentials: true,\r\n  // credentials: 'same-origin',\r\n  // crossdomain: true,\r\n});\r\n\r\nexport default {\r\n  logIn: (data, cb, fcb) => {\r\n    return Server.post('/user_auth.php',data)\r\n      .then(response=>{\r\n        const resp = response.data.result === 'ok' ? response.data : undefined;\r\n        if(resp){\r\n          if(resp.time || resp.agree){\r\n            cb(resp);\r\n          }else if(resp.user){\r\n            cb(resp.user);\r\n          }\r\n        }else if(response.data.result === 'error'){\r\n          if(response.data.error === 'Authorization error, check entered data'){\r\n            fcb(true);\r\n          }\r\n        }\r\n      })\r\n      .catch(err=>{\r\n        \r\n      });\r\n  }\r\n}","D:\\work\\Repo\\React\\menu\\app\\src\\basket\\index.js",["487","488"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { basketMapStateToProps } from '../reducers'\r\nimport {Button as NextButton} from '../elements/button'\r\nimport { Popup } from '../elements/popup'\r\nimport { thunkAddToBasket as toBasket, thunkRemoveFromBasket as fromBasket } from '../reducers/basket/actions'\r\n\r\nimport * as math from './math'\r\n\r\nclass _Basket extends React.PureComponent{\r\n    static propTypes = {\r\n        addedIds: PropTypes.array.isRequired,\r\n        quantityById: PropTypes.object.isRequired,\r\n        order: PropTypes.object,\r\n        addedMeals: PropTypes.array.isRequired,\r\n        toBasket: PropTypes.func.isRequired,\r\n        fromBasket: PropTypes.func.isRequired\r\n    };\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    render(){\r\n        const { quantityById, addedMeals, toBasket, fromBasket } = this.props;\r\n        let total = 0;\r\n        const meals = addedMeals.map(meal=>{\r\n            total = math.getSumm(total, math.getMultiplication(meal.price, quantityById[meal.id]));\r\n            return <BasketRow \r\n                key={meal.id}\r\n                id={meal.id}\r\n                name={meal.title}\r\n                price={meal.price}\r\n                quantity={quantityById[meal.id]}\r\n                addMeal={toBasket}\r\n                removeMeal={fromBasket}\r\n                />\r\n        });\r\n        const elTotal = (total) ?\r\n            <div className='total'>ВСЕГО: {total}&#8381;</div> :\r\n            null;\r\n        return(\r\n            <div className='check'>\r\n                {meals}\r\n                {elTotal}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst Basket = connect(\r\n    basketMapStateToProps,\r\n    { toBasket, fromBasket }\r\n)(_Basket);\r\n\r\nexport { Basket as default }\r\n\r\nclass BasketRow extends Component{\r\n    \r\n    render(){\r\n        const { id, name, quantity, price, addMeal, removeMeal } = this.props;\r\n        const _price = math.getMultiplication(price, quantity);\r\n\r\n        return (\r\n            <div className='basketItem'>{name} &times;{quantity} <button onClick={()=>removeMeal(id)}>Minus</button> <button onClick={()=>addMeal(id)}>Plus</button> {_price}</div>\r\n        );\r\n    }\r\n}","D:\\work\\Repo\\React\\menu\\app\\src\\main\\map\\index.js",["489","490","491","492"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    Redirect\r\n  } from 'react-router-dom'\r\nimport mapboxgl from 'mapbox-gl'\r\n\r\nimport { GlobalSearchField } from '../../forms'\r\n\r\nimport { mapSearchToProps, mapMapStateToProps } from '../../reducers'\r\nimport {\r\n    setCustomerLike,\r\n    removeCustomerLike\r\n} from '../../reducers/customers/actions'\r\nimport {\r\n    thunkAddLike as setRouteLike,\r\n    thunkRemoveLike as removeRouteLike,\r\n    loadRouteDetails\r\n} from '../../reducers/routes/actions'\r\nimport {\r\n    clearMap,\r\n    setUserMarker,\r\n    setBusLine\r\n} from '../../reducers/map/actions'\r\n\r\nimport { mapMath } from '../../js.lib/math.js'\r\n\r\nimport '../../css/map.scss'\r\nimport 'mapbox-gl/dist/mapbox-gl.css'\r\n\r\nclass AppMap extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: 'searchActive',\r\n            SFVisible: false // searchField visible\r\n        };\r\n        this.setActive = this.setActive.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(pP, pS){\r\n        if(this.state.active === 'searchFieldActive' && !this.state.SFVisible){\r\n            setTimeout(()=>this.setState(state=>({...state, SFVisible: true})), 300)\r\n        }\r\n        if(this.state.active === 'searchResultActive'){}\r\n    }\r\n\r\n    setActive(w){\r\n        if(w !== this.state.active && w !== 'searchFieldActive'){\r\n            this.setState(state=>({\r\n                ...state,\r\n                active: w,\r\n                SFVisible: false\r\n            }))\r\n        }else if(w !== this.state.active && w === 'searchFieldActive'){\r\n            this.setState(state=>({...state, active: w}))\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        // const { customerId } = (this.props.match && this.props.match.params) ? this.props.match.params : {}\r\n        const className = ['page-content', 'mapContent', this.state.active]\r\n        return(\r\n            <div className={className.join(' ')}>\r\n                <MapContainer setActive={this.setActive} activeState={this.state.active}/>\r\n                <MTaxiQRScan/>\r\n                <SearchMapContainer setActive={this.setActive} sfvisible={this.state.SFVisible} activeState={this.state.active}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass _MapContainer extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.zoom = props.zoom ? props.zoom : 13\r\n        this.fitBounds = false\r\n        this.map = {}\r\n        this.anglePoints = []\r\n        this.userPoint = undefined\r\n        this.customerPoint = undefined\r\n        this.busLine = undefined\r\n        this.click = this.click.bind(this)\r\n        this.zoomIn = this.zoomIn.bind(this)\r\n        this.zoomOut = this.zoomOut.bind(this)\r\n        this.setUserMarker = this.setUserMarker.bind(this)\r\n        this.setCustomerMarker = this.setCustomerMarker.bind(this)\r\n        this.setBusLine = this.setBusLine.bind(this)\r\n        this.removeBusLine = this.removeBusLine.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        // console.log('mount MAP')\r\n        const { props } = this\r\n        console.log('MapContainer', props)\r\n        this.map = new mapboxgl.Map({\r\n            accessToken: 'pk.eyJ1IjoiY3RhY2xpcnUiLCJhIjoiY2tpc3M1OHJtMG50MTJxc2M3bXkwa2FreiJ9.2H4ZzQKjvfRHv3iwolsdkg',\r\n            container: this.container,\r\n            style: 'https://api.maptiler.com/maps/21ea9e3f-91b5-4d78-a2f7-694e92ec8af1/style.json?key=6CzEZUCMVZYO3TvAxszk',\r\n            center: [props.lon ? props.lon : 44.005959, props.lat ? props.lat : 56.326887],\r\n            zoom: this.zoom,\r\n            minZoom: props.minZoom ? props.minZoom : 9,\r\n            maxZoom: props.maxZoom ? props.maxZoom : 17,\r\n            zoomControl: false,\r\n            // pitch: 60\r\n        });\r\n        this.map.on('moveend', (e) => {\r\n            // console.log(e)\r\n            if(e.setUserPoint) this.userPoint.bounds = this.map.getBounds()\r\n            if(e.setCustomerPoint) this.customerPoint.bounds = this.map.getBounds()\r\n            if(e.originalEvent) this.fitBounds = false;\r\n            // this.zoom = this.map.getZoom()\r\n            // const center = this.map.getCenter()\r\n            // console.log(`moovend zoom: ${this.zoom} center: [${center.lng}, ${center.lat}]`)\r\n        });\r\n        // this.map.on('zoomend', () => {\r\n        //     this.zoom = this.map.getZoom()\r\n        //     console.log(`zoomEnd`, this.zoom)\r\n        //     });\r\n        // this.map.on('zoom', () => {\r\n        //     this.zoom = this.map.getZoom()\r\n        //     console.log(`zoom`, this.zoom)\r\n        //     });\r\n        this.map.on('click', ev => this.click(ev))\r\n        if(this.props.layers.user) this.map.on('load', ()=>this.setUserMarker(1))\r\n        if(this.props.customerPoint) this.map.on('load', ()=>this.setCustomerMarker())\r\n        // console.log('map', this.map)\r\n        // console.log('mapboxgl', mapboxgl)\r\n        // console.log('_mapboxgl', _mapboxgl)\r\n        window.L = mapboxgl\r\n        window.map = this.map\r\n    }\r\n    componentWillUnmount(){\r\n        this.map.remove()\r\n    }\r\n\r\n    componentDidUpdate(pP, pS){\r\n        // console.log(this.props)\r\n        const { layers, activeState, user } = this.props\r\n        const { busLine } = layers\r\n        // console.log(`activeState: ${activeState}`)\r\n        // console.log('update', pP.layers, layers)\r\n        // console.log('this', this.userPoint, this.busLine)\r\n        if(this.busLine && this.userPoint && this.fitBounds){\r\n            const bottom = (activeState === 'mapActive') ? 76 : 184\r\n            const bounds = this.busLine.bounds.extend([user.lon, user.lat])\r\n            this.map.fitBounds(bounds, {linear:false, padding: {top: 10, left: 10, bottom: bottom, right: 10}})\r\n        }\r\n        else if(this.busLine && this.fitBounds && ((activeState === 'mapActive' && pP.activeState !== 'mapActive') || (activeState === 'searchResultActive' && pP.activeState !== 'searchResultActive'))){\r\n            const bottom = (activeState === 'mapActive') ? 76 : 184\r\n            // console.log(`activeState: ${activeState} | ${bottom}`)\r\n            if(this.busLine.bounds) this.map.fitBounds(this.busLine.bounds, {linear:false, padding: {top: 10, left: 10, bottom: bottom, right: 10}})\r\n        }\r\n        else if(this.userPoint && this.fitBounds && ((activeState === 'mapActive' && pP.activeState !== 'mapActive') || (activeState === 'searchActive' && pP.activeState !== 'searchActive'))){\r\n            const bottom = (activeState === 'mapActive') ? 76 : 184\r\n            if(this.userPoint.bounds) this.map.fitBounds(this.userPoint.bounds, {linear:false, padding: {top: 0, left: 0, bottom: bottom, right: 0}})\r\n        }\r\n        if(!pP.layers.busLine && busLine){\r\n            // add layers\r\n            if(busLine && busLine.path && busLine.path.length) this.setBusLine()\r\n        }else if(Object.keys(pP.layers).length && !Object.keys(layers).length){\r\n            // remove layers\r\n            if(this.userPoint){ this.userPoint.obj.remove(); this.userPoint = undefined }\r\n            if(this.busLine){\r\n                this.removeBusLine()\r\n            }\r\n        }else{\r\n            // update layers\r\n            if(busLine && pP.layers.busLine && (busLine.id !== pP.layers.busLine.id || (busLine.path && !pP.layers.busLine.path))){\r\n                this.removeBusLine()\r\n                if(busLine.path) this.setBusLine()\r\n            }\r\n        }\r\n    }\r\n\r\n    removeBusLine(){\r\n        if (this.map.getLayer('busLine')) {\r\n            this.map.removeLayer('busLine')\r\n        }\r\n        if (this.map.getLayer('busLine_r')) {\r\n            this.map.removeLayer('busLine_r')\r\n        }\r\n        if (this.map.getSource('route')) {\r\n            this.map.removeSource('route') \r\n        }\r\n        if (this.map.getSource('route_r')) {\r\n            this.map.removeSource('route_r') \r\n        }\r\n        this.busLine = undefined\r\n    }\r\n\r\n    click(ev){\r\n        if(this.props.setActive) this.props.setActive('mapActive');\r\n        this.anglePoints[this.anglePoints.length] = [ev.lngLat.lng.toFixed(6), ev.lngLat.lat.toFixed(6)];\r\n        if(this.anglePoints.length === 2){\r\n            console.log(mapMath.getAngle(this.anglePoints[0], this.anglePoints[1], {final:true}));\r\n            this.anglePoints.length = 0;\r\n        }\r\n    }\r\n\r\n    setUserMarker(nowrite){\r\n        const { user, setUserMarker, customerPoint } = this.props\r\n        console.log('nowrite', nowrite)\r\n        if(!nowrite) setUserMarker(user)\r\n        const el = document.createElement('div');\r\n        el.className = 'userPoint';\r\n        if(this.userPoint){ this.userPoint.obj.remove(); this.userPoint = undefined }\r\n        this.userPoint = {}\r\n        this.userPoint.obj = new mapboxgl.Marker(el,{anchor:'center'}).setLngLat(user).addTo(this.map)\r\n        // this.map.easeTo({center:user})\r\n        // this.map.jumpTo({center:user})\r\n        // this.map.panTo(user)\r\n        if(!customerPoint){\r\n            this.map.flyTo({center:user, essential: true},{setUserPoint: 1})\r\n        }else{\r\n            const bounds = new mapboxgl.LngLatBounds(customerPoint, user)\r\n            this.map.fitBounds(bounds, {linear:false, padding: {top: 20, left: 20, bottom: 20, right: 20}},{setCustomerPoint: 1, setUserPoint: 1})\r\n        }\r\n        this.fitBounds = true\r\n    }\r\n\r\n    setCustomerMarker(){\r\n        const { customerPoint, customerType, user } = this.props\r\n        console.log(this.props)\r\n        const el = document.createElement('div');\r\n        el.className = 'customerPoint'; el.setAttribute('type', customerType)\r\n        if(this.customerPoint){ this.customerPoint.obj.remove(); this.customerPoint = undefined }\r\n        this.customerPoint = {}\r\n        this.customerPoint.obj = new mapboxgl.Marker(el,{anchor:'bottom', rotation:-45}).setLngLat(customerPoint).addTo(this.map)\r\n        if(!this.userPoint){\r\n            this.map.flyTo({center:customerPoint, essential: true},{setCustomerPoint: 1})\r\n        }else{\r\n            const bounds = new mapboxgl.LngLatBounds(customerPoint, user)\r\n            this.map.fitBounds(bounds, {linear:false, padding: {top: 20, left: 20, bottom: 20, right: 20}},{setCustomerPoint: 1, setUserPoint: 1})\r\n        }\r\n        this.fitBounds = true\r\n    }\r\n\r\n    setBusLine(){\r\n        const { layers, activeState, user } = this.props\r\n        this.busLine = {id: layers.busLine.id}\r\n        this.busLine.route = {\r\n            'type': 'FeatureCollection',\r\n            'features': [\r\n                {\r\n                'type': 'Feature',\r\n                'geometry': {\r\n                    'type': 'LineString',\r\n                    'coordinates': layers.busLine.path\r\n                }\r\n                }\r\n            ]\r\n            };\r\n        if(layers.busLine.path_revers) this.busLine.route_r = {\r\n            'type': 'FeatureCollection',\r\n            'features': [\r\n                {\r\n                'type': 'Feature',\r\n                'geometry': {\r\n                    'type': 'LineString',\r\n                    'coordinates': layers.busLine.path_revers\r\n                }\r\n                }\r\n            ]\r\n            };\r\n        this.map.addSource('route', {\r\n            'type': 'geojson',\r\n            'data': this.busLine.route\r\n            });\r\n        if(this.busLine.route_r) this.map.addSource('route_r', {\r\n            'type': 'geojson',\r\n            'data': this.busLine.route_r\r\n            });\r\n        this.busLine.obj = [this.map.addLayer({\r\n            id: 'busLine',\r\n            source: 'route',\r\n            type: 'line',\r\n            paint: {\r\n                'line-blur': .5,\r\n                'line-color': 'rgb(124, 138, 211)',\r\n                'line-width': 3\r\n            },\r\n            layout: {\r\n                'line-cap':'round'\r\n            }\r\n        })];\r\n        if(this.busLine.route_r) this.busLine.obj.push(this.map.addLayer({\r\n            id: 'busLine_r',\r\n            source: 'route_r',\r\n            type: 'line',\r\n            paint: {\r\n                'line-blur': .5,\r\n                'line-color': 'rgb(124, 138, 211)',\r\n                'line-width': 3\r\n            },\r\n            layout: {\r\n                'line-cap':'round'\r\n            }\r\n        }));\r\n        const bottom = (activeState === 'mapActive') ? 76 : (activeState === 'searchResultActive') ? 184 : 10\r\n        const splitCoord = (layers.busLine.path_revers) ? layers.busLine.path.concat(layers.busLine.path_revers) : layers.busLine.path\r\n        this.busLine.bounds = splitCoord.reduce((bounds, coord) => {\r\n            return bounds.extend(coord);\r\n            }, new mapboxgl.LngLatBounds(splitCoord[0], splitCoord[0]));\r\n        if(this.userPoint) this.busLine.bounds.extend([user.lon, user.lat])\r\n        this.map.fitBounds(this.busLine.bounds, {linear:false, padding: {top: 10, left: 10, bottom: bottom, right: 10}})\r\n        this.fitBounds = true\r\n    }\r\n\r\n    zoomIn(){\r\n        if(this.map.loaded) {this.map.zoomIn()} else { return }\r\n    }\r\n\r\n    zoomOut(){\r\n        if(this.map.loaded) {this.map.zoomOut()} else { return }\r\n    }\r\n\r\n    render(){\r\n        // console.log(this.props)\r\n        const zoom = {zoomIn: this.zoomIn, zoomOut: this.zoomOut}\r\n        const { layers } = this.props\r\n        const { busLine } = layers\r\n        return (\r\n            <>\r\n            <div ref={el => this.container = el} />\r\n            {busLine && !busLine.path && <LoaderForMap />}\r\n            <MapZoomControls setUserMarker={()=>this.setUserMarker()} zoom={zoom}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst MapContainer = connect(\r\n    mapMapStateToProps,{\r\n        setUserMarker\r\n    }\r\n)(_MapContainer)\r\n\r\nconst LoaderForMap = () => {\r\n    return <div className='loaderForMap'></div>\r\n}\r\n\r\nclass MapZoomControls extends React.PureComponent{\r\n    render(){\r\n        const { zoom, setUserMarker } = this.props\r\n        return(\r\n            <div className=\"MTaxiNavi\">\r\n                <div className=\"naviPlus\" onClick={zoom.zoomIn}><div className=\"shadow\"></div></div>\r\n                <div className=\"naviMinus\" onClick={zoom.zoomOut}><div className=\"shadow\"></div></div>\r\n                <div className=\"naviCenter\" onClick={setUserMarker}><div className=\"shadow\"></div></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass MTaxiQRScan extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            on: false\r\n        }\r\n        this.on = {\r\n            start: ()=>{\r\n                this.setState(state=>({...state, on: true}))\r\n            },\r\n            end: ()=>{\r\n                this.setState(state=>({...state, on: false}))\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        const on = (this.state.on) ? 'on' : '';\r\n        return(\r\n            <div className={`MTaxiQRScan`} onTouchStart={this.on.start} onTouchCancel={this.on.end} onTouchEnd={this.on.end}>\r\n                <div className={`QRScan ${on}`}>\r\n                    <img className=\"off\" alt=\"\" src={require(\"../../img/new/round_QR.svg\").default}/>\r\n                    <img className=\"on\" alt=\"\" src={require(\"../../img/new/round_QR_on.svg\").default}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass SearchMapContainer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transition: 'transition',\r\n            search: null,\r\n            type: null\r\n        }\r\n        this.onTS = this.onTS.bind(this);\r\n        this.setSearchValue = this.setSearchValue.bind(this);\r\n        this.setTypeSearch = this.setTypeSearch.bind(this);\r\n        this.setActive = this.setActive.bind(this);\r\n    }\r\n\r\n    onTS(action){\r\n        switch (action){\r\n            case 'start':\r\n                this.setState(state=>({...state, transition: ''}))\r\n                break;\r\n            case 'end':\r\n                this.setState(state=>({...state, transition: 'transition'}))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        // const { search, type } = this.state\r\n        // console.log(`search:${search} type:${type}`)\r\n    }\r\n\r\n    setSearchValue(v, clear){\r\n        if(!v && clear!==undefined) this.props.setActive('searchActive')\r\n        this.setState(state=>({\r\n            ...state,\r\n            search: v ? v : null,\r\n            type: clear ? null : state.type\r\n        }))\r\n    }\r\n\r\n    setTypeSearch(type){\r\n        this.props.setActive('searchTypeActive')\r\n        this.setState(state=>({\r\n            ...state,\r\n            search: null,\r\n            type: type ? type : null\r\n        }))\r\n    }\r\n\r\n    setActive(w){\r\n        if(this.state.search !== null && w === 'searchActive'){\r\n            this.props.setActive('searchResultActive');\r\n        }else{\r\n            this.props.setActive(w);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={`globalNavigate ${this.state.transition}`}>\r\n                <GlogalSearch \r\n                    onTouchStart={()=>this.onTS('start')}\r\n                    onTouchEnd={()=>this.onTS('end')}\r\n                    onTouchCancel={()=>this.onTS('end')}\r\n                    setActive={this.setActive}\r\n                    activeState={this.props.activeState}\r\n                    sfvisible={this.props.sfvisible}\r\n                    searchValue={this.state.search}\r\n                    searchType={this.state.type}\r\n                    setSearchValue={this.setSearchValue}\r\n                />\r\n                <SearchCategories \r\n                    setTypeSearch={this.setTypeSearch}\r\n                    searchValue={this.state.search}\r\n                    searchType={this.state.type}\r\n                />\r\n                <SearchListResults \r\n                    setSearchValue={this.setSearchValue}\r\n                    searchValue={this.state.search}\r\n                    searchType={this.state.type}\r\n                    setActive={this.props.setActive}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass _GlogalSearch extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            full: false,\r\n            search: props.searchValue ? props.searchValue : null,\r\n            searchButton: this.props.sfvisible\r\n        }\r\n        this.setSearchValue = this.setSearchValue.bind(this)\r\n        this.hideButton = this.hideButton.bind(this)\r\n        this.clickOnSearchField = this.clickOnSearchField.bind(this)\r\n    }\r\n\r\n    setSearchValue(v, clear){\r\n        // clear = !v ? true : clear\r\n        this.props.setSearchValue(v, clear)\r\n        if(clear) this.props.clearMap()\r\n        this.setState(state=>({\r\n            ...state,\r\n            search: v ? v : null,\r\n            full: v ? true : false\r\n        }))\r\n    }\r\n\r\n    hideButton(){\r\n        this.setState(state=>({\r\n            ...state,\r\n            searchButton: false\r\n        }))\r\n    }\r\n\r\n    componentDidUpdate(pP, pS){\r\n        if(pP.searchValue !== this.props.searchValue){\r\n            this.setState(state=>({\r\n                ...state,\r\n                search: this.props.searchValue\r\n            }))\r\n        }\r\n    }\r\n\r\n    clickOnSearchField(){\r\n        const { setActive, activeState } = this.props\r\n        if(activeState === 'mapActive'){\r\n            setActive('searchActive')\r\n        }else{\r\n            setActive('searchFieldActive')   \r\n        }\r\n    }\r\n\r\n    render(){\r\n        const full = (this.state.full || this.props.searchType) ? ' full' : '';\r\n        const searchButton = (this.state.searchButton || this.props.sfvisible) ? ' searchButton' : '';\r\n        return(\r\n            <div className={`search${full}${searchButton}`}>\r\n                {!this.props.sfvisible && <div className='globalSearchBack' onClick={this.clickOnSearchField}>{this.state.search || 'Поиск'}</div>}\r\n                {this.props.sfvisible && <GlobalSearchField setActive={this.props.setActive} setSearchValue={this.setSearchValue} value={this.state.search}/>}\r\n                <div className=\"clearSearch\" onClick={(e)=>{this.setSearchValue('', true);e.stopPropagation();}}>&nbsp;</div>\r\n                <div className=\"buttonSearch\" data-translate=\"common_navigate_find\" onClick={this.hideButton}>Найти</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst GlogalSearch = connect(\r\n    mapSearchToProps,{\r\n        clearMap\r\n    }\r\n)(_GlogalSearch)\r\n\r\nclass SearchCategories extends React.Component{\r\n    render(){\r\n        const { searchValue, searchType } = this.props\r\n        const hide = (searchValue||searchType) ? ' hide' : '';\r\n        return(\r\n            <div className={`categories${hide}`}>\r\n                <div className=\"categoryItem\" onClick={()=>this.props.setTypeSearch('2')}>\r\n                    <div className=\"categoryLogo\">\r\n                        <img alt=\"\" src={require(\"../../img/new/bus.png\").default}/>\r\n                    </div>\r\n                    <div className=\"categoryName\" data-translate=\"common_transport\">Транспорт</div>\r\n                </div>\r\n                <div className=\"categoryItem\" onClick={()=>this.props.setTypeSearch('1')}>\r\n                    <div className=\"categoryLogo\">\r\n                        <img alt=\"\" src={require(\"../../img/new/dish.png\").default}/>\r\n                    </div>\r\n                    <div className=\"categoryName\" data-translate=\"common_restorans\">Рестораны</div>\r\n                </div>\r\n                <div className=\"categoryItem\" onClick={()=>this.props.setTypeSearch('8')}>\r\n                    <div className=\"categoryLogo\">\r\n                        <img alt=\"\" src={require(\"../../img/new/shopping-basket.png\").default}/>\r\n                    </div>\r\n                    <div className=\"categoryName\" data-translate=\"common_delivery\">Доставка</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass _SearchListResults extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.filter = this.filter.bind(this)\r\n        this.viewCustomer = this.viewCustomer.bind(this)\r\n        this.state = {\r\n            viewCustomer: null\r\n        }\r\n    }\r\n\r\n    sortByParam(param){\r\n        return function(a, b){\r\n            return (a[param] > b[param]) ? 1 : -1;\r\n        }\r\n    }\r\n\r\n    filter(){\r\n        const { searchType, customers, routes } = this.props\r\n        // console.log('customers, routes ', customers, routes)\r\n        let _arr;\r\n        const _customersByType = (Object.keys(customers).length && customers.types[searchType]) ? Object.values(customers.types[searchType].list) : []\r\n        const _customers = (Object.keys(customers).length && customers.list) ? Object.values(customers.list) : []\r\n        const _routes = Object.values(routes)\r\n        const _c = _customers.sort(this.sortByParam('name'))\r\n        const _cBT = _customersByType.sort(this.sortByParam('name'))\r\n        const _r = _routes.sort(this.sortByParam('name'))\r\n        if(searchType){\r\n            if(searchType === '2') {_arr = _r}\r\n            else {_arr = _cBT}\r\n        }else{\r\n            _arr = _c.concat(_r)\r\n        }\r\n        let _fav = []\r\n        _arr.forEach(item=>{\r\n            if(item.favorite) _fav.push(item)\r\n        })\r\n        _arr = _arr.filter(item=>!item.favorite)\r\n        return _fav.concat(_arr);\r\n    }\r\n\r\n    viewCustomer(id){\r\n        this.setState(state=>({\r\n            ...state,\r\n            viewCustomer: id\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        const { searchType, searchValue } = this.props\r\n        const { viewCustomer } = this.state\r\n        // console.log(`type: ${searchType}, searchValue: ${searchValue}`)\r\n        const list = []\r\n        const filtered = this.filter()\r\n        const search = (searchValue !== null) ? searchValue : ''\r\n        filtered.forEach(item=>{\r\n            if(~item.name.toLowerCase().indexOf(search.toLowerCase())){\r\n                list.push(<SearchListItem key={`${item.type}_${item.id}_${search}`} item={item} viewCustomer={this.viewCustomer} {...this.props}/>)\r\n            }\r\n        })\r\n        if(!list.length) list.push(<SearchListItem key={'empty'} empty={'1'}/>)\r\n        return(\r\n            <div className=\"listOfNavigate\">\r\n                {viewCustomer && <Redirect to={`/main/customer/${viewCustomer}`} />}\r\n                {(searchType || searchValue) && list}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst SearchListResults = connect(\r\n    mapSearchToProps,{\r\n        setCustomerLike,\r\n        removeCustomerLike,\r\n        setRouteLike,\r\n        removeRouteLike,\r\n        loadRouteDetails,\r\n        setBusLine\r\n    }\r\n    )(_SearchListResults);\r\n\r\nclass SearchListItem extends React.Component{\r\n    render(){\r\n        if(this.props.empty){\r\n            return(\r\n                <div className=\"listNavigateItem short\">\r\n                    <div className=\"listItemNaviIcon\"></div>\r\n                    <div className=\"listItemNaviName\">\r\n                        <div className=\"listItemName\"><i><small>Нет подходящих результатов</small></i></div>\r\n                    </div>\r\n                    <div className=\"listItemNaviLike\"></div>\r\n                </div>\r\n            )\r\n        }else{\r\n            const { item } = this.props\r\n            const { description, name, favorite} = item\r\n            const { setSearchValue, loadRouteDetails, setBusLine, setCustomerLike, setRouteLike, removeCustomerLike, removeRouteLike, setActive, viewCustomer } = this.props\r\n            switch (item.type){\r\n                case '2':{\r\n                    const onOff = favorite ? ' on' : ' off';\r\n                    const likeDo = favorite ? removeRouteLike : setRouteLike\r\n                    const path = description.split(',');\r\n                    const click = (!item.path) ? \r\n                        p=>{\r\n                            setBusLine(item)\r\n                            loadRouteDetails(p);\r\n                            setSearchValue(p.name);\r\n                            setActive('searchResultActive');\r\n                        } : \r\n                        p=>{\r\n                            setBusLine(item)\r\n                            setSearchValue(p.name);\r\n                            setActive('searchResultActive');\r\n                        }\r\n                    return(\r\n                        <div className=\"listNavigateItem top show\" type=\"2\">\r\n                            <div className=\"listItemNaviIcon\" onClick={()=>click({id:item.id, name:item.name})}>\r\n                                <div className=\"cImg\"></div>\r\n                            </div>\r\n                            <div className=\"listItemNaviName\" onClick={()=>click({id:item.id, name:item.name})}>\r\n                                <div className=\"listItemName\">{name}</div>\r\n                                <div className=\"listItemRoute\">{path[0]} —</div>\r\n                                <div className=\"listItemRoute\">{path[1]}</div>\r\n                            </div>\r\n                            <div className={`listItemNaviLike${onOff}`} onClick={()=>likeDo({id:item.id})}></div>\r\n                        </div>\r\n                    )}\r\n                case '1':{\r\n                    const onOff = favorite ? ' on' : ' off';\r\n                    let { logo1000, short_description, logo25 } = item\r\n                    logo1000 = logo1000 ? logo1000 : '../../img/1x1.png'\r\n                    logo25 = logo25 ? logo25 : '../../img/new/dish-list.png'\r\n                    const showShortDesc = short_description ? true : false\r\n                    const likeDo = favorite ? removeCustomerLike : setCustomerLike\r\n                    const onClick = {onClick:()=>viewCustomer(item.id)}\r\n                    return(\r\n                        <div className=\"listNavigateItem top short show\" style={null} type=\"1\"> {/* logo1000 */}\r\n                            <div className=\"listItemNaviIcon\" {...onClick}>\r\n                                <div className=\"cImg\" style={null}> {/* logo25 */}\r\n                                    <img alt=''\r\n                                        src={require(`../../img/1x1.png`).default}\r\n                                        onError={()=>{return}}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"listItemNaviName\" {...onClick}>\r\n                                <div className=\"listItemName\">{name}</div>\r\n                                {showShortDesc && <div className={`listItemDesc`}>{short_description}</div>}\r\n                                <div className=\"logoContainer\">\r\n                                    <img alt='' src={require(`../../img/1x1.png`).default}/> {/* logo25 */}\r\n                                </div>\r\n                            </div>\r\n                            {false && <div class=\"doOrder\"></div>}\r\n                            <div className={`listItemNaviLike${onOff}`} onClick={()=>likeDo({id:item.id})}></div>\r\n                        </div>\r\n                    )}\r\n                case '8':{\r\n                    const onOff = favorite ? ' on' : ' off';\r\n                    let { logo1000, short_description, logo25 } = item\r\n                    logo1000 = logo1000 ? logo1000 : '../../img/1x1.png'\r\n                    logo25 = logo25 ? logo25 : '../../img/new/dish-list.png'\r\n                    const showShortDesc = short_description ? 1 : 0\r\n                    const likeDo = favorite ? removeCustomerLike : setCustomerLike\r\n                    const onClick = {onClick:()=>viewCustomer(item.id)}\r\n                    return(\r\n                        <div className=\"listNavigateItem top short show\" style={null} type=\"8\"> {/* logo1000 */}\r\n                            <div className=\"listItemNaviIcon\" {...onClick}>\r\n                                <div className=\"cImg\" style={null}> {/* logo25 */}\r\n                                    <img alt=''\r\n                                        src={require(`../../img/1x1.png`).default}\r\n                                        onError={()=>{return}}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"listItemNaviName\" {...onClick}>\r\n                                <div className=\"listItemName\">{name}</div>\r\n                                {showShortDesc && <div className={`listItemDesc`}>{short_description}</div>}\r\n                                <div className=\"logoContainer\">\r\n                                    <img alt='' src={require(`../../img/1x1.png`).default}/> {/* logo25 */}\r\n                                </div>\r\n                            </div>\r\n                            {false && <div class=\"doOrder\"></div>}\r\n                            <div className={`listItemNaviLike${onOff}`} onClick={()=>likeDo({id:item.id})}></div>\r\n                        </div>\r\n                    )}\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    AppMap as default,\r\n    MapContainer\r\n}","D:\\work\\Repo\\React\\menu\\app\\src\\main\\license\\delivery.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\main\\license\\bus.js",["493"],"import React from 'react'\r\n\r\nexport default class LicenseViewBus extends React.Component{\r\n    render(){\r\n        const customer = this.props.customer;\r\n        return(\r\n            <div className=\"content\">\r\n                <h2>1. ИСПОЛЬЗУЕМЫЕ ТЕРМИНЫ</h2>\r\n                <p><b>Банк</b>&nbsp;— кредитная организация, которая имеет исключительное право осуществлять в&nbsp;совокупности следующие банковские операции: привлечение во&nbsp;вклады денежных средств физических и&nbsp;юридических лиц, размещение указанных средств от&nbsp;своего имени и&nbsp;за&nbsp;свой счет на&nbsp;условиях возвратности, платности, срочности, открытие и&nbsp;ведение банковских счетов физических и&nbsp;юридических лиц.</p>\r\n                <p><b>Банковская карта</b>&nbsp;— банковская карта международной платежной системы MasterCard, Visa, МИР.</p>\r\n                <p><b>Юронга</b>&nbsp;— Общество с&nbsp;ограниченной ответственностью «Обед. Стор»\r\n                <br/>Юридический адрес: 603140, Нижегородская&nbsp;обл., г.&nbsp;Нижний&nbsp;Новгород, пер.&nbsp;Мотальный, 10А, оф.&nbsp;609  <br/>Фактический&nbsp;адрес: 603140, Нижегородская&nbsp;обл., г.&nbsp;Нижний&nbsp;Новгород, пер.&nbsp;Мотальный, 10А, оф.&nbsp;609 <br/>Контактный&nbsp;тел.: (951)&nbsp;913-88-37 <br/>Расчетный&nbsp;счёт 40702810542000038184 в&nbsp;Волго-Вятский банк ПАО СБЕРБАНК <br/>кор.&nbsp;счёт&nbsp;30101810900000000603 <br/>БИК&nbsp;042202603\r\n                <br/>ИНН/КПП&nbsp;5258143010/525801001 <br/>ОГРН&nbsp;1185275045636</p>\r\n                <p><b>Клиент</b>&nbsp;— физическое лицо, которому оказана Услуга.</p>\r\n                <p><b>Международная платежная система</b>&nbsp;— международные платежные системы MasterCard, Visa, МИР. Исходя из&nbsp;контекста настоящих Условий определяются взависимости от&nbsp;принадлежности Банковской карты Клиента к&nbsp;определенной международной платежной системе.</p>\r\n                <p><b>Условия</b>&nbsp;— настоящие Условия оплаты Услуг.</p>\r\n                <h2>2. ОБЩИЕ ПОЛОЖЕНИЯ</h2>\r\n                <p>Клиент имеет возможность посредством приложения заказать Услуги. При этом договор купли-продажи заключается и&nbsp;обязанными сторонами по&nbsp;нему непосредственно становятся Юронга и&nbsp;Клиент.</p>\r\n                <p>Оплата Услуг производится по&nbsp;тарифам Пастарама Спорт.</p>\r\n                <p>Клиент по&nbsp;условиям договора купли-продажи и&nbsp;в&nbsp;соответствии с&nbsp;действующим законодательством имеет обязанность по&nbsp;оплате оказанных ему Услуг. Оплата посредством передачи наличных денежных средств осуществляется Клиентом путем непосредственной передачи наличных денежных средств продавцу/бариста, осуществившему оказание Услуги, и&nbsp;данными Условиями не&nbsp;регулируется.</p>\r\n                <p>При наличии технической возможности осуществления расчетов за&nbsp;Услуги посредством использования Банковских карт Клиент имеет право произвести оплату за&nbsp;предоставленные Услуги посредством использования своей Банковской карты.</p>\r\n                <p>При этом, Юронга осуществляет информационное и&nbsp;технологическое взаимодействие для обеспечения приема платежей посредством Банковских карт, и&nbsp;осуществляет сбор денежных средств причитающихся по&nbsp;оказанным Услугам.</p>\r\n                <p>При осуществлении платежей посредством использования Банковских карт Клиент обязан соблюдать установленные правила и&nbsp;требования международных платежных систем, а&nbsp;также банков, эмитировавших Банковские карты Клиента, регулирующих осуществление платежей с&nbsp;использованием Банковских карт.</p>\r\n                <p>Осуществление безналичных расчетов с&nbsp;использованием Банковских карт осуществляется Банком. Юронга отвечает исключительно за&nbsp;правильность определения стоимости подлежащих оплате Услуг и&nbsp;доведения указанной информации до&nbsp;Банка.</p>\r\n                <p>Настоящие Условия являются публичной офертой в&nbsp;соответствии со&nbsp;ст.435 и&nbsp;ч.2 ст.437ГК РФ. Соблюдая требования к&nbsp;обеспечению возможности оплаты Услуг посредством Банковских карт Клиента, указанные в&nbsp;п.3. настоящих Условий и/или производя оплату Услуг посредством использования Банковских карт, Клиент, безусловно и&nbsp;безоговорочно принимает и&nbsp;соглашается с&nbsp;настоящим Условиями.</p>\r\n                <p><b>2.1. Оплата с&nbsp;помощью банковской карты через «Сбербанк».</b></p>\r\n                <p>Оплата предоставляется без комиссии. Платежи осуществляются перечислением денежных средств с&nbsp;банковских карт VISA, MASTER CARD и&nbsp;МИР при наличии возможности совершения интернет-платежей, предоставленных Вашим банком, выпустившим банковскую карту.</p>\r\n                <p>О&nbsp;наличии возможности совершения интернет-платежей с&nbsp;использованием банковской карты, Вы&nbsp;можете узнать, обратившись в&nbsp;банк.</p>\r\n                <p>Ввод данных банковской карты осуществляется на&nbsp;защищенной платежной странице банка&nbsp;— партнера, предоставляющего услугу. Банком-партнером является ПАО «Сбербанк».</p>\r\n                <p>Конфиденциальность:</p>\r\n                <p>1) Услуга оплаты через интернет осуществляется в&nbsp;соответствии с&nbsp;Правилами международных платежных систем на&nbsp;принципах соблюдения конфиденциальности и&nbsp;безопасности совершения платежа, для чего используются самые современные методы проверки, шифрования и&nbsp;передачи данных по&nbsp;закрытым каналам связи.</p>\r\n                <p>2) Ввод данных банковской карты осуществляется на&nbsp;защищенной платежной странице банка&nbsp;— партнера, предоставляющего Услугу.</p>\r\n                <p>Нашим банком&nbsp;— партнером является ПАО «Сбербанк».</p>\r\n                <p>Случаи отказа в&nbsp;совершении платежа:</p>\r\n                <p>• банковская карта не&nbsp;предназначена для совершения платежей через интернет, о&nbsp;чем можно узнать, осведомившись в&nbsp;Вашем Банке;</p>\r\n                <p>• данные банковской карты введены неверно;</p>\r\n                <p>• истек срок действия банковской карты. Срок действия карты, как правило, указан на&nbsp;лицевой стороне карты (это месяц и&nbsp;год, до&nbsp;которого действительна карта). Подробнеео сроке действия карты&nbsp;Вы можете узнать, обратившись в&nbsp;банк, выпустивший банковскую карту;</p>\r\n                <p>• недостаточно средств для оплаты на&nbsp;банковской карте. Подробнее о&nbsp;наличии средствна банковской карте&nbsp;Вы можете узнать, обратившись в&nbsp;банк, выпустивший банковскую карту;</p>\r\n                <p>• превышен установленный лимит операций за&nbsp;день. Сумма ежедневного лимита для всех операций определяется банком-партнером.</p>\r\n                <p>Для корректного ввода необходимо внимательно и&nbsp;точно, соблюдая последовательность цифр и&nbsp;букв, ввести данные так, как они указаны на&nbsp;Вашей карте:</p>\r\n                <p>1. владелец карты (как правило, указан на&nbsp;лицевой стороне банковской карты на&nbsp;английском языке заглавными буквами. Например, IVANOV IVAN);</p>\r\n                <p>2. номер карты (как правило, указан на&nbsp;лицевой стороне банковской карты и&nbsp;состоит из&nbsp;16-и цифр. Например: 0123 4567 8901 2345);</p>\r\n                <p>3. срок действия карты (как правило, указан на&nbsp;лицевой стороне банковской карты -месяц и&nbsp;год, до&nbsp;которого действительна карта. Срок действия карты вводится цифрами. Например, 12&nbsp;(вводится в&nbsp;поле месяца) и&nbsp;13 (вводится в&nbsp;поле года), что означает, что карта действительна до&nbsp;декабря 2013&nbsp;года);</p>\r\n                <p>4. CVV2 или CVC2 код карты (как правило, указан на&nbsp;обратной стороне банковской карты и&nbsp;состоит из&nbsp;3-х цифр. Например, 123).</p>\r\n                <h2>3. ТРЕБОВАНИЯ</h2>\r\n                <p>Для обеспечения возможности осуществления расчетов за&nbsp;оказанные Услуги посредством Банковских карты Клиент обязан:</p>\r\n                <p>—&nbsp;установить на&nbsp;свое личное мобильное устройство (телефон, смартфон, и&nbsp;т.&nbsp;п.), работающих под операционными системами iOs или Android, приложение (программу) «Infotoria».</p>\r\n                <p><b>Все дальнейшие действия проводятся исключительно с&nbsp;указанного мобильного устройства Клиента.</b></p>\r\n                <p>—&nbsp;создать профиль Клиента, пройдя регистрацию с&nbsp;указанием своего абонентского номера мобильного телефона;</p>\r\n                <p>—&nbsp;в&nbsp;профиле Клиента «Карты» через приложение (программу) необходимо указать Банковскую карту, с&nbsp;которой в&nbsp;будущем Клиент планирует осуществлять расчеты за&nbsp;Услуги, и&nbsp;ввести следующие данные Банковской карты:</p>\r\n                <p>&nbsp;• Номер Банковской карты (как правило, указан на&nbsp;лицевой стороне банковской картыи состоит из&nbsp;16-и цифр. Например: 0123 4567 8901 2345);</p>\r\n                <p>&nbsp;• Срок действия (как правило, указан на&nbsp;лицевой стороне банковской карты&nbsp;— месяц игод, до&nbsp;которого действительна карта. Срок действия карты вводится цифрами. Например, 12&nbsp;(вводится в&nbsp;поле месяца) и&nbsp;13 (вводится в&nbsp;поле года), что означает, что карта действительна до&nbsp;декабря 2013&nbsp;года);</p>\r\n                <p>&nbsp;• Защитный код (CVV) (как правило, указан на&nbsp;обратной стороне банковской карты и&nbsp;состоит из&nbsp;3-х цифр. Например, 123);</p>\r\n                <p>&nbsp;• Имя владельца карты (как правило, указан на&nbsp;лицевой стороне банковской карты на&nbsp;английском языке заглавными буквами. Например, IVANOV IVAN);</p>\r\n                <p>&nbsp;&bull; E-mail и&nbsp;номер мобильного телефона</p>\r\n                <p>Данные Банковской карты передаются в&nbsp;систему, и&nbsp;если данные действительны и&nbsp;верны, то&nbsp;Банковская карта успешно добавляется в&nbsp;профиль Клиента в&nbsp;системе. Клиент обязан указать достоверную и&nbsp;точную информацию для обеспечения возможности оплаты Услуг посредством Банковских карт Клиента.</p>\r\n                <p>При добавлении Банковской карты осуществляется блокировка суммы в&nbsp;размере одного (1,00) рубля, необходимая для верификации данных карты, после успешного подтверждения транзакции (подтверждения действительностии активности Банковской карты) блокировка суммы отменяется.</p>\r\n                <p>Юронга не&nbsp;несет ответственности за&nbsp;точность и&nbsp;правильность информации, предоставляемой Клиентом при регистрации, а&nbsp;также переданных Клиентом в&nbsp;систему данных о&nbsp;Банковских картах.</p>\r\n                <p>Все введенные Клиентом данные при указании Банковской карты хранятся на&nbsp;стороне Банка, доступ к&nbsp;указанным данным Юронга и&nbsp;ООО Инфотория не&nbsp;имеют. Юронга и&nbsp;ООО Инфотория гарантируют, что приложение (программа), установленная на&nbsp;мобильном устройстве Клиента, передает все введенные данные Банковской карты в&nbsp;неизменном виде непосредственно в&nbsp;Банк с&nbsp;использованием защищенных протоколов связи.</p>\r\n                <h2>4. ПОРЯДОК ОПЛАТЫ</h2>\r\n                <p>Оплата оказанных Услуги посредством использования Банковских карт допускается исключительно при наличии технической возможности и&nbsp;соблюдения Клиентом Требований к&nbsp;обеспечению возможности оплаты Услуг посредством Банковских карт, предусмотренных п.3 настоящих Условий, а&nbsp;также в&nbsp;Лицензионном соглашении.</p>\r\n                <p>Для корректной работы Приложения, а&nbsp;также во&nbsp;избежание претензий, Вам необходимо заполнить все поля во&nbsp;вкладке «Профиль», а&nbsp;именно: Ник, email; а&nbsp;также во&nbsp;вкладке «Привязать карту» ввести всю необходимую информацию для прикрепления Вашей банковской карты к&nbsp;Вашему профилю, вслучае, если&nbsp;Вы собираетесь оплачивать Ваши заказы банковской картой непосредственно через Приложение, а&nbsp;также для обеспечения возможности оплатить Ваш заказ наличными при его получении.</p>\r\n                <p>Используя Приложение, Вы&nbsp;делаете свой заказ, выбирая из&nbsp;предложенных позиций, разбитых на&nbsp;категории, необходимую Вам. На&nbsp;экране заказа укажите способ оплаты.</p>\r\n                <p><b>При нажатии кнопки «Оплатить» Вы&nbsp;тем самым подтверждаете Ваше согласие совсеми условиями предоставления услуги, а&nbsp;также Ваш отказ от&nbsp;претензий в&nbsp;случае, если исполнение заказа не&nbsp;соответствует или не&nbsp;будет соответствовать Вашему представлению о&nbsp;должном исполнении.</b></p>\r\n                <p>В&nbsp;Приложении предусмотрено 1&nbsp;способ оплаты Вашего заказа: оплата через Приложение с&nbsp;помощью привязанной к&nbsp;Вашему профилю банковской карты. Принажатии кнопки «Заказать» сумма заказа будет предварительно заблокирована, и&nbsp;лишь после выдачи заказа сумма будет списана с&nbsp;Вашего счета.</p>\r\n                <p><b>4.1. Выдача заказа</b></p>\r\n                <p>При получении Вашего заказа Вам необходимо показать служащему Юронга на&nbsp;вашем мобильном телефоне/смартфоне номер Вашего заказа. После получения заказа его сумма будет списана с&nbsp;Вашего счета.</p>\r\n                <p>Возможны ситуации, когда у&nbsp;Вас нет возможности показать номер заказа на&nbsp;Вашем мобильном телефоне. В&nbsp;этом случае служащий Юронга может Вас идентифицировать согласно введенным Вами данным, а&nbsp;именно: Ник, номер Вашего мобильного телефона, содержание вашего заказа, время Вашего заказа.</p>\r\n                <p>В&nbsp;случае, если Клиент не&nbsp;забрал свой заказ в&nbsp;установленное время, сумма этого заказа будет списана со&nbsp;счета привязанной банковской карты Клиента, при условии, что заказ не&nbsp;был заранее отменен.</p>\r\n                <h2>5. ВОЗВРАТ ПЛАТЕЖЕЙ</h2>\r\n                <p>Возврат платы за&nbsp;оказанные Услуги не&nbsp;производится. В&nbsp;случае совершения ошибочного платежа за&nbsp;неоказанные Услуги, по&nbsp;результатам рассмотрения письменного обращения Клиента, сумма ошибочного платежа может быть возвращена Клиенту исключительно на&nbsp;его Банковский счет его Банковской карты.</p>\r\n                <p>Возврат наличными денежными средствами не&nbsp;допускается.</p>\r\n                <p>Порядок возврата регулируется правилами международных платежных систем.</p>\r\n                <p>Для возврата денежных средств на&nbsp;банковскую карту Заказчику необходимо заполнить «Заявление о&nbsp;возврате денежных средств», которое высылается по&nbsp;требованию Компанией на&nbsp;электронный адрес Заказчика, и&nbsp;оправить его вместе с&nbsp;приложением копии паспорта по&nbsp;адресу: souzsharanga@yandex.ru и&nbsp;support@infotoria.city.</p>\r\n                <p>Возврат денежных средств будет осуществлен на&nbsp;банковский счет Заказчика, указанный в&nbsp;заявлении, в&nbsp;течение&nbsp;28 (двадцати восьми) рабочих дней со&nbsp;дня получения «Заявление о&nbsp;возврате денежных средств» Компанией.</p>\r\n                <p>Для возврата денежных средств, зачисленных на&nbsp;расчетный счет Компании ошибочно, посредством платежных систем, Заказчик должен обратиться с&nbsp;письменным заявлением, приложением копии паспорта и&nbsp;электронных чеков, подтверждающих ошибочное зачисление. Данное заявление необходимо направить по&nbsp;адресу: souzsharanga@yandex.ru и&nbsp;support@infotoria.city.</p>\r\n                <p>После получения письменного заявления с&nbsp;приложением копии паспорта и&nbsp;чеков/квитанций, Компания производит возврат в&nbsp;срок до&nbsp;28 (двадцати восьми) рабочих дней со&nbsp;дня получения 3аявления на&nbsp;расчетный счет Заказчика, указанный в&nbsp;заявлении. В&nbsp;этом случае, сумма возврата будет равняться стоимости Заказа. Срок рассмотрения Заявления и&nbsp;возврата денежных средств Заказчику начинает исчисляться с&nbsp;момента получения Компанией Заявления и&nbsp;рассчитывается в&nbsp;рабочих днях без учета праздников/выходных дней.</p>\r\n                <p>Если заявление поступило Компании после 18.00 рабочего дня или в&nbsp;праздничный/выходной день, моментом получения Компанией Заявления считается следующий рабочий день.</p>\r\n                <p>Требование о&nbsp;возврате товара Покупатель должен предоставить Продавцу либо вписьменном виде по&nbsp;адресу: 603140, г. Нижегородская обл., г. Нижний Новгород, пер. Мотальный, 10А, оф. 609, либо в&nbsp;электронном на&nbsp;адрес электронной почты: souzsharanga@yandex.ru и&nbsp;support@infotoria.city</p>\r\n                <p>Требование может быть составлено в&nbsp;свободной форме с&nbsp;обязательным указанием контактных данных Покупателя, совпадающих с&nbsp;указанными при заказе Товара и&nbsp;причин возврата.</p>\r\n                <p>Покупатель вправе задать все возникшие вопросы Продавцу по&nbsp;телефону: 8312660360.</p>\r\n                <h2>6. ГАРАНТИИ</h2>\r\n                <p>Юронга не&nbsp;несет какую-либо ответственность за&nbsp;любой возможный ущерб, причиненный Клиенту вследствие ненадлежащего оказания Услуги.</p>\r\n                <p>Юронга не&nbsp;несет ответственности за&nbsp;работоспособность и&nbsp;обеспечение сохранности и&nbsp;безопасности передаваемой информации при обеспечении ипроведении платежей посредством Банковских карт Клиента, в&nbsp;том числе за&nbsp;действия Банка и&nbsp;международных платежных систем, банков и&nbsp;иных участников расчетов.</p>\r\n                <p>Все взаимоотношения в&nbsp;части проведения расчетов с&nbsp;использованием Банковских карт регулируются обязательными для Клиента условиями международных платежных систем и&nbsp;договорами Клиента с&nbsp;банком, эмитировавшим Банковскую карту Клиента.</p>\r\n                <p>Клиент обязуется не&nbsp;передавать третьим лицам, свое личное мобильное устройство (телефон, смартфон, и&nbsp;т.&nbsp;п.), с&nbsp;установленным приложением (программой). В&nbsp;случае утраты своего мобильного устройства с&nbsp;установленным приложением (программой), посредством которого Клиент намеревался осуществлять расчеты за&nbsp;Услуги своей Банковской картой, Клиент обязан незамедлительно обратиться в&nbsp;банк, с&nbsp;целью блокирования своей Банковской карты.</p>\r\n                <p>Любые действия, совершенные с&nbsp;мобильного устройства Клиента, подтверждающие оплату за&nbsp;оказанные Услуги, являются действиями самого Клиента. В&nbsp;случае возникновения у&nbsp;Клиента подозрений относительно безопасности пользования Банковской картой или возможности их&nbsp;несанкционированного использования третьими лицами, Клиент обязуется незамедлительно уведомить об&nbsp;этом банк, эмитировавший Банковскую карту Клиента</p>\r\n                <h2>7. КОНФИДЕНЦИАЛЬНОСТЬ</h2>\r\n                <p>Принимая настоящие Условия Клиент подтверждает, что он&nbsp;ознакомился и&nbsp;безусловно подтверждает свое согласие с&nbsp;правилами, описанными в&nbsp;тексте <b>политики конфиденциальности</b>, включая&nbsp;те, которые имеют отношение к&nbsp;сбору и&nbsp;обработке ваших личных данных.</p>\r\n                <h2>8. ПРОЧИЕ УСЛОВИЯ</h2>\r\n                <p>К&nbsp;отношениям между Клиентом и&nbsp;Юронга применяется законодательство Российской Федерации. В&nbsp;случае возникновения вопросов и&nbsp;претензий со&nbsp;стороны Клиента он&nbsp;должен обратиться в&nbsp;Главный офис Юронга по&nbsp;телефону&nbsp;8312660360 или по&nbsp;электронной почте souzsharanga@yandex.ru.</p>\r\n                <p>Все возникающее споры стороны будут стараться решить путем переговоров, при недостижении соглашения спор будет передан на&nbsp;рассмотрение в&nbsp;судебный орган в&nbsp;соответствии с&nbsp;действующим законодательством&nbsp;РФ.</p>\r\n                <p>Признание судом недействительности какого-либо положения настоящих Условий и&nbsp;правил не&nbsp;влечет за&nbsp;собой недействительность остальных положений.</p>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\work\\Repo\\React\\menu\\app\\src\\main\\license\\rest.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\forms\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\basket\\math\\index.js",["494","495","496","497","498","499","500","501","502"],"\r\n\r\nfunction getSumm(v1, v2){\r\n    // console.log(`getSumm(${v1}, ${v2})`);\r\n    if(+v1 != v1 || +v2 != v2){\r\n        // console.log(`getSumm() => 0`);\r\n        return 0;\r\n    }\r\n    if(+v1 < 0 || +v2 < 0){\r\n        if(+v1 < 0 && +v2 < 0){\r\n            return -getSumm(-+v1, -+v2);\r\n        }else if(+v1 < 0){\r\n            return getDifference(v2, -+v1);\r\n        }else{\r\n            return getDifference(v1, -+v2);\r\n        }\r\n    }\r\n    let val1, val2, integer, fraction, intFraction;\r\n    if((''+v1).indexOf('.') === -1 && (''+v2).indexOf('.') === -1){\r\n        let res = parseInt(v1) + parseInt(v2);\r\n        // console.log(`getSumm() => ${res}`);\r\n        return res;\r\n    }else{\r\n        val1 = integerFraction(v1);\r\n        val2 = integerFraction(v2);\r\n        integer = val1.integer + val2.integer;\r\n        fraction = val1.fraction + val2.fraction;\r\n        intFraction = fraction - (fraction % 100);\r\n        if(intFraction > 0){\r\n            fraction = fraction % 100;\r\n            integer += intFraction/100;\r\n        }\r\n        if((''+fraction).length == 1){\r\n            fraction = '0' + fraction;\r\n        }\r\n        let res = parseFloat(integer + '.' + fraction);\r\n        // console.log(`getSumm() => ${res}`);\r\n        return res;\r\n    }\r\n}\r\n\r\nfunction getDifference(md, ms){\r\n    if(+md != md || +ms != ms){\r\n        return 0;\r\n    }\r\n    if(+md > 0 && +ms < 0){\r\n        return getSumm(md, -+ms);\r\n    }else if(+md < 0 && +ms > 0){\r\n        return -getSumm(-+md, ms);\r\n    }else if(+md < 0 && +ms < 0){\r\n        return getDifference(-+ms, -+md);\r\n    }\r\n    let M, m, integer, fraction;\r\n    if((''+md).indexOf('.') === -1 && (''+ms).indexOf('.') === -1){\r\n        let res = parseInt(md) - parseInt(ms);\r\n        return res;\r\n    }else{\r\n        M = integerFraction(md);\r\n        m = integerFraction(ms);\r\n        integer = M.integer - m.integer;\r\n        fraction = M.fraction - m.fraction;\r\n        if(integer > 0){\r\n            if(fraction < 0){\r\n                fraction = 100 - (-fraction % 100);\r\n                integer -= 1;\r\n            }\r\n            if((''+fraction).length == 1){\r\n                fraction = '0' + fraction;\r\n            }\r\n            let res = parseFloat(integer + '.' + fraction);\r\n            // console.log(`getDifference() => ${res}`);\r\n            return res;\r\n        }else if(integer === 0){\r\n            let pref;\r\n            if(fraction < 0){\r\n                pref = '-';\r\n                fraction = -fraction;\r\n            }else{\r\n                pref = '';\r\n            }\r\n            if((''+fraction).length === 1){\r\n                fraction = '0' + fraction;\r\n            }\r\n            let res = parseFloat(pref + integer + '.' + fraction);\r\n            // console.log(`getDifference() => ${res}`);\r\n            return res;\r\n        }else{\r\n            if(fraction < 0){\r\n                fraction = -fraction;\r\n            }else{\r\n                fraction = 100 - fraction;\r\n                integer += 1;\r\n                if(integer === 0){\r\n                    integer = '-0';\r\n                }\r\n            }\r\n            if((''+fraction).length === 1){\r\n                fraction = '0' + fraction;\r\n            }\r\n            let res =  parseFloat(integer + '.' + fraction);\r\n            // console.log(`getDifference() => ${res}`);\r\n            return res;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getMultiplication(v, k){\r\n    if(+v != v || +k != k){\r\n        return 0;\r\n    }\r\n    if(+v * +k < 0){\r\n        if(+v < 0){\r\n            return -getMultiplication(-+v, k);\r\n        }else{\r\n            return -getMultiplication(v, -+k);\r\n        }\r\n    }else if(+v < 0 && +k <0){\r\n        v = -+v;\r\n        k = -+k;\r\n    }\r\n    let val, integer, fraction, intFraction;\r\n    k = parseInt(k);\r\n    if((''+v).indexOf('.') === -1){\r\n        let res = parseInt(v) * k;\r\n        // console.log(`getMultiplication() => ${res}`);\r\n        return res;\r\n    }else{\r\n        val = integerFraction(v);\r\n        integer = val.integer * k;\r\n        fraction = val.fraction * k;\r\n        intFraction = fraction - (fraction % 100);\r\n        if(intFraction > 0){\r\n            fraction = fraction % 100;\r\n            integer += intFraction/100;\r\n        }\r\n        if((''+fraction).length == 1){\r\n            fraction = '0' + fraction;\r\n        }\r\n        let res = parseFloat(integer + '.' + fraction);\r\n        // console.log(`getMultiplication() => ${res}`);\r\n        return res;\r\n    }\r\n}\r\n\r\nfunction integerFraction(value){\r\n    let val = {integer:0, fraction:0};\r\n    let frac;\r\n    if((''+value).indexOf('.') === -1){\r\n        val.integer = parseInt(value);\r\n    }else{\r\n        val.integer = parseInt((''+value).substr(0,(''+value).indexOf('.')));\r\n        frac = (''+value).substr((''+value).indexOf('.') + 1);\r\n        if(frac.length === 1){\r\n            frac += '0';\r\n        }\r\n        val.fraction = parseInt( frac );\r\n    }\r\n    return val;\r\n}\r\n\r\nfunction formatPrice(price){\r\n    let tail;\r\n    price += \"\";\r\n    if(price.indexOf('.') !== -1){\r\n        tail = price.substr(price.indexOf('.'));\r\n        price = price.substr(0, price.indexOf('.'));\r\n    }\r\n    price = new Array(4 - price.length % 3).join(\"U\") + price;\r\n    price = price.replace(/([0-9U]{3})/g, \"$1 \").replace(/U/g, \"\");\r\n    if(tail){\r\n        return(price.substr(0, price.length-1) + tail.substr(0,3));\r\n    }else{\r\n        return(price);\r\n    }\r\n}\r\n\r\nexport {\r\n    getSumm,\r\n    getDifference,\r\n    getMultiplication,\r\n    formatPrice\r\n}","D:\\work\\Repo\\React\\menu\\app\\src\\forms\\validate.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\routes\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\routes\\actions.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\routes\\types.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\api\\routes.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\main\\beacon\\index.js",["503","504"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { beaconMapStateToProps } from '../../reducers'\r\nimport { \r\n    setBeaconView,\r\n    setBeaconHide,\r\n    setBeaconDefaultView,\r\n    setBeaconDefaultHide,\r\n    getBeaconParams,\r\n    setBeaconParams,\r\n    setAplicationOpenViewd,\r\n    setBluetoothAccess,\r\n    setGpsAccess,\r\n    setPushAccess,\r\n    getAppVersion,\r\n    getBeaconInfo\r\n} from '../../reducers/beacon/actions'\r\nimport { showPopup, hidePopup } from '../../reducers/popup/actions'\r\nimport Header from '../header'\r\nimport { NBSP } from '../../elements/specialHtmlElements'\r\n\r\nimport '../../css/beacon.scss'\r\n\r\nclass _BeaconScan extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            state: 'alarm' // searching, countdown\r\n        }\r\n        this.back = this.back.bind(this);\r\n        this.setSearching = this.setSearching.bind(this);\r\n        this.beaconHide = this.beaconHide.bind(this);\r\n    }\r\n\r\n    back(){\r\n        this.props.setBeaconHide()\r\n    }\r\n\r\n    beaconHide(){\r\n        // console.log('defaultHide: ', this.props.defaultHide)\r\n        if(this.props.defaultHide){\r\n            this.props.setBeaconDefaultView()\r\n        }else{\r\n            this.props.setBeaconDefaultHide()\r\n        }\r\n    }\r\n\r\n    setSearching(){\r\n        this.setState(state=>({\r\n            ...state,\r\n            state: 'searching'\r\n        }))\r\n    }\r\n\r\n    componentDidUpdate(pP, pS){\r\n        const { bluetooth, gps, push, openApp } = this.props\r\n        // console.log('bluetooth', pP.bluetooth, bluetooth)\r\n        // console.log('gps', pP.gps, gps)\r\n        // console.log('openApp', pP.openApp, openApp)\r\n        // console.log('state', pS.state, this.state.state)\r\n        \r\n        if( (!bluetooth || !gps) && (pS.state !== 'alarm') ){\r\n            this.setState(state=>({...state, state: 'alarm'}))\r\n        }else if(bluetooth && gps && openApp && (!pP.gps || !pP.bluetooth || (!pP.openApp && openApp))){\r\n            this.props.setAplicationOpenViewd()\r\n            this.setState(state=>({...state, state: 'countdown'}))\r\n        }else if(bluetooth && gps && this.state.state!=='searching' && this.state.state!=='countdown'){\r\n            this.setState(state=>({...state, state: 'searching'}))\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        setTimeout(this.props.getBeaconParams, 1000)\r\n    }\r\n\r\n    render(){\r\n        // console.log(this.props)\r\n        const { view } = this.props\r\n        const className = view ? 'show' : ''\r\n        const alarmBeaconText = [React.createElement('nobr', {key:0}, 'Поиск радио-маяка невозможен,'),React.createElement(React.Fragment, {key:1}, ' включите:')] // '<nobr>Поиск радио-маяка невозможен,</nobr> включите:'\r\n        const goodBeaconText = [React.createElement(React.Fragment, {key:0}, 'Ожидайте, '),React.createElement('nobr', {key:1}, 'идёт поиск радио-маяка')] // 'Ожидайте, <nobr>идёт поиск радио-маяка</nobr>'\r\n        const searchBeaconText = [React.createElement(React.Fragment, {key:0}, 'Радио-маяк пока не'), <NBSP key='1'/>, React.createElement(React.Fragment, {key:2}, 'найден, продолжайте ожидать')] // 'Радио-маяк пока не&nbsp;найден, продолжайте ожидать'\r\n        const goodQRScanText = 'или отсканируйте QR-код'\r\n        return(\r\n            <div className={`beaconTech ${className}`}>\r\n                <Header back={this.back} actualPage={'/beacon'}/>\r\n                <div className=\"appTech search\">\r\n                    <div className=\"appTechTop\">\r\n                        {this.state.state === 'alarm' && <div className=\"text\">{alarmBeaconText}</div>}\r\n                        {this.state.state === 'countdown' && <div className=\"text\">{goodBeaconText}</div>}\r\n                        {this.state.state === 'searching' && <div className=\"text\">{searchBeaconText}</div>}\r\n\r\n                        {this.state.state !== 'alarm' && <Roller15 countdown={this.state.state==='countdown'} setSearching={this.setSearching}/>}\r\n\r\n                        {this.state.state === 'alarm' && <div className=\"options\">\r\n                            <Switch\r\n                                name={`Bluetooth`}\r\n                                nameStyle={{\r\n                                    color: 'rgba(48, 48, 48, 0.38)',\r\n                                    fontSize: '14px',\r\n                                    lineHeigth: '18px'}}\r\n                                colorTheme='orange'\r\n                                isON={this.props.bluetooth}\r\n                                click={this.props.setBluetoothAccess}\r\n                                />\r\n                            <Switch\r\n                                name={`GPS`}\r\n                                nameStyle={{\r\n                                    color: 'rgba(48, 48, 48, 0.38)',\r\n                                    fontSize: '14px',\r\n                                    lineHeigth: '18px'}}\r\n                                colorTheme='orange'\r\n                                isON={this.props.gps}\r\n                                click={this.props.setGpsAccess}\r\n                                />\r\n                        </div>}\r\n\r\n                        <div className=\"detailsBeaconTech\">Как только окажетесь в&nbsp;зоне действия, оплата будет доступна</div>\r\n\r\n                        <div className=\"text\">{goodQRScanText}</div>\r\n\r\n                        <ScanQR onClick={()=>this.props.showPopup({ title: 'hello', content: 'text', canClose: true })}/>\r\n                    </div>\r\n                    <div className=\"setupOptionButton\">\r\n                        <Switch\r\n                            name={[React.createElement(React.Fragment,{key:'0'},'Больше'), <NBSP key='1'/>, React.createElement(React.Fragment,{key:'2'},'не показывать')]}\r\n                            colorTheme='gray'\r\n                            click={this.beaconHide}\r\n                            isON={this.props.defaultHide}\r\n                            />\r\n                        <SkipButton onClick={this.back}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst BeaconScan = connect(\r\n    beaconMapStateToProps,\r\n    {\r\n        setBeaconView,\r\n        setBeaconHide,\r\n        setBeaconDefaultView,\r\n        setBeaconDefaultHide,\r\n        getBeaconParams,\r\n        setBeaconParams,\r\n        getBeaconInfo,\r\n        setAplicationOpenViewd,\r\n        setBluetoothAccess,\r\n        setGpsAccess,\r\n        setPushAccess,\r\n        getAppVersion,\r\n        showPopup,\r\n        hidePopup\r\n    }\r\n    )(_BeaconScan);\r\n\r\nclass Switch extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isON: props.isON ? true : false\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle(){\r\n        if(this.props.click) this.props.click()\r\n        this.setState(state=>({\r\n            ...state,\r\n            isON: !state.isON\r\n        }),()=>{setTimeout(()=>{\r\n            this.setState({\r\n                ...this.state,\r\n                isON: this.props.isON\r\n            })\r\n        },500)})\r\n    }\r\n\r\n    componentDidUpdate(pP, pS){\r\n        // if(pP.name==='Bluetooth')console.log('props:', pP.isON, this.props.isON)\r\n        // if(pP.name==='Bluetooth')console.log('state:', pS.isON, this.state.isON)\r\n        if(pP.isON !== this.props.isON && this.props.isON !== this.state.isON){\r\n            this.setState(state=>({\r\n                ...state,\r\n                isON: this.props.isON\r\n            }))\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { colorTheme, name, nameStyle, isON } = this.props\r\n        const ON = this.state.isON ? 'on' : ''\r\n        return(\r\n            <div className={`switch_box ${ON} ${colorTheme}`}>\r\n                <div className=\"box_text\" style={nameStyle}>{name}</div>\r\n                <div className=\"box_switch\" onClick={this.toggle}>\r\n                    <div className=\"switchOn\"></div>\r\n                    <div className=\"switchLever\"></div>\r\n                    <div className=\"switchOff\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass SkipButton extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            on: false\r\n        }\r\n        this.on = this.on.bind(this)\r\n        this.off = this.off.bind(this)\r\n    }\r\n\r\n    on(){\r\n        this.setState(state=>({...state, on: true}))\r\n    }\r\n\r\n    off(){\r\n        this.setState(state=>({...state, on: false}))\r\n    }\r\n\r\n    render(){\r\n        const on = (this.state.on) ? 'on' : ''\r\n        return(\r\n            <div className={`setupGo ${on}`} onClick={this.props.onClick} onTouchStart={this.on} onTouchCancel={this.off} onTouchEnd={this.off}>\r\n                <div className=\"setupGoText\" data-translate=\"main_beacon_skip\">пропустить</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ScanQR extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            on: false\r\n        }\r\n        this.on = this.on.bind(this)\r\n        this.off = this.off.bind(this)\r\n    }\r\n\r\n    on(){\r\n        this.setState(state=>({...state, on: true}))\r\n    }\r\n\r\n    off(){\r\n        this.setState(state=>({...state, on: false}))\r\n    }\r\n\r\n    render(){\r\n        const on = (this.state.on) ? 'on' : ''\r\n        return(\r\n            <div className=\"techQR\">\r\n                <div className={`QRContainer ${on}`} onClick={this.props.onClick} onTouchStart={this.on} onTouchCancel={this.off} onTouchEnd={this.off}>\r\n                    <img alt='' className=\"off\" src={require('../../img/new/round_QR.svg').default}/>\r\n                    <img alt='' className=\"on\" src={require('../../img/new/round_QR_on.svg').default}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Roller15 extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            count: true,\r\n            down: 15\r\n        }\r\n        this.countDown = this.countDown.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.countdown) this.interval = setInterval(this.countDown, 1000);\r\n    }\r\n    componentDidUpdate(pP, pS){\r\n        if(!pP.countdown && this.props.countdown) {\r\n            this.setState(state=>({\r\n                ...state,\r\n                count: true\r\n            }))\r\n            this.interval = setInterval(this.countDown, 1000);\r\n        }\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval);\r\n    }\r\n    countDown(){\r\n        // console.log('state', this.state)\r\n        // console.log('props', this.props.countdown)\r\n        if(!this.state.count) {clearInterval(this.interval); return}\r\n        this.setState(state=>{\r\n            let down = state.down - 1\r\n            const count = down > -1\r\n            if(!count) {down = 15; this.props.setSearching();}\r\n            return {...state, count: count, down: down}\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"roller15\">\r\n                <div className=\"rollContainer\">\r\n                    {/* {this.state.count && <div className=\"rollCounter\">{this.state.down}</div>} */}\r\n                    {this.props.countdown && <div className=\"rollCounter\">{this.state.down}</div>}\r\n                    {/* {!this.state.count && <img alt='' src={require('../../img/new/15_i.svg').default}/>} */}\r\n                    {!this.props.countdown && <img alt='' src={require('../../img/new/15_i.svg').default}/>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { BeaconScan as default }","D:\\work\\Repo\\React\\menu\\app\\src\\elements\\specialHtmlElements.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\beacon\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\beacon\\types.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\beacon\\actions.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\api\\beacon.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\popup\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\popup\\types.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\popup\\actions.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\main\\customer\\index.js",["505","506"],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\map\\index.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\map\\actions.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\reducers\\map\\types.js",[],"D:\\work\\Repo\\React\\menu\\app\\src\\main\\map\\movingMarker.js",["507"],"import React from 'react'\r\nimport mapboxgl from 'mapbox-gl'\r\n\r\nconst L = mapboxgl\r\n\r\nL.interpolatePosition = function(p1, p2, duration, t) {\r\n    let k = t/duration;\r\n    k = (k > 0) ? k : 0;\r\n    k = (k > 1) ? 1 : k;\r\n    return L.latLng(p1.lat + k * (p2.lat - p1.lat),\r\n        p1.lng + k * (p2.lng - p1.lng));\r\n};\r\n\r\nL.Marker.MovingMarker = class extends L.Marker{\r\n    //state constants\r\n\r\n    constructor(latlngs, durations, options){\r\n        super(latlngs[0], options)\r\n        this._latlngs = latlngs.map(e => {\r\n            return L.latLng(e);\r\n        })\r\n        if (durations instanceof Array) {\r\n            this._durations = durations;\r\n        } else {\r\n            this._durations = this._createDurations(this._latlngs, durations);\r\n        }\r\n        this._currentDuration = 0;\r\n        this._currentIndex = 0;\r\n\r\n        this._state = L.Marker.MovingMarker.notStartedState;\r\n        this._startTime = 0;\r\n        this._startTimeStamp = 0;  // timestamp given by requestAnimFrame\r\n        this._pauseStartTime = 0;\r\n        this._animId = 0;\r\n        this._animRequested = false;\r\n        this._currentLine = [];\r\n        this._stations = {};\r\n    }\r\n\r\n    statics = {\r\n        notStartedState: 0,\r\n        endedState: 1,\r\n        pausedState: 2,\r\n        runState: 3\r\n    }\r\n\r\n    options = {\r\n        autostart: false,\r\n        loop: false,\r\n    }\r\n\r\n    isRunning() {\r\n        return this._state === L.Marker.MovingMarker.runState;\r\n    }\r\n\r\n    isEnded() {\r\n        return this._state === L.Marker.MovingMarker.endedState;\r\n    }\r\n\r\n    isStarted() {\r\n        return this._state !== L.Marker.MovingMarker.notStartedState;\r\n    }\r\n\r\n    isPaused() {\r\n        return this._state === L.Marker.MovingMarker.pausedState;\r\n    }\r\n\r\n    _startTime() {\r\n        if (this.isRunning()) {\r\n            return;\r\n        }\r\n\r\n        if (this.isPaused()) {\r\n            this.resume();\r\n        } else {\r\n            this._loadLine(0);\r\n            this._startAnimation();\r\n            this.fire('start');\r\n        }\r\n    }\r\n\r\n    resume() {\r\n        if (! this.isPaused()) {\r\n            return;\r\n        }\r\n        // update the current line\r\n        this._currentLine[0] = this.getLatLng();\r\n        this._currentDuration -= (this._pauseStartTime - this._startTime);\r\n        this._startAnimation();\r\n    }\r\n\r\n    pause() {\r\n        if (! this.isRunning()) {\r\n            return;\r\n        }\r\n\r\n        this._pauseStartTime = Date.now();\r\n        this._state = L.Marker.MovingMarker.pausedState;\r\n        this._stopAnimation();\r\n        this._updatePosition();\r\n    }\r\n\r\n    stop(elapsedTime) {\r\n        if (this.isEnded()) {\r\n            return;\r\n        }\r\n\r\n        this._stopAnimation();\r\n\r\n        if (typeof(elapsedTime) === 'undefined') {\r\n            // user call\r\n            elapsedTime = 0;\r\n            this._updatePosition();\r\n        }\r\n\r\n        this._state = L.Marker.MovingMarker.endedState;\r\n        this.fire('end', {elapsedTime: elapsedTime});\r\n    }\r\n\r\n    addLatLng(latlng, duration) {\r\n        this._latlngs.push(L.latLng(latlng));\r\n        this._durations.push(duration);\r\n    }\r\n\r\n    moveTo(latlng, duration) {\r\n        this._stopAnimation();\r\n        this._latlngs = [this.getLatLng(), L.latLng(latlng)];\r\n        this._durations = [duration];\r\n        this._state = L.Marker.MovingMarker.notStartedState;\r\n        this.start();\r\n        this.options.loop = false;\r\n    }\r\n\r\n    addStation(pointIndex, duration) {\r\n        if (pointIndex > this._latlngs.length - 2 || pointIndex < 1) {\r\n            return;\r\n        }\r\n        this._stations[pointIndex] = duration;\r\n    }\r\n\r\n    onAdd(map) {\r\n        L.Marker.prototype.onAdd.call(this, map);\r\n\r\n        if (this.options.autostart && (! this.isStarted())) {\r\n            this.start();\r\n            return;\r\n        }\r\n\r\n        if (this.isRunning()) {\r\n            this._resumeAnimation();\r\n        }\r\n    }\r\n\r\n    onRemove(map) {\r\n        L.Marker.prototype.onRemove.call(this, map);\r\n        this._stopAnimation();\r\n    }\r\n\r\n    _createDurations(latlngs, duration) {\r\n        let lastIndex = latlngs.length - 1;\r\n        let distances = [];\r\n        let totalDistance = 0;\r\n        let distance = 0;\r\n\r\n        // compute array of distances between points\r\n        for (let i = 0; i < lastIndex; i++) {\r\n            distance = latlngs[i + 1].distanceTo(latlngs[i]);\r\n            distances.push(distance);\r\n            totalDistance += distance;\r\n        }\r\n\r\n        let ratioDuration = duration / totalDistance;\r\n\r\n        let durations = [];\r\n        for (let i = 0; i < distances.length; i++) {\r\n            durations.push(distances[i] * ratioDuration);\r\n        }\r\n\r\n        return durations;\r\n    }\r\n\r\n    _startAnimation() {\r\n        this._state = L.Marker.MovingMarker.runState;\r\n        this._animId = L.Util.requestAnimFrame(function(timestamp) {\r\n            this._startTime = Date.now();\r\n            this._startTimeStamp = timestamp;\r\n            this._animate(timestamp);\r\n        }, this, true);\r\n        this._animRequested = true;\r\n    }\r\n\r\n    _resumeAnimation() {\r\n        console.log('resume');\r\n        if (! this._animRequested) {\r\n            this._animRequested = true;\r\n            this._animId = L.Util.requestAnimFrame(function(timestamp) {\r\n                this._animate(timestamp);\r\n            }, this, true);\r\n        }\r\n    }\r\n\r\n    _stopAnimation() {\r\n        if (this._animRequested) {\r\n            L.Util.cancelAnimFrame(this._animId);\r\n            this._animRequested = false;\r\n        }\r\n    }\r\n\r\n    _updatePosition() {\r\n        const elapsedTime = Date.now() - this._startTime;\r\n        this._animate(this._startTimeStamp + elapsedTime, true);\r\n    }\r\n\r\n    _loadLine(index) {\r\n        this._currentIndex = index;\r\n        this._currentDuration = this._durations[index];\r\n        this._currentLine = this._latlngs.slice(index, index + 2);\r\n    }\r\n\r\n    /**\r\n     * Load the line where the marker is\r\n     * @param  {Number} timestamp\r\n     * @return {Number} elapsed time on the current line or null if\r\n     * we reached the end or marker is at a station\r\n     */\r\n    _updateLine(timestamp) {\r\n        // time elapsed since the last latlng\r\n        let elapsedTime = timestamp - this._startTimeStamp;\r\n\r\n        // not enough time to update the line\r\n        if (elapsedTime <= this._currentDuration) {\r\n            return elapsedTime;\r\n        }\r\n\r\n        let lineIndex = this._currentIndex;\r\n        let lineDuration = this._currentDuration;\r\n        \r\n        //console.log('lineIndex: '+lineIndex);\r\n        //console.log('lineDuration: '+lineDuration);\r\n        \r\n        let stationDuration;\r\n\r\n        while (elapsedTime > lineDuration) {\r\n            // substract time of the current line\r\n            elapsedTime -= lineDuration;\r\n            stationDuration = this._stations[lineIndex + 1];\r\n\r\n            // test if there is a station at the end of the line\r\n            if (stationDuration !== undefined) {\r\n                if (elapsedTime < stationDuration) {\r\n                    this.setLatLng(this._latlngs[lineIndex + 1]);\r\n                    return null;\r\n                }\r\n                elapsedTime -= stationDuration;\r\n            }\r\n\r\n            lineIndex++;\r\n\r\n            // test if we have reached the end of the polyline\r\n            if (lineIndex >= this._latlngs.length - 1) {\r\n\r\n                if (this.options.loop) {\r\n                    lineIndex = 0;\r\n                    this.fire('loop', {elapsedTime: elapsedTime});\r\n                } else {\r\n                    // place the marker at the end, else it would be at\r\n                    // the last position\r\n                    this.setLatLng(this._latlngs[this._latlngs.length - 1]);\r\n                    this.stop(elapsedTime);\r\n                    return null;\r\n                }\r\n            }\r\n            lineDuration = this._durations[lineIndex];\r\n        }\r\n\r\n        this._loadLine(lineIndex);\r\n        this._startTimeStamp = timestamp - elapsedTime;\r\n        this._startTime = Date.now() - elapsedTime;\r\n        return elapsedTime;\r\n    }\r\n\r\n    _animate(timestamp, noRequestAnim) {\r\n        this._animRequested = false;\r\n\r\n        // find the next line and compute the new elapsedTime\r\n        let elapsedTime = this._updateLine(timestamp);\r\n\r\n        if (this.isEnded()) {\r\n            // no need to animate\r\n            return;\r\n        }\r\n\r\n        if (elapsedTime != null) {\r\n             // compute the position\r\n            let p = L.interpolatePosition(this._currentLine[0],\r\n                this._currentLine[1],\r\n                this._currentDuration,\r\n                elapsedTime);\r\n            this.setLatLng(p);\r\n        }\r\n\r\n        if (! noRequestAnim) {\r\n            this._animId = L.Util.requestAnimFrame(this._animate, this, false);\r\n            this._animRequested = true;\r\n        }\r\n    }\r\n};\r\n\r\nL.Marker.movingMarker = function (latlngs, duration, options) {\r\n    return new L.Marker.MovingMarker(latlngs, duration, options);\r\n};\r\n/*\r\nL.Polyline = L.Polyline.include({\r\n    getDistance: function(system) {\r\n        // distance in meters\r\n        var mDistanse = 0,\r\n            length = this._latlngs.length;\r\n        for (var i = 1; i < length; i++) {\r\n            mDistanse += this._latlngs[i].distanceTo(this._latlngs[i - 1]);\r\n        }\r\n        // optional\r\n        if (system === 'imperial') {\r\n            return mDistanse / 1609.34;\r\n        } else {\r\n            return mDistanse / 1000;\r\n        }\r\n    }\r\n});\r\n*/\r\n\r\nexport { L as default }",["508","509"],"D:\\work\\Repo\\React\\menu\\app\\src\\main\\customer\\map.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\index.js",[],["510","511"],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\app\\actions.js",["512","513","514","515"],"import * as types from './types'\r\nimport { store } from '../index'\r\n\r\nimport apiMachine from '../../api/machines'\r\nimport apiApp from '../../api/app'\r\nimport {\r\n    thunkAddToMachine as addToMachine,\r\n    thunkRemoveFromMachine as removeFromMachine\r\n} from '../menu/actions'\r\nimport { showPopup } from '../popup/actions'\r\n\r\nfunction initializedSuccess() {\r\n    return {\r\n      type: types.INITIALIZED_SUCCESS\r\n    }\r\n}\r\n\r\nfunction initializedFail() {\r\n    return {\r\n      type: types.INITIALIZED_FAIL\r\n    }\r\n}\r\n\r\nfunction loadMachines(list) {\r\n    return {\r\n      type: types.LOAD_MACHINES_LIST,\r\n      payload: list\r\n    }\r\n}\r\n\r\nfunction setActiveMachine(id) {\r\n    return {\r\n      type: types.SET_ACTIVE_MACHINE,\r\n      payload: id\r\n    }\r\n}\r\n\r\nfunction unsetActiveMachine() {\r\n    store.dispatch(thunkCloseLockMachine())\r\n    return {\r\n      type: types.UNSET_ACTIVE_MACHINE\r\n    }\r\n}\r\n\r\nfunction appActivate(){\r\n    store.dispatch(unsetActiveMachine())\r\n}\r\n\r\nfunction qrScanResult(result, code){\r\n    if(result){\r\n        store.dispatch(analizeQRcodeResult(result, code))\r\n    }else{\r\n        // popup\r\n        store.dispatch(showPopup({content: 'Ошибка чтения QR устройством'}))\r\n        console.log('Ошибка чтения QR устройством')\r\n    }\r\n    \r\n}\r\n\r\nconst analizeQRcodeResult = (result, code) => (dispatch, getState) => {\r\n    const decode = wtf(code)\r\n    console.log('decode QR string', decode)\r\n    const { menu, app } = getState()\r\n    switch (decode.type){\r\n        case 'machine':\r\n            const { machines } = app\r\n            if(machines && machines.filter(item=>+decode.id===+item.id).length){\r\n                dispatch(setActiveMachine(decode.id))\r\n            }else{\r\n                // popup\r\n                store.dispatch(showPopup({content: 'Данного магазина нет в списке'}))\r\n                console.log('Данного магазина нет в списке')\r\n            }\r\n            break;\r\n        case 'menu':\r\n            const { add, remove } = menu\r\n            const { action } = app\r\n            if(!action){\r\n                store.dispatch(showPopup({content: 'Не выбрано действие: изъятие или перемещение'}))\r\n                console.log('Не выбрано действие: изъятие или перемещение')\r\n                return\r\n            }\r\n            const list = (action === 'add') ? add : remove\r\n            if(list && list.filter(item=>+decode.id===+item.id).length){\r\n                if(action === 'add') dispatch(addToMachine(decode))\r\n                if(action === 'remove') dispatch(removeFromMachine(decode))\r\n            }else{\r\n                // popup\r\n                store.dispatch(showPopup({content: 'Данного блюда нет в списке'}))\r\n                console.log('Данного блюда нет в списке')\r\n            }\r\n            break;\r\n        default:\r\n            // popup\r\n            store.dispatch(showPopup({content: 'QR-код имеет неверный формат'}))\r\n            console.log('QR-код имеет неверный формат')\r\n    }\r\n}\r\n\r\nfunction wtf(code){\r\n    const result = { type:null, id:null }\r\n    let params;\r\n        try{\r\n            if(typeof code == 'string') code = code.replace(/'/g,`\"`);\r\n            params = JSON.parse(code)\r\n        }catch (e) {\r\n            params = null\r\n        }\r\n        if(params && params.id){\r\n            result.type = 'menu'\r\n            result.id = params.id\r\n        }else{\r\n            const url = getURL(code)\r\n            if(url){\r\n                const params = new URLSearchParams(url.search)\r\n                const customer = params.get('restoran')\r\n                const id = params.get('table')\r\n                result.type = 'machine'\r\n                result.id = id\r\n                result.customer = customer\r\n            }\r\n        }\r\n    return result\r\n}\r\n\r\nfunction getURL(str){\r\n    let regURL = /^(?:(?:https?|ftp|telnet):\\/\\/(?:[a-z0-9_-]{1,32}(?::[a-z0-9_-]{1,32})?@)?)?(?:(?:[a-z0-9-]{1,128}\\.)+(?:com|tech|[a-z]{2})|(?!0)(?:(?!0[^.]|255)[0-9]{1,3}\\.){3}(?!0|255)[0-9]{1,3})(?:\\/[a-z0-9.,_@%&?+=\\~\\/-]*)?(?:#[^ \\'\\\"&<>]*)?$/i;\r\n    if(regURL.test(str)){\r\n        let a = document.createElement('a');\r\n        a.href = str;\r\n        if(a.pathname.indexOf('menu.php')===-1) return false\r\n        if(a.search.indexOf('restoran')!==-1 && a.search.indexOf('table')!==-1) return a\r\n        return false;\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n\r\nconst thunkInitialize = () => (dispatch, getState) => {\r\n    dispatch(getListMachines())\r\n        .then(()=>{\r\n            dispatch(initializedSuccess())\r\n            })\r\n        .catch(err=>{\r\n            dispatch(initializedFail())\r\n        })\r\n}\r\n\r\nfunction openLockMachine(){\r\n    return {\r\n        type: types.OPEN_ACTIVE_MACHINE\r\n    }\r\n}\r\n\r\nfunction closeLockMachine(){\r\n    return {\r\n        type: types.CLOSE_ACTIVE_MACHINE\r\n    }\r\n}\r\n\r\nconst thunkOpenLockMachine = () => (dispatch, getState) => {\r\n    const { app } = getState()\r\n    const params = {id: app.activeMachine}\r\n    return apiMachine.openMachine(()=>dispatch(openLockMachine()), params)\r\n}\r\n\r\nconst thunkCloseLockMachine = () => (dispatch, getState) => {\r\n    const { app } = getState()\r\n    if(app.activeMachine){\r\n        const params = {id: app.activeMachine}\r\n        return apiMachine.openMachine(()=>dispatch(closeLockMachine()), params)\r\n    }\r\n}\r\n\r\nconst thunkGetLockMachine = () => (dispatch, getState) => {\r\n    const { app } = getState()\r\n    const params = {id: app.activeMachine}\r\n    return apiMachine.isOpenedMachine((data)=>{\r\n        if(data.opened){\r\n            dispatch(openLockMachine())\r\n        }else{\r\n            dispatch(closeLockMachine())\r\n        }\r\n    }, params)\r\n}\r\n\r\nfunction reducer_openLockMachine({machines, active}){\r\n    if(!machines) return {machines: machines}\r\n    const list = machines.map(el=>{\r\n        if(+el.id!==+active) return el\r\n        el.opened = true\r\n        return el\r\n    })\r\n    return {machines: list}\r\n}\r\n\r\nfunction reducer_closeLockMachine({machines, active}){\r\n    if(!machines) return {machines: machines}\r\n    const list = machines.map(el=>{\r\n        if(+el.id!==+active) return el\r\n        el.opened = false\r\n        return el\r\n    })\r\n    return {machines: list}\r\n}\r\n\r\nconst getListMachines = () => (dispatch, getState) => {\r\n    return apiMachine.loadMachines(data=>dispatch(loadMachines(data)))\r\n}\r\n\r\nconst goToScan = () => () => {\r\n    return apiApp.setApplicationScanQR(()=>{})\r\n}\r\n\r\nfunction setAddMeals(){\r\n    return {\r\n        type: types.SET_ADD_MEALS\r\n    }\r\n}\r\n\r\nfunction setRemoveMeals(){\r\n    return {\r\n        type: types.SET_REMOVE_MEALS\r\n    }\r\n}\r\n\r\nfunction unsetActionMeals(){\r\n    return {\r\n        type: types.UNSET_ACTION_MEALS\r\n    }\r\n}\r\n\r\nexport {\r\n    thunkInitialize as initializeApp,\r\n    qrScanResult,\r\n    setActiveMachine,\r\n    unsetActiveMachine,\r\n    goToScan,\r\n    thunkOpenLockMachine,\r\n    thunkCloseLockMachine,\r\n    thunkGetLockMachine,\r\n    reducer_openLockMachine,\r\n    reducer_closeLockMachine,\r\n    getListMachines,\r\n    appActivate,\r\n    setAddMeals,\r\n    setRemoveMeals,\r\n    unsetActionMeals\r\n}","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\index.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\app\\index.js",["516"],"import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n  Route\r\n} from 'react-router-dom'\r\nimport { withRouter } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { initializeApp } from '../reducers/app/actions'\r\nimport { appMapStateToProps } from '../reducers/app'\r\n\r\nimport Footer from '../main/footer'\r\nimport Header from '../main/header'\r\n\r\nimport AppMap from '../main/map'\r\nimport AppMachine from '../main/machine'\r\nimport AppMachineAdd from '../main/machine/add'\r\nimport AppMachineChange from '../main/machine/change.js'\r\nimport Popup from '../elements/popup'\r\n\r\nimport '../css/index.scss';\r\n\r\nclass _App extends React.Component{\r\n  componentDidMount(){\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    console.log('App (update) props', this.props)\r\n  }\r\n\r\n  render(){\r\n    const { popup } = this.props\r\n    const actualPage = window.location.pathname\r\n    const pageClassName = ['page'];\r\n    if(popup) pageClassName.push('popupShow')\r\n    console.log('App props (render)', this.props, 'actualPage', actualPage)\r\n    return(\r\n      <>\r\n        <div className={pageClassName.join(' ')}>\r\n        <Router>\r\n        <Crutch />\r\n        <Header actualPage={actualPage}/>\r\n            <Switch>\r\n              <Route exact path='/'>\r\n                <Redirect to='/courier'/>\r\n              </Route>\r\n              <Route exact path='/courier'>\r\n                <AppMap rootPath='/courier'/>\r\n              </Route>\r\n              <Route exact path='/courier/machine'>\r\n                <AppMachine rootPath='/courier/machine'/>\r\n              </Route>\r\n              <Route path='/courier/machine/add'>\r\n                <AppMachineChange />\r\n              </Route>\r\n              <Route path='/courier/machine/remove'>\r\n                <AppMachineChange />\r\n              </Route>\r\n            </Switch>\r\n        <Footer actualPage={actualPage}/>\r\n        </Router>\r\n        </div>\r\n        <Popup />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst Crutch_ = props => {\r\n  const { history } = props\r\n  const actualPage = history.location.pathname\r\n  console.log(actualPage)\r\n  const redirect = (actualPage.indexOf('index.html') !== -1) ? <Redirect to='/courier'/> : null\r\n  return redirect\r\n}\r\nconst Crutch = withRouter(Crutch_)\r\n\r\nexport default connect(\r\n  appMapStateToProps,\r\n    { initializeApp }\r\n  )(_App)","D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\app\\types.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\user\\actions.js",["517"],"import * as types from './types'\r\nimport api from '../../api/user'\r\nimport { store } from '../index'\r\nimport { clearAuthData } from '../auth/actions'\r\n\r\nfunction logOut() {\r\n  setTimeout(()=>window.location.assign('/'), 1000)\r\n  store.dispatch(clearAuthData())\r\n  return {\r\n    type: types.LOG_OUT\r\n  }\r\n}\r\n  \r\nfunction userGeo(params) {\r\n  return {\r\n    type: types.SET_USER_GEO,\r\n    payload: params\r\n  }\r\n}\r\n\r\nconst setUserGeo = params => {\r\n  store.dispatch(userGeo(params))\r\n}\r\n\r\nexport {\r\n  logOut,\r\n  setUserGeo\r\n}","D:\\work\\Repo\\React\\adm_courier\\src\\api\\config.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\user\\index.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\user\\types.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\app\\index.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\popup\\index.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\auth\\index.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\menu\\index.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\selectors\\index.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\auth\\types.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\popup\\actions.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\menu\\actions.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\popup\\types.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\menu\\types.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\api\\menu.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\main\\map\\index.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\main\\machine\\index.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\main\\machine\\add\\index.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\main\\footer\\index.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\main\\header\\index.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\elements\\popup\\index.js",["518"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { popupMapStateToProps } from '../../reducers'\r\nimport { hidePopup, showPopup } from '../../reducers/popup/actions'\r\n\r\nimport '../../css/popup.scss'\r\n\r\nclass _Popup extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      show: false\r\n    }\r\n    this.hide = this.hide.bind(this)\r\n    this._hide = this._hide.bind(this)\r\n  }\r\n  componentDidMount(){\r\n    if(this.props.show) this.setState(state=>({...state, show: true}))\r\n  }\r\n\r\n  componentDidUpdate(pP, pS){\r\n    const { show } = this.props\r\n    if(show !== pP.show && show !== this.state.show) this.setState(state=>({...state, show: show}))\r\n  }\r\n\r\n  hide(e){\r\n    this.setState(state=>({...state, show: false}), this._hide)  \r\n  }\r\n\r\n  _hide(){\r\n    setTimeout(this.props.hidePopup, 300)\r\n  }\r\n\r\n  render(){\r\n    console.log('Popup props', this.props, 'Popup state', this.state)\r\n    const { show, canClose, content, title } = this.props\r\n    const click = (canClose) ? {onClick:this.hide} : {}\r\n    const showClass = (this.state.show) ? 'show' : ''\r\n    return(<>\r\n      {(show || this.state.show) &&\r\n      <div id=\"popupDom\">\r\n        <div className=\"popupBack\" {...click}>\r\n          <div className={`popupWindow ${showClass}`} onClick={(e)=>e.stopPropagation()}>\r\n            <span className=\"message\">{content}</span>\r\n            {canClose && <span className=\"close\" {...click}>Закрыть</span>}\r\n          </div>\r\n        </div>\r\n      </div>}\r\n      </>);\r\n  }\r\n}\r\n\r\nconst Popup = connect(\r\n  popupMapStateToProps,\r\n  {\r\n      showPopup,\r\n      hidePopup\r\n  }\r\n  )(_Popup);\r\n\r\nexport { Popup as default};","D:\\work\\Repo\\React\\adm_courier\\src\\elements\\specialHtmlElements.js",[],["519","520"],"D:\\work\\Repo\\React\\adm_courier\\src\\js.lib\\math.js",["521","522","523","524","525","526","527"],"D:\\work\\Repo\\React\\adm_courier\\src\\api\\app.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\api\\machines.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\api\\user.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\reducers\\auth\\actions.js",[],"D:\\work\\Repo\\React\\adm_courier\\src\\main\\machine\\change.js",[],{"ruleId":"528","replacedBy":"529"},{"ruleId":"530","replacedBy":"531"},{"ruleId":"532","severity":1,"message":"533","line":10,"column":10,"nodeType":"534","messageId":"535","endLine":10,"endColumn":15},{"ruleId":"532","severity":1,"message":"536","line":45,"column":17,"nodeType":"534","messageId":"535","endLine":45,"endColumn":25},{"ruleId":"532","severity":1,"message":"537","line":1,"column":17,"nodeType":"534","messageId":"535","endLine":1,"endColumn":25},{"ruleId":"532","severity":1,"message":"538","line":2,"column":8,"nodeType":"534","messageId":"535","endLine":2,"endColumn":17},{"ruleId":"532","severity":1,"message":"539","line":10,"column":19,"nodeType":"534","messageId":"535","endLine":10,"endColumn":29},{"ruleId":"532","severity":1,"message":"540","line":105,"column":23,"nodeType":"534","messageId":"535","endLine":105,"endColumn":27},{"ruleId":"532","severity":1,"message":"541","line":8,"column":10,"nodeType":"534","messageId":"535","endLine":8,"endColumn":16},{"ruleId":"532","severity":1,"message":"542","line":293,"column":19,"nodeType":"534","messageId":"535","endLine":293,"endColumn":23},{"ruleId":"532","severity":1,"message":"543","line":703,"column":24,"nodeType":"534","messageId":"535","endLine":703,"endColumn":32},{"ruleId":"532","severity":1,"message":"544","line":703,"column":38,"nodeType":"534","messageId":"535","endLine":703,"endColumn":47},{"ruleId":"532","severity":1,"message":"545","line":703,"column":63,"nodeType":"534","messageId":"535","endLine":703,"endColumn":67},{"ruleId":"546","severity":1,"message":"547","line":848,"column":14,"nodeType":"548","messageId":"549","endLine":848,"endColumn":16},{"ruleId":"546","severity":1,"message":"550","line":3,"column":16,"nodeType":"548","messageId":"549","endLine":3,"endColumn":18},{"ruleId":"546","severity":1,"message":"550","line":3,"column":29,"nodeType":"548","messageId":"549","endLine":3,"endColumn":31},{"ruleId":"546","severity":1,"message":"550","line":38,"column":16,"nodeType":"548","messageId":"549","endLine":38,"endColumn":18},{"ruleId":"546","severity":1,"message":"550","line":38,"column":29,"nodeType":"548","messageId":"549","endLine":38,"endColumn":31},{"ruleId":"546","severity":1,"message":"547","line":86,"column":32,"nodeType":"548","messageId":"549","endLine":86,"endColumn":34},{"ruleId":"546","severity":1,"message":"550","line":100,"column":15,"nodeType":"548","messageId":"549","endLine":100,"endColumn":17},{"ruleId":"546","severity":1,"message":"550","line":100,"column":26,"nodeType":"548","messageId":"549","endLine":100,"endColumn":28},{"ruleId":"528","replacedBy":"551"},{"ruleId":"530","replacedBy":"552"},{"ruleId":"553","severity":1,"message":"554","line":21,"column":1,"nodeType":"555","endLine":33,"endColumn":2},{"ruleId":"553","severity":1,"message":"554","line":16,"column":1,"nodeType":"555","endLine":46,"endColumn":2},{"ruleId":"532","severity":1,"message":"556","line":59,"column":25,"nodeType":"534","messageId":"535","endLine":59,"endColumn":27},{"ruleId":"546","severity":1,"message":"550","line":124,"column":34,"nodeType":"548","messageId":"549","endLine":124,"endColumn":36},{"ruleId":"553","severity":1,"message":"554","line":16,"column":1,"nodeType":"555","endLine":56,"endColumn":2},{"ruleId":"532","severity":1,"message":"557","line":31,"column":17,"nodeType":"534","messageId":"535","endLine":31,"endColumn":25},{"ruleId":"532","severity":1,"message":"558","line":15,"column":10,"nodeType":"534","messageId":"535","endLine":15,"endColumn":14},{"ruleId":"532","severity":1,"message":"556","line":102,"column":23,"nodeType":"534","messageId":"535","endLine":102,"endColumn":25},{"ruleId":"559","severity":1,"message":"560","line":107,"column":43,"nodeType":"561","messageId":"562","endLine":107,"endColumn":45},{"ruleId":"559","severity":1,"message":"560","line":107,"column":53,"nodeType":"561","messageId":"562","endLine":107,"endColumn":55},{"ruleId":"559","severity":1,"message":"563","line":107,"column":53,"nodeType":"561","messageId":"562","endLine":107,"endColumn":55},{"ruleId":"559","severity":1,"message":"563","line":107,"column":65,"nodeType":"561","messageId":"562","endLine":107,"endColumn":67},{"ruleId":"546","severity":1,"message":"547","line":265,"column":31,"nodeType":"548","messageId":"549","endLine":265,"endColumn":33},{"ruleId":"532","severity":1,"message":"545","line":442,"column":11,"nodeType":"534","messageId":"535","endLine":442,"endColumn":15},{"ruleId":"532","severity":1,"message":"564","line":485,"column":17,"nodeType":"534","messageId":"535","endLine":485,"endColumn":21},{"ruleId":"532","severity":1,"message":"565","line":485,"column":23,"nodeType":"534","messageId":"535","endLine":485,"endColumn":33},{"ruleId":"532","severity":1,"message":"566","line":38,"column":38,"nodeType":"534","messageId":"535","endLine":38,"endColumn":43},{"ruleId":"553","severity":1,"message":"554","line":16,"column":1,"nodeType":"555","endLine":37,"endColumn":2},{"ruleId":"532","severity":1,"message":"539","line":5,"column":19,"nodeType":"534","messageId":"535","endLine":5,"endColumn":29},{"ruleId":"532","severity":1,"message":"533","line":6,"column":10,"nodeType":"534","messageId":"535","endLine":6,"endColumn":15},{"ruleId":"532","severity":1,"message":"567","line":695,"column":43,"nodeType":"534","messageId":"535","endLine":695,"endColumn":51},{"ruleId":"532","severity":1,"message":"568","line":696,"column":39,"nodeType":"534","messageId":"535","endLine":696,"endColumn":45},{"ruleId":"532","severity":1,"message":"567","line":723,"column":43,"nodeType":"534","messageId":"535","endLine":723,"endColumn":51},{"ruleId":"532","severity":1,"message":"568","line":724,"column":39,"nodeType":"534","messageId":"535","endLine":724,"endColumn":45},{"ruleId":"532","severity":1,"message":"569","line":5,"column":15,"nodeType":"534","messageId":"535","endLine":5,"endColumn":23},{"ruleId":"546","severity":1,"message":"550","line":5,"column":12,"nodeType":"548","messageId":"549","endLine":5,"endColumn":14},{"ruleId":"546","severity":1,"message":"550","line":5,"column":25,"nodeType":"548","messageId":"549","endLine":5,"endColumn":27},{"ruleId":"546","severity":1,"message":"547","line":33,"column":33,"nodeType":"548","messageId":"549","endLine":33,"endColumn":35},{"ruleId":"546","severity":1,"message":"550","line":43,"column":12,"nodeType":"548","messageId":"549","endLine":43,"endColumn":14},{"ruleId":"546","severity":1,"message":"550","line":43,"column":25,"nodeType":"548","messageId":"549","endLine":43,"endColumn":27},{"ruleId":"546","severity":1,"message":"547","line":67,"column":37,"nodeType":"548","messageId":"549","endLine":67,"endColumn":39},{"ruleId":"546","severity":1,"message":"550","line":108,"column":11,"nodeType":"548","messageId":"549","endLine":108,"endColumn":13},{"ruleId":"546","severity":1,"message":"550","line":108,"column":22,"nodeType":"548","messageId":"549","endLine":108,"endColumn":24},{"ruleId":"546","severity":1,"message":"547","line":136,"column":33,"nodeType":"548","messageId":"549","endLine":136,"endColumn":35},{"ruleId":"532","severity":1,"message":"570","line":57,"column":33,"nodeType":"534","messageId":"535","endLine":57,"endColumn":37},{"ruleId":"532","severity":1,"message":"571","line":193,"column":46,"nodeType":"534","messageId":"535","endLine":193,"endColumn":50},{"ruleId":"532","severity":1,"message":"572","line":19,"column":65,"nodeType":"534","messageId":"535","endLine":19,"endColumn":73},{"ruleId":"532","severity":1,"message":"573","line":131,"column":24,"nodeType":"534","messageId":"535","endLine":131,"endColumn":28},{"ruleId":"532","severity":1,"message":"574","line":1,"column":8,"nodeType":"534","messageId":"535","endLine":1,"endColumn":13},{"ruleId":"528","replacedBy":"575"},{"ruleId":"530","replacedBy":"576"},{"ruleId":"528","replacedBy":"577"},{"ruleId":"530","replacedBy":"578"},{"ruleId":"579","severity":1,"message":"580","line":127,"column":221,"nodeType":"581","messageId":"582","endLine":127,"endColumn":222,"suggestions":"583"},{"ruleId":"579","severity":1,"message":"584","line":127,"column":223,"nodeType":"581","messageId":"582","endLine":127,"endColumn":224,"suggestions":"585"},{"ruleId":"579","severity":1,"message":"586","line":127,"column":237,"nodeType":"581","messageId":"582","endLine":127,"endColumn":238,"suggestions":"587"},{"ruleId":"579","severity":1,"message":"588","line":127,"column":239,"nodeType":"581","messageId":"582","endLine":127,"endColumn":240,"suggestions":"589"},{"ruleId":"532","severity":1,"message":"590","line":18,"column":8,"nodeType":"534","messageId":"535","endLine":18,"endColumn":21},{"ruleId":"532","severity":1,"message":"591","line":2,"column":8,"nodeType":"534","messageId":"535","endLine":2,"endColumn":11},{"ruleId":"532","severity":1,"message":"566","line":37,"column":38,"nodeType":"534","messageId":"535","endLine":37,"endColumn":43},{"ruleId":"528","replacedBy":"592"},{"ruleId":"530","replacedBy":"593"},{"ruleId":"546","severity":1,"message":"550","line":3,"column":16,"nodeType":"548","messageId":"549","endLine":3,"endColumn":18},{"ruleId":"546","severity":1,"message":"550","line":3,"column":29,"nodeType":"548","messageId":"549","endLine":3,"endColumn":31},{"ruleId":"546","severity":1,"message":"550","line":38,"column":16,"nodeType":"548","messageId":"549","endLine":38,"endColumn":18},{"ruleId":"546","severity":1,"message":"550","line":38,"column":29,"nodeType":"548","messageId":"549","endLine":38,"endColumn":31},{"ruleId":"546","severity":1,"message":"547","line":86,"column":32,"nodeType":"548","messageId":"549","endLine":86,"endColumn":34},{"ruleId":"546","severity":1,"message":"550","line":100,"column":15,"nodeType":"548","messageId":"549","endLine":100,"endColumn":17},{"ruleId":"546","severity":1,"message":"550","line":100,"column":26,"nodeType":"548","messageId":"549","endLine":100,"endColumn":28},"no-native-reassign",["594"],"no-negated-in-lhs",["595"],"no-unused-vars","'Popup' is defined but never used.","Identifier","unusedVar","'category' is assigned a value but never used.","'Suspense' is defined but never used.","'PropTypes' is defined but never used.","'NextButton' is defined but never used.","'user' is assigned a value but never used.","'motion' is defined but never used.","'href' is assigned a value but never used.","'favorite' is assigned a value but never used.","'id_parent' is assigned a value but never used.","'type' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["594"],["595"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'id' is assigned a value but never used.","'location' is assigned a value but never used.","'NBSP' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'back' is assigned a value but never used.","'actualPage' is assigned a value but never used.","'title' is assigned a value but never used.","'logo1000' is assigned a value but never used.","'logo25' is assigned a value but never used.","'customer' is assigned a value but never used.","'push' is assigned a value but never used.","'isON' is assigned a value but never used.","'rootPath' is assigned a value but never used.","'sale' is assigned a value but never used.","'React' is defined but never used.",["594"],["595"],["594"],["595"],"no-useless-escape","Unnecessary escape character: \\~.","Literal","unnecessaryEscape",["596","597"],"Unnecessary escape character: \\/.",["598","599"],"Unnecessary escape character: \\'.",["600","601"],"Unnecessary escape character: \\\".",["602","603"],"'AppMachineAdd' is defined but never used.","'api' is defined but never used.",["594"],["595"],"no-global-assign","no-unsafe-negation",{"messageId":"604","fix":"605","desc":"606"},{"messageId":"607","fix":"608","desc":"609"},{"messageId":"604","fix":"610","desc":"606"},{"messageId":"607","fix":"611","desc":"609"},{"messageId":"604","fix":"612","desc":"606"},{"messageId":"607","fix":"613","desc":"609"},{"messageId":"604","fix":"614","desc":"606"},{"messageId":"607","fix":"615","desc":"609"},"removeEscape",{"range":"616","text":"617"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"618","text":"619"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"620","text":"617"},{"range":"621","text":"619"},{"range":"622","text":"617"},{"range":"623","text":"619"},{"range":"624","text":"617"},{"range":"625","text":"619"},[3963,3964],"",[3963,3963],"\\",[3965,3966],[3965,3965],[3979,3980],[3979,3979],[3981,3982],[3981,3981]]